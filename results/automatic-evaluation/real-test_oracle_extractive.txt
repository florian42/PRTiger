fix relative paths in tests, attempt 1
changes get_class() to disallow null being a valid parameter, as that behaviour is highly astonishing.
2 classes) for oneclass and svr but that's a different issue)  it does now
refactor typecheckfunctionbodyrequest to return the type-checked body, and remove typecheckabstractfunctionbody in favor of a method on abstractfunctiondecl.
pandas\core\common.py:273: error: implicit generic "any".
reduces checkstyle errors in lazy-loading
issue: #13336 primarily this fixes the handling of the -s (--static-dir) flag for windows users.
new perl questions and answers
new features others this pr added basic support for 'return' grammar in dy2stat.
and some cosmetics related to the fix this also fixes issues with wrong rendering size after dpi changes and/or display switch off/on
removed typings for unexposed internals
add debug_* constants in place of the hardcoded values.
i hereby agree to the terms of the cla available at:  fix document for index.md and distinctive-features.md fix document for introduction toc priority detailed description / documentation draft: by adding documentation, you'll allow users to try your new feature immediately, not when someone else will have time to document it later.
add or edit tests to reflect the change.
add msgtraceenable config in transaction producer benchmark
* [chore]: added jsdoc comments
the wait at the end of cli integration script could end up failing if
description: when using !include_dir_list in yaml to bring in the contents of multiple yaml files as entries in a list, there is currently no way to control the order of that list.
this is an implementation of eap-tls protocol for the ppp stack.
added value error for divide by zero caused by zero variance in all features.
remove the files in the external/lua/quick from project and adjust the related configuration and lua template project
basic regex link detection
(click an open the full image if viewing on a non-retina display) this patch adds support for window.devicepixelratio in the canvas renderer.
add or edit tests to reflect the change.
fixes #100709
follow the advice from the readme.
make parenthesis optional for named expressions used with while statement.
bugfixes for aws.request 429 handling
fix a bug where you cannot switch between ct/e2e by correctly closing the existing project before opening a new one update global mode to show recent projects instead of hard-coded placeholders open recent project when selecting one from the global mode "welcome" component fix a bug where it flashes "loading" without styles on the open browser screen - now it shows the browsers immediately demo: demo2.mov
address problem with #12377 by setting threshold my appropriately.
this finishes the implementation of --window to also accept a string as the "name" of the window.
removed the unexpected expression part.
with this commit, the build script extracts the latest version string found in changelog.md, and then creates appropriate resource files for the executable compilation
convert comments to rustdocs for box, char, comm and cytpes.rs
nurbsutils: convert to esmodules
the actually number of packets read are still bound by max_num_packets_per_event_loop (6000).
when a storage class is not created, mountoptions and parameters are also not included in the file
[docs] minor edits to data frame transform apis
adding support for ptz move modes
this pr sets num_cpus=0 for the serve controller actor and the serve http proxy actors by default.
exclude notify binary from asar bundle
added set to available types
rationale it is better to compute the auctionend once during contract creation than to compute it every time someone bids.
this pr fixes the logic introduced in #15104 to only check for callback parameters when we aren't in a recursive call to comparesignaturesrelated that resulted from an outer callback check.
update the chinese electron mirror url - this should avoid the "china mirror does not have a v prepended to the electron version in the url" problem.
fix totals and extremes for delayed replica.
add examples for mxnet with horovod
fix win32 js project crash issue: 445442c
be fixed in the next commit.
sound/usb: add device quirks for a4tech fhd 1080p webcams
genericvalue: fix comparison of (ui|i)nt64 numbers
adds a working failure test for streaming and non-streaming shuffle, without lineage reconstruction.
with the following code, model.where(foo: [1, nil]) ar builds an sql like this: where foo in (1) or foo is null here's a tiny patch that makes it like this: where foo = 1 or foo is null
bringing the array up to date with the latest library code (v1.5.1):
add rss and cache memory stats for containers.
add uimanager.getconstantsforviewmanager as expected by rn 58
fix the order of unfold parameters (#34156)
moving #4885 over here -- for #4848. as we work on the new ui, let's write our stories in the new format.
change dataclasses to flax ones
[mongoose] add missing overwrite option to interface queryfindoneandupdateoptions
added relay ports to lcn lights platform
this refactoring doesn't change the api and makes good code reuse improving maintenance.
support dynamic column in the source.
don't use the eventlistener fork for modern www builds
windows explorer will show when you type explorer.exe.
so the problem here was that, when requesting another users profile (not your own), the completedchallenges array was only sent back if showcerts and showtimeline were true - aka public.
the reason for this pull request appears in a conversation for #4844 this is the first of two pull requests.
refactor xgboost.scala to avoid multiple changes when adding params
this pr adapts/utilizes recent enhancements in lucene-7.4: replaces exactnumdocs by the soft-deletes count in segmentcommitinfo.
added fingerprint for 2019 acura ilx.
fix for unstable formatting involving unwrapping multiple parentheses
add optional scope to sfdc oauth login params.
check for the packagemanagement capability for caller apps.
updated to reflect the relationship between label and input elements
[serialization] pull decl deserialization out to a helper class
implement name auction #3189
this pr fixes two issues that have been introduced by #9114. when i switched the metric from rate to tokenbucket in the controllermutationquotamanager, i have mixed up the metrics.
fix the issue that nodeos continues to accept transactions after the flight queue size exceeds the maximum flight bytes
add correct python executable to path when running cmake for ray.
some functionality in #623 was actually fairly trivial to implement.
this pr adds a handful of server rendering unit tests.
deprecate post-process uniform buffer
ref this comment in ie calling getboundingclientrect  on an element that is not attached to the dom throw an unspecified error:  saucelabs is failing because some unit test for scrollspy doesn't add the element worked on to the dom.
disable hedged requests
backends base get_many pass ready_states arg
allow media keys in milk via
[docs] update getting started for babel 6
built on #8579
sil: silfunctiontypes don't allow generic signatures where all parameters are concrete
this is to add a plugin for fakerjs as requested in #1199 the name of the plugin is gatsby-source-faker usage of the plugin is described in the readme of the plugin itself and there is an example site with the usage shown.
fix ddpg optimizers add twin delayed ddpg (td3) the original implementation compute gradients with actor optimizer and critic optimizer respectively but apply gradients with the fake optimizer defined by base class tf policy graph.
this pr adds open method to the deserializationschema and serializationschema.
don't lazy-load already-loaded image in csr
this happens only because loc is a slice (0,1) with one multiindex level instead of a scalar.
this pr extends the idweakmap to accept arbitrary key type so it is possible to use two ids as key, instead of relying on hacks to merge two ids into one id.
make to_tensor copy if data is varbase
add new pipeline for testing cuda 11.0 builds.
add typedef for container modification methods
refactoring no if relevant, link to documentation update: n/a summary getexports was returning 2 types of shape which could force its caller to deopt.
as discussed in #6, the following pr adds a cli for mermaid which is exposed as a mermaid command when installed globally, via npm install -g mermaid.
related to #20822 previously, in pr #20822, i edited a small typo in the phrase "where n_samples in the number" by updating it to "where n_samples is the number".
add support for passthrough in featureunion
reading the pagination page, i came across a couple of typos and grammar changes.
description: use previously stored brightness when turning on light.
for consistency, i've also converted all lemmatizer data to json.
[csdiag] always find and set correct declaration context for sub-expression type-check
this fixes the floating point display in the mmx/xmm/ymm editor, in the registers view in simd float/double mode, and in the watch window for floating point type watchpoints.
doing a pr now so @jackhumbert and @yiancar can see the is31fl3736 driver implementation and discuss ideas about merging with the is32fl3733 driver.
this simplifies check_is_fitted to error if no fitted attribute is found.
deferred loading for jumpto/forcepixels
handwired/arrow_pad: configurator support
tst: use pytest for some already-parametrized tests.
this fixes tooltips for scatter and bubble charts.
for #6331. as discussed.
issue #840 - url pattenr too broad
epe-1551 add test cases for cleos new option --abi-file that was added in pr#10821 to specify one or more local abi files for cleos for serialzation/deserialization offline, which doesn't require nodeos rpc endpoint.
add models to cnn benchmark
k_scheduler: mark kscopedschedulerlock as [[nodiscard]]
when queue.get is called on an empty queue, previously we would block until something was put into the queue, and similarly when calling queue.put on a full queue we would block until space was created.
enable sandbox for issue reporter and process explorer
temperature.cpp:add pid conditional integration on heated bed.
removed duplicated description for join_any_take_last_row.
sqlite.connection type now implements gc protocol
hello friends ran into this bug on our production site, prerendermanifest stores revalidation info for the index as "/": { .. }, but the code tries to access this information as "/index".
adding long running distributed tests
edits to ingest plugin docs
reintroduces #21527 (which was reverted in #21723).
doc: added examples to dataframe.mod docstring
this pr extracts common logic from codepushcore and moves it to codepushbasecore that could be used as parent class for all codepush platforms implementations.
run npm run lint package-name (or tsc if no tslint.json is present).
reduces checkstyle errors for patterns: dao data-bus data-locality data-mapper data-transfer-object decorator changes involved java docs reordering imports indentations line length issues
force curly braces for one-line control elements (eg.
[zipfldr] add some bitmap resources
original pull requests: #3497, #3695, #3698, #3699, #3704, #3723, #3735.
improve(buble): prefer use "sourcemap" type from official package, instead of manually defining it
rewrote the function runner to make the logging behavior consistent across both the trainable class apu and the function api.
adds links to flax colabs did you read the contributor guideline, was this discussed/approved via a github issue or the forum?
fixing bc for question answering with long context.
change due to security concerns, this change disables local manifest files by default.
use build type set in .travis.yml
description: quick version push of lupupy to 0.0.17. this will now correctly transmit the state alarm_triggered which can be used in automations etc.
the vendored libmpdec has been partially updated in 9b9f158, this completes the update to upstream version 2.5.1. patch provided by stefan krah.
this addresses cleanups asked for in the comments of #9560.
left/right trim/ltrim/rtrim timestampadd/timestampsub other interval-relarted improvements additional case insensitive functions #3712 #3714 #3704 #3705
@raisedadead per our discussion, i have removed all but the spanish translations in the /docs/i18n folder.
ci: speed up src retrieval
updated dark mode colors.
_convert_scalar_indexer is called with kind="iloc" from only one place, and in that case the base class method is equivalent to just the 1-liner self._validate_indexer("positional", key, "iloc") all subclasses just call the base class method so by inlining that 1-liner, we can take the "iloc" case out of _convert_scalar_indexer altogether.
with this change systemd will log about all processes killed due to the session
as i mentioned the issue #1503 ,i translated index.md to japanese.
additions to the s3 filesystem code to allow testing of whether twiddling timeouts will address connectivity issues discussed in #15868
fix handling of c arguments
includes fixes from #487 and other fixes to try to get the tests to run cleanly.
so the pairing ui should accept the pin code with and without dashes.
[art] adds a param to appendart to specify the prefix, and utilise for setting art for children of tvshows, seasons + albums
(can move it if we prefer) comments about weights & biases w&b is really nice.
converted the guidelines/logo page to theme-ui.
it is a mostly mechanical sequence of steps to remove some abstractions that are no longer in use.
this pr fixes remark lint warnings for the readme files in the contrib directory.
[csdiag] nfc: remove obsolete trailing closure diagnostics
adding missing documentation for many apis
#2922 cause helix:led_test build break.
implement websocket close notify.
fixed mypy errors in aws/sensors
fix exports for react-icons lib to comply with commonjs
optimize crf decoding with avx/avx2 instruction
description this pr migrates the doc's app bar page to hooks.
fixing workflow badge to point to the master branch and not forks with pr.
this transitions liballoc to rust 2018 edition and applies relevant idiom lints.
add or edit tests to reflect the change.
fix k8s api bugs
fix infra graph for s3 notifications and add test
ensure hidden windows don't have focused webcontents
wrong "too many indexers" error message when indexing a series with multiindex
removing duplicate text-decoration style for abbr[title] #33197
closes #30904 (fixed between nightly-2019-07-14 and nightly-2019-07-31) closes #40231 (example 1 is fixed in 1.32.0, example 2 is fixed in 1.38.0) closes #52432 (fixed in rustc 1.40.0-beta.1 (76b4053 2019-11-05)) closes #63279 (fixed in rustc 1.40.0-nightly (246be7e 2019-10-25)) r?
the initial bottom panel size on small screens was too big changed the initial value of the bottom panel size to be dynamic to the screen.
change adds the id to the manifest fields telemetry event, and logs a detailed search request event.
updates the colors for the docs code snippets when using a dark color scheme.
test passed for pb 2.6.0, 3.0.0, 3.6.0, 3.7.0, 3.8.0
there is a bug in current watermark accounting that headers and trailers are not counted.
related to  when command error message and ping "dummy" result json is published from cmndping(), and there is a rule on ping result, json gets broken as per the example below.
using next.js router instead of custom history api
add basic docs for searchable snapshots rest apis
fixes #1236 build the development environment as a docker image with the pr, we can build the development docker image by: git clone --recursive  cd paddle docker build -t paddle:dev -f paddle/scripts/docker/dockerfile .
gradually improving the windows build experience, so far: clean deletes all specified folders (doesn't stop on first missing one) build removes any path entry containing a msbuild.exe (avoids node-gyp errors)
develop merge master develop merge master format the pull request title like [issue #123] fix unknownexception when host config not exist.
adds features and method with docstrings update user guide whats new add tests this pr adds the method format_index so that the typical format routines can also be applied to display the index labels and columns headers of a styler.
prevent the delay to charge the netfilter alarm
there are some random failures of apiv3 tests during ci on github (github actions).
add batchsize and offset to batch publication
the function added for styler here is a more general pattern search, and it allows the result to be viewed in jupyter notebook directly, which the precursor does not.
on iso
at the same time, this pr wraps panopticapi so that the evaluation of panoptic segmentation can also be run on ceph.
rounding x coord does not consider negative values and it causes a font blurry in some cases.
add support for the new nook_magic
removed override this.receiveshadow = undefined
adding plugins
issue: - this supercedes #13458 avoid bundling all supported syntax highlighter languages for addon-docs, but rather just the ones we need.
this addition of manual_probe_start_z being defined in conditionals_post.h messes up manual mesh bed levelling.
update link styles for /manage page
doc: recommend out-of-source build
negatesignatures is called with a signature which has not yet had the hashtype appended to it, yet the function assumed a hashtype was there and was incorrectly saving and then appending the last byte of its input (ie the last byte of the original s instead of a hashtype).
uninstall old ray in all release test app configs
tuya: fix setoption20 for oittm/moes
te easiest way to use the spacy tokenizer is the one i propose here.
try to simplify the pdfsinglepageviewer._scrollintoview method slightly, by unconditionally ensuring that rendering always occurs
current behavior of effect dependencies on render phase updates
we only really care about the glibc api, but we probably should only use the official parts, wherever possible.
description: this pr breaks out one of the concepts from #6161 -- an efficient mechanism for remembering a set of statnames to reject, to use for caching the results of the stats-matcher.
feature: public namespace in many formats
changing it from a generic "bad request" to 431 (request header fields too large) moving the existing h2 integration test to integration.cc and adding http/1.1 coverage.
fix failing test
fixing led pins to accurately use the pro micro leds
update statusbaritem.host colors
this is a follow up to #24305 which ended up breaking getsentry tests.
the cards with images on the card page didn't have images for both the avatar and card during that time.
add failing test for suspense layout semantics
silence borg by default
as discussed in dotnet/aspnetcore#15351, the behavior of the "defaults" methods could be clarified a bit.
fix prometheus usage of kubectl proxy
corrects the first iconbutton sample, adds a raisedbutton sample.
move openers to workspace
additionally, i changed the rest of the h1 titles in the landing page to h2.
dealing with issues: #2728 - separate directories for geometry primitives and scene primitives instead of mixing them in src/core?
hey, i have updated the type definitions for the touchripple classes to match what is implemented in the buttonbase component.
add visual studio 2017 static link libs of openssl and zlib to src/buildfiles/library/vs2017.
new features apis paddle new apis: put_along_axis.
add default injection comment to help for overriding
ref #205
add carb foodtype, absorptiontime to reports
[clickhousedocs] translate custom http handlers with prepared queries (#126)
custom threadpool in java 8 parallel streams
fix an error when help for an option is blank
library/panic_unwind: add unwind_data_reg for risc-v 32-bit
add unit test for embeddedpermissionpersistserviceimpl
added command line alternative to intellij
fix async deps
feat(gatsby-recipes): show elapsed timer when apply steps after 10 seconds
fix name range of wildcard names in walktodeclpre
fixes bug #71 (new installs fail because /var/lib/docker doesn't exist) and also makes a minor improvement to the download progress bar
add or edit tests to reflect the change.
build cran r-package on azure with every commit and attach to releases
buildkite docker plugin now adds variables on "environment" tab to container
zydis: fixed isbranchgoingtoexecute for loopxx instructions
allow -l warn to configure log level on startup, and protect against invalid values for log level.
add error info when fc bias shape is not 1d issue 15032 please feel free to remove inapplicable items for your pr.
followup #3306
even after tokuhirom/test-tcp#59 went in, we have been seeing occasional ci errors (for an example, see  this might be (at least partly) due to us calling empty_port with no argument (thus looking for an empty port on 127.0.0.1) and then trying to use that port on 0.0.0.0. this pr fixes the issue in either of the two ways depending on the tests being run: look for an empty port on 0.0.0.0 (by calling empty_port({ host => '0.0.0.0' })) bind using the loopback address (i.e.
[fix]: corrects typo in english i18n.json file
open port 3000 for remote debugging
remove unused is_command() instances from keyboard-level config.h, 0-9
while here, respect the host default compiler of cc.
this consistently improves dev performance in chrome.
added usb virtual serial support
tutorial ported from @spicyj's internal wiki to top-level navigation option
updated build_doc.sh
this change moves all test files from the ./tests folder to ./tests/testdata and makes the cwd ./tests/testsdata for all these tests.
updating the office-js with addin api and office-js-preview with the acoffice.actions.associate api.
fix corner cases and an undefined behavior
how is it different from the default ergodox ez layout?
allow private and protected class members to be accessible in nested classes
fix mvn verify under jigsaw
this pr allows one to build the user documentation with python 3 and sphinx>= 2.4.0. it also removes several warnings.
the most basic and important thing is: st.emptys are no longer stripped from shared reports.
fix #5155 format the pull request title like [issue #123] fix unknownexception when host config not exist.
[flink-23864][docs] add pulsar connector document (chinese & english).
alow to disable a downloader handler just like any other component.
d3.geo.stream incorrectly treated geometrycollection as a higher-level object type, rather than a geometry type as specified in the geojson spec.
implement module api for aux data in rdb
addresses #20308 this pr ensures radiusneighborsclassifier is compatible with numpydoc.
fix golint failures for test/e2e/upgrades/apps
add support for chunked persistence
support spring @scheduled annotation
cherry pick e37dfda 2d891d9 247899a
i added the right row export to display the discussions list 2021-04-14.18-02-36.mp4 fixes #21547
made some small adjustements that make the nel functionality resemble the code for the other pipes more closely.
fixes a typeerror when deleting a task result with s3 backend.
selectabletext will only keepalive when it has selection, and docs improvement
fix lgtm.com alerts: nullness check using !== operator
button "enable auto-completion in data filter text" in preferences/dbeaver/editors/dataeditor/presentation adding org.jkiss.dbeaver.ui.editors.data in german, russian localized
revert 8302b5a and a temporary fix for runtime env blocking and that also prevent workers from starting up too fast (before #17154 can be solved).
- added few notes that makes the documentation more self explanatory
please check if what you want to add to awesome-go list meets quality standards before sending pull request.
no-issue this means that we no longer make requests to the stripe api for every request
since envoy uses a time system that allows injecting mock timestamps, there is no need to support timestamp parsing in the production code.
continuing port of java comptool
fixes #2340 in the future, we should use chunkhash of each file for better caching.
importing linear assignment from scipy
notes: fixed using custom v8 snapshots on apple silicon.
make rl_pong example pep8 compliant.
loaders are applied in the wrong order when using inline match resource, as shown in #9053. the resulting behaviour does not match the expected behaviour as described by the documentation.
[youtubedl] format spec: allow grouping specifiers with parentheses
shardingsphere 4.x rc3 test
will need to open a pr for getsentry but starting in sentry for discussion the default we're currently using.
this is in the same spirit as #2352. it inserts the engine as an indirection for creating and starting a container, with minimal disruption on the implementation and code structure.
my take on ben's pr.
mac: add color chooser dialog
i looked through the releases since 1.1.0 and it now seems to cover the new api.
this work does the following: removes the banner add for typeform-based font awesome survey reinstates all other fonticons/black tie banner ads changes references in code and content from "fonticons" to "fort awesome" updates color combinations for fort awesome (using fa's off-black) and black tie banner ads note: the survey page ( reviewers ui, fed, and content - @davegandy
we've split docs.ansible.com/ansible/ and docs.ansible.com/ansible-core, but they still look identical.
addresses #16965 by showing eeprom errors on the lcd at startup if auto init is not enabled to automatically handle them.
fixes: #3656 (comment) component name /collectors/python.d.plugin/python_modules i tested, with the changes httpcheck module works with
ak: add formatters for floating point numbers.
remove magic numbers from mnist_cnn.py (re: #469)
bpo-30320: test_eintr now uses pthread_sigmask() (#1523) test_eintr: fix resourcewarning warnings test_eintr: remove unused import bpo-25277: add a watchdog to test_eintr
fix some assertions, hack out some others (they need more atl work).
what this pr does / why we need it: builds equivalents of the various kubernetes release tarballs, solely using bazel.
fix #10735 this pr did the following things: add lod_tensor.py utility module providing functions for ease of creating lodtensor in book examples.
texture_cache: use pixel format conversion when supported by the runtime
ios_command not failing in case of receiving 'command authorization failed' in tacacs environments.
small typo fix
fix map height in extending example
[nextcloud] add owners file for further contribution
spi_graphical_tft emulated dogm using spi
fixes #53612 do not gate the value setting behind the repeat check.
this backports #29190 and #29156. there are slight changes due to the integration tests because of incompatibilities in the test framework between 1.13 and master (see #29210 (comment)).
update to scrivito 1.17
backport of #63713 and #53286 yum
what kind of change does this pr introduce?
always build odbc bridge as a separate binary #3360
added setviewoffset to camera for multi-monitor displays.
create an ata cache per patch version of ts
following this code sample copied & pasted from the yeoman documentation, we should be able to call the generator.option method without a config argument: module.exports = class extends generator { // note: arguments and options should be defined in the constructor.
simplify imports in reactchildfiber
currently gzip.compress and gzip.decompress are implemented with gzipfile.
using an incorrect count of unpacked values in the for template tag raises an exception rather than failing silently.
i think we're good moving this chapter into copy-editing.
removes overflowing bad word ids
add or edit tests to reflect the change.
added request agents introduced in newman 5.1.0.
fix: make the current challenge button do something
[code-completion] add type context for single-expression functions
add unit tests from diffblue deeptest for fastjson.jsonpath
[@types/snowpack-env] remove readonly flag
update the cpumanager to error out if an invalid policy is given
po: import the .pot file into version control
change all resx files to windows line-break type
i've solved my problem by adding a -w num / --width num option which truncates matched lines to the length specified.
update dragonbox
move spp integration to libr.asm.c
the pr only implements memory allocation and deallocation, and makes use of those methods in llvmprogram and memorypool.
getting reports now though that some browsers (samsung phones, kindle fire) are still popping the numeric keypad, since the field has type="number".
update definitions to support react-big-calendar event object properties
fix fs test for mac
show 'enable/disable' system messages on edit room
closes #42076 tests added / passed ensure all linting tests pass, see here for how to run them whatsnew entry seems to work.
consolidating some bug fixes and improvements to the world api.
use urgent_ws color in swaybar if binding_mode is undefined
prefer to make your pr against the master branch.
ensure rating sort modes are available inside sets
it supports sampling ratio and aligned roialign.
send reset from the client when server closes stream unexpectedly
this pr improves batched inference for wav2vec2 models by: adding an attention_mask adding zero-mean unit-variance normalization to the tokenizer correctly setting returning attention_mask and doing normalization depending on which architecture is used background some of fairseq's wav2vec2 models apply group normalization over the time axis in the feature extractor.
coerce none to '' in charfield.to_native()
and remove unneeded inclusion of tinyxml2.h from user visible header file (cocos/editor-support/cocostudio/flatbuffersserialize.h), as a result usage of tinyxml in cocos may be "private" for user project.
description: there are several differnent foscam libraries, all pretty similar.
support mutable default values in extensions
added a note about the known issue between phantomjs and node 0.10.x
add 3-point leveling to corner bed leveling
timedelta comparison already handled this correctly but i didn't see a test for it, so added one.
use shouldforwardprop for docked root
enable more c++ tests on windows.
replace delay with while loop in wificlient.ino
update doc for v1.1.6 update spring boot version to 1.5.9 add  spring boot actuator endpoints support
add test for coinmarketcap sensor.
translates content-tracing-ko.md remove outdated comments about remote buffer in browser-window.md fix typos and improve grammer in tutorials at ko translations
exclude json files from project reference redirects from files to be emitted list
this includes lossless and lossy webp file format.
description: implements powerlevelcontroller for variable fan entities.
question template
this replaces some of the pyint* macros in npy_3kcompat with their definitions.
rework layout macro
weixin-app: use covariant event type
add tests for intervalssourceprovider implementations
c++ worker will generate a template project, we need to ignore the generated files by c++ worker.
updated message interface & added new interfaces - poll & polloption
centralize index analyzer management
extract core 2 session configurations to environment
bump client to 0.3.4b1
add first draft of privacy feature explainer :doc
the immutable mode assumes that the output of react is a persistent tree, not mutations on a mutable dom tree.
dvdplayer: complete the update of ffmpeg interrupt interface
causes memory usage regressions
docker: avoid chown of .
note the lnks here are being pulled from the search plugin, not the program plugin
add method to flatten all multi-index levels
add or edit tests to reflect the change.
fixed corner case for failures and added debug logging.
please don't merge this pr until cocos2d/cocos2d-js-tests#201 is merged.
fixed issue #434 : default initial hidden state for recurrent layers
add greenhouse careers page
#11121 inadvertently broke the constructor for the testnode() object in p2p-segwit.py, silently breaking at least one of the tests.
add common preprocessing for each request in node manager three parts are included in preprocessing, logging, checking heartbeat and checking being killed.
i generate java model for api from swagger.yaml.
also, ensure that privatenetwork=/joinsnamespaceof=/networknamespacepath= have an effect on socket units.
i hereby agree to the terms of the cla available at:  do not allow to apply parametric aggregate function with -merge combinator to aggregate function state if state was produced by aggregate function with different parameters.
cleanup .travis.yml, and enable travis on all branchs
implement iterbytes for rc<t>.
this pr migrates the changes in #4534 and rebases them onto master branch.
update cctz
updating the arxiv formatting
the graph extent mechanism is not good.
test: tsify more webcontents specs
adds revision parameter to release job
update customize-theme.en-us.md with link to antd-scss-theme-plugin article
update flashing docs
attributes ---------- n_categories_ : ndarray (n_features,) number of categories for each feature.
fix set role.
this is somewhat hacky... adds fuchsiadevices which adds basic support for device discovery using netaddr and netls commands.
created personal keymap for dz60 hhkb layout.
spider middleware: catch exceptions right after the spider callback
when the upstream responds a payload whose length is smaller than content-length header value, the current implementation of fastcgi handler and mruby's http_request don't send rst_stream frame.
this pr updates some return types to include undefined.
3.2 version of #42178 : this pr has most of the things in #41097 (excluding the virtual keyboard support): refactor event handlers, moving add/remove logic to native/utils.js window event handlers no longer usecapture (fixes #33020) canvas resize option now available on export (fixes #37205).
i found various things i wanted to adjust while working with this helm chart, so i made this bigger pr for some initial discussion and local development.
closes #25104 added type set_option docstring in config.py -added type to boxplot_frame_groupby docstring in plotting/_core.py -indented versionadded in excelwriter docstring io/excel.py -updated code_check.sh to take into account pr10 type errors
add via support for duckboard r2
test wp html image regexs
flutter stable 2.5.0 framework scheduled cherrypicks cherrypick devtools version issues: #89320 commit: 870f5e8 roll engine cherrypicks from: flutter/engine#28496
as of v140, there were duplicate onpress events firing for keyboard/controller presses on touchable*s. #2968 removed the native onpress, but unfortunately #3042 and #3049 removed the js ones (not realizing that the native ones had already been removed.)
removes tmparch/tmpbits from command syntax because we have @a and @b now.
code example for article "introduction to quartz"
tst: fixed bare pytest raises
there're a few problems with current version of type definitions that this pull request addresses: type checking is not performed in many places using any rather than a generic type.
this prodives a https endpoint with a self-signed ca certificate.
simple validation for partition id before drop partition
run rn list jest tests
just breaking up the logic so i can reuse it for defer.
add or edit tests to reflect the change.
[td-10952]<test>: finish testcases  for opentstb-telnet-protocol with taosadapter
change variable name listener to handler
docapi-6206: odbc table engine description.
bug: pd.concat with all series on axis=1 ignores the `names` argument.
- allow mapper functions when defining style properties
this is a large refactor of our string methods.
isolate multi-thread support from 'multiplereader', making it an independent decorated reader(threadedreader).
initiate pivot table migration
closes #8961 related to rocketchat/rocket.chat.livechat#399 the users and managers want to know the website url from where the livechat offline message comes from.
add courses from kaggle and a few screencasts in brazilian portuguese it has some good skills to be developed within the channels/platforms that are being submitted.
validate git parsed version and rc branch match
hello this pr will fix the shown zoffset value in tune and prepare menu.
live wallpaper backend was
execute monodevelop from the right appdomain.
implemented interpolation for affine transformations (matrix32::interpolate_with)
applied the patch to get the starting point as described in
added tests for issue 747 in serializer.py
i removed all extension checking code to gl-subsystem.c as it needs to be called on all platforms and does not change given a platform.
several plugins were using the stat command to determine modified time in order to determine if cached targets needed to be updated.
add definitions for dropbox chooser
add or edit tests to reflect the change.
skip test_wrapped_actor_creation on windows
fix a few of the javadoc compiler warnings in jenkins core.
with python 3.
implemented as in
display filament sensor data on 20x4 lcd
don't update js/ts diagnostics if they have not changed
fix debug draw of scaled arcade body
save-analysis: nest tables when processing impl items
typo you, your
reset ot protocol internal state on handshake
used by animal crossing: new horizons v2.0.0 dlc
fix a crash in availability checking of defer bodies
add eperm to list of immediate exit error codes
adds option for prometheus compatible metric exports in all pods under the mongodb-replicaset chart fixes some broken tls chart functionality and allows the metrics exporter to use tls options which issue this pr fixes (optional, in fixes #<issue number>(, fixes #<issue_number>, ...) format, will close that issue when pr gets merged): fixes # first pr into kubernetes/charts
cherrypick the change( #53604) to add no-negcache flag to dnsmasq which issue(s) this pr fixes (optional, in fixes #<issue number>(, fixes #<issue_number>, ...) format, will close the issue(s) when pr gets merged): release note: add --no-negcache flag to kube-dns to prevent caching of nxdomain responses.
issued #82 caused me to rethink how atom defines words.
extended loadimagecallback with metadata argument.
update api/flowcontrol/v1alpha1 to have correct group and version
adding autoexec table
cube/char_bigrams: fix some memory leaks
a bunch  of small code optimizations and trying to reduce header dependencies by using forward declarations.
[7.x] delete mounted indices after in searchable snapshots yaml tests
empty .gitignore files have been added for no reason, and we lost some empty but useful directories (read: "that will be used later on") during the git migration.
inconsistant behaviour of empty groups when grouping with one vs. many
apply code formatting
keep linter pinned at 0.1.35
docs: update the certificate apis
this pull request will fix #5785. add a file_identifier that i forgot to include use t.finishtbuffer() for each class instead of flatbuffersbuilder.finish().
add the new preprocessor.
category choose one bug fix enhancement (new features, refinement) refactor add tests build / development environment documentation this is pretty minor, but just something i noticed while looking around.
added 3.2.12 version compatibility
odbc fix
%#v may have significant performance costs in frequently invoked code.
use updated bios contract that renames preactivate action to activate; adjust tests and testing utilities accordingly
this pr sets up a common project for preview pane powertoy.
issue: #542 #549 #739 description: implement use_container_width in charts and deprecate height and width properties with a warning
support logp1, expm1, square for higher order grad
added a test suite for the postgres binary type
when i first read the output, i spent a lot of time to understand these numbers to match them.
in feature_extraction (.text) module there's no validation of ngram_range property for the following vectorizers : class hashingvectorizer(baseestimator, vectorizermixin, transformermixin) class countvectorizer(baseestimator, vectorizermixin) class tfidfvectorizer(countvectorizer) for example we can init a vectorizer that extracts n-grams in this range: 2 >= n >= 1, which doesn't make sense.
+ add forgotten keycode (firefox in windows)
gpu: set up the depth test state on every draw.
rnw implementation of tooltips causes text truncation
adds support for cv_32fc1 and cv_32fc4 to cuda morphology filter.
print correct error message in log for unknown settings in users.xml
added two tests for menulist home and end key functionality
stash application should stage new files, even when we're not updating the index.
fixes #1640 you can now change the entire data object of the chart and then call update and the chart will work.
fixed bugs
this moves the rollup cleanup code for http tests from the high level rest client into the test framework and then entirely removes the rollup cleanup code for http tests that lived in x-pack.
this supports setting goroutine filters using the launch configuration.
changed tests messages to indicate string
trust folder when saving workspace file
ui: clean up settings form markup
when i was reading the online readme i missed this syntax cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc due to it being preceded by the note.
add comments documenting set_axis_is_at_home and homeaxis output "a" and "b" for scara axes in stepper::report_positions improve probe position output in log_machine_info use const args in set_current_from_steppers_for_axis and probe_pt specify 8-bit integers for extrapolate_one_point args other minor comment/spacing adjustments
replace assert_raises* by pytest.raise in model_selection/tests/test_split
[airflow-6430] - add tests for patch_table method
add missing functions to definition
rename interface and class for task assigner based on suitable pattern.
add or edit tests to reflect the change.
extension of #228. clarifies some of the language.
allow pinning, unpinning, starring, and unstarring via the rest api
continues work on #3283
adding a link to the search options article
this commit series essentially brings back dvb channel switching.
unify @iycheng and @architkulkarni 's prs to use common code for parsing runtime_env.
added bottom to search app bar
add support for hue lightgroup entity
use identifier's span in unused lint
super minor tweaks to some icons (removing shadow outside of the colored areas, according to icon guidelines) adding the missing files for mouse highlighter and find my mouse to installer file linked issue: #14702 communication: i've discussed this with core contributors in the issue.
[flink-10678] disabled log checking in tests that fail jobs on purpose
add tests for quotes on /learn
fixes #44153 (from 1.23.0) fixes #47486 (from 1.36.0) fixes #48010 (from 1.38.0) fixes #48027 (from nightly) fixes #48638 (from nightly)
do not try convert columns that does not exists in materialized view
finally, it makes the crash free rate better reflect the thresholds that are set.
actually fixing a quic stream limit issue.
noticed while working on #14400 that the optional catch-all handling was missing in namedregex.
added network response checks to all curl http calls and all git clone calls.
therefore we need to allow manual typing in the value control.
fix node example.
fixed technical typo in  plot_weighted_samples.py
added phantom solder pcb variant and upcoming kbd8x hs pcb variants.
do not mutate alpha in the render target (useful for transparent render targets).
[sdk] use perform(_:with:) to remove _silgen_name from gameplaykit.
[stable/grafana] add env values for download dashboard images
i have read freecodecamp's contribution guidelines.
tst: tests for needs-test issues #12857, #12689
all examples now run while using box3, sphere and plane.
better name test results with its source job.
this is a pretty obvious typo in retrospect.
reorganize match construction to be o(n) instead of o(n^2).
two small improvements of compiler/rustc_lint/src/types.rs
add a command to format json files
this one takes care of all the remaining methods that made use of the @_with_element decorator.
refactoring: merge symbol argument with sym_gen in feedforward
add test case for ruleschemametadata(apache#6731)
this commit adds the shared module support for cisco nxapi.
prototype for runtime feature detection
this adds support for several features of chromium's logging system that were previously not exposed in electron.
kafka-6739: when down-converting from v2 to v0/v1, broker must ignore any header present in the record.
split from #24768 retry-after is broken for post/put, and a very common retry behavior for service account api tokens not yet being available exposed that we don't tell clients to retry when a retry error is sent.
with this pr we improve typing of the single-parameter bind method in --strictbindcallapply mode such that generic functions and overloaded functions are more accurately typed (i.e.
extend s3 unit tests and fix regex that distinguishes between host and path based bucket references #4254
[paplayer] - use dvdplayercodec for airtunes streams - now that we have the demuxer (thx gimli!!)
add invert tool to build commands
this pr expands the additional check in #37195 to also cover intersections with generic constituents.
updated for version 1.4.1, jsdoc documentaiton
this allows running integration tests as non-root.
allow calc() to specify a distance in the rasi format.
only get sound mode list / current sound mode on main_zone
handle turn_on situation when no color is set
what is include in the pr: three changes related to this crash: 1 - don't combine the modifier keys to the combined key.
workers blocked in a ray.get release resources
description: update upstream library to 0.10.7 adds hmip-miob the two main switches can be controlled (implemented) the two digital input channels cannot be read due to missing value in upstream lib the analog output can not be controlled (range of 0-10v) (not implemented, could be implemented in a follow up pr) pull request in home-assistant.io with documentation (if applicable): home-assistant/home-assistant.io#9190 checklist: local tests pass with tox.
added foo stored procedures tests
optimize composite aggregation by index sorting
logind: add missing resume signal when we fail to initiate sleep/shutdown
the calculator should accept exponential numbers without sign in scientific mode
these tests cover corner cases that were without test coverage on tornado/httputil.py there are just 2 lines in this file without test coverate yet: import doctest doctest.testmod() when __name__ == '__main__' is this feature still needed?
this adds a change to pull the incref to the core pyobject_init{init} function to correctly incref heap-allocated types.
make headermap::iterate exit early
restore unit testing for the staging repos
do not store password if ldap_login_fallback is off
many small grammatical and stylistic changes
decode more jpegs using the browser if possible.
use relative paths in istorage::rename(...)
clarifies plattform specific behaviour of preferences: on android, prior to flushing, changes to the preferences are not available to the user on ios changes are not synchronized between different preferences instances fixes #5558.
doc: update addnode rpc help
added it to gatsbyjs.org and it removed 20kb from our commons bundle!
added bounds payload to tray clicked event
remove duplicate code
clean up various integration tests that referenced the integration_config.yml vars file.
add mbedtls crypto wrapper.
extend and test install_name symbols for back-deployed concurrency.
[skelton] rename variant circle -> circular
add exception handling to request call to prevent
added tooltips for the ramping form in the ui.
thank you for contributing to kubernetes/charts.
the ci system has been running all tests for the serial test steps on eos:develop-boxed.
languagecodeexpander can try to load language when trying to resolve language code.
backports #26111 #26223 #26187 #26219 #26221
use stdout/-err for all messages in html5 platform
we do not presently stash files correctly when a file is added in the index and then modified in the working directory.
tst: fix test broken by np 1.18 sort change
layer name buttons grow to fill box
validate-modules sanity test now validates removal version numbers (similar to version_added validation), checks that removal collection versions are major releases, and not minor or patch releases, and checks that version_added collection versions are not patch releases: error: plugins/modules/cloud/docker/docker_container.py:0:0: invalid-deprecated-version: argument 'read_only' in argument_spec found in mounts has deprecated aliases 'ever' with invalid removal version '1.2.3.4': invalid semantic version '1.2.3.4' error: plugins/modules/cloud/docker/docker_container.py:0:0: invalid-deprecated-version: argument 'tmpfs' in argument_spec has an invalid removed_in_version number '1.2.3.4': invalid semantic version '1.2.3.4' error: plugins/modules/cloud/docker/docker_container.py:0:0: invalid-removal-version: ansiblemodule.argument_spec.mounts.options.read_only.deprecated_aliases.1: version ('1.2.3.4') is not a valid collection version (see specification at  error: plugins/modules/cloud/docker/docker_container.py:0:0: removal-version-must-be-major: ansiblemodule.argument_spec.mounts.options.read_only.deprecated_aliases.0: version ('1.3.0') must be a major release, not a minor or patch release (see specification at  error: plugins/modules/cloud/docker/docker_container.py:0:0: removal-version-must-be-major: ansiblemodule.argument_spec.published_ports.deprecated_aliases.0: version ('1.2.0') must be a major release, not a minor or patch release (see specification at  error: plugins/modules/cloud/docker/docker_container.py:0:0: version-added-must-be-major-or-minor: documentation.options.device_read_bps.suboptions.rate: version_added ('1.0.1') must be a major or minor release, not a patch release (see specification at  error: plugins/modules/cloud/misc/helm.py:0:0: removal-version-must-be-major: documentation.deprecated: removed_in ('3.1.0') must be a major release, not a minor or patch release (see specification at  (also removes some error codes from docs/docsite/rst/dev_guide/testing_validate-modules.rst which have been forgotten, or which haven't been reported anymore.)
pegasus hoof: configurator support
[dompurify] update dompurify's sanitize method return types to reflect version 2.0.1 (support for trustedhtml types)
what do these changes do?
fix ndarray assignment issue with basic index
fix service traffic equal and hashcode method.
fix #5322 1.add port attribute in configcenterconfig 2.when using zookeeper and configcenterconfig is null, set port attribute.
from react-native 0.64, react-native-codegen allows defining aliases for object literal types.
from final can be used not only with collapsingmergetree
bg-poll very frequently to pick up subchannels's updates in lb tests
blazor webassembly sample references a previous version of the api tutorial
opt in, only for ios for now
automatically generate cxa_find_matching_catch handlers, avoid hardcoding a limit.
remove await for
provide a url to documentation or source code which provides context for the suggested changes: <
cmake: build target libraries together with the stdlib
(the initial visual studio 2015 does not work.)
bloom pass inspired from unreal
confusing documentation of formhelper#form_with and `form_with_generates_remote_forms` config
platform: the parse and tostring methods are not maybe present, they are definitely present.
i have followed (at least) the pr section of the contributing guide.
fix touch events.
fix double-freeing remote references
create react app is setting some default build infrastructure for react apps.
thresholding: change the window and tile size parameters to relative numbers
editors - first cut view state support for side by side editors
fixes storage drs recommendation call for add disk scenario
the other usage of _data.eval will be removed separately; that turns out to be a lot more trouble because a bunch of dataframe behavior is currently incorrect (see #22017).
:memo: add lgtm.com badge in readme
packaging: bump go.d.plugin version to v0.29.0
remove both the active cluster and warming cluster if cds response told so.
update changelog.md formatting
headers unneeded usings files need blank line at bottom fixed double returns returns after braces stylecop is commented out but still in the csproj's pr checklist applies to #5295 cla signed.
restore "jump to chart" functionality from the alarms modal, that was lost when we prevented page scrolling when a modal is open.
make arugments optional and add --dict argument
primary key and mergetreeindexfulltext support for string functions
various changes to redis-benchmark thread and cluster support
introduces a new series of node settings xpack.security.authc.domains.<domain_name>.realms: <realm_name_list>.
the original author of #2522 hasn't returned to github in more than 2 months, so i'll take the courtesy of completing that pr.
for pyston the refcount of "immortal" objects is set to ~infinity
add javadoc for colors
bring azure guide up to date.
add variant zigbee
fix optional types
fix for the issue described in #2785. when serializing an dict or object, now the default value is used if the key or attribute is missing from the dict or object.
rewritten nginx, phpfpm and apache modules to use wrappers on chart creation (methods: chart,  dimension, begin, set, end).
a suggestion for improving docs.
this is a port of #5605 for the 11.3 branch passing system test on branch builder
update onnx api references
fixes #12416 this pr detects a mismatch between cls and a checkpoint a user intends to load.
i hereby agree to the terms of the cla available at:  i've translated half of the clickhouse documents into persian.
update scan_interval and interval_seconds max to 1 day vs. 60 seconds
fix debug bar not showing all cpus on android
closes #242 removed redundant checks for null, when it will already be handled by calling 'delete'
cleanup of ppo, appo, and dd-ppo code (equivalent to previous pg one): add type annotations.
added sessions adoption to adoption calculation tests
add or edit tests to reflect the change.
this should tidy up the javadoc generation and the hystrix-contrib project.
perf: memoize shadowcreatepagepath
add a geoshape field to the scripting fields api
add tests to nightly test
merging changes into stage
the shortcut cmd + u or  ctrl + u is used to delete the content of current cursor back to the start of line, not always delete the whole line
added a couple mixdown utility methods.
this pr does the following: the list of predefined mime types to a dedicated file (so that it could be handled more easily) generate the list from the mime.types file of nginx fixes #254
disabling dynamic bitrate entirely is also bad.
ray documentation - created new section 'profiling for ray users', opposed to current profiling section for ray developers.
fix .app bundle crash on macos
remove plasma store executable & never used tests
this pull request introduces a new, temporary and experimental flag '-enable-astscope-lookup' that reimplements unqualified name lookup in terms of the new astscope data structure.
example project dependency upgrade.
part of #643, covers test case for #565
adapt readme to the new functionality
allow netdata generate svg badges.
adds operator sum(csr, axis=0) = dense and sum(csr, axis=1) tried 128*100m shape csr matrix and was able to perform sum along axis 0 and 1. density is 0.1% allocation fails for 128*100m for dense ndarray, for 1m and 10m the speedup for sparse operator is 300x for 1m and 1200x for 10m for density of 0.1%(uniform distribution) completes one todo in #8168 @eric-haibin-lin @reminisce @cjolivier01 @piiswrong
fixing race condition
update selectrowprops interface bgcolor property and some comas to semicolons.
issue: #2537 implemented support in a11y-addon for delayed rendering of components by adding a "re-run tests" button within the panel.
this pr implements native filter and cross filter api simplification efforts introduced in apache-superset/superset-ui#1040 and apache-superset/superset-ui#1053 .
bump version 4.7
create 2 pvc for master and slave components and update slave deployment to statefulset
update lfahda_mfc: add 2022 hyundai santa fe
update types to match version 2.6.8
after this pr, to the best of my knowledge, #22400 is the only blocker for the 1.28 release.
update ses transport types to match current nodemailer
add toc
configurator support
related to #59255 this pr would begin to issue a deprecation warning when running a date range, date histogram, or auto date histogram over a boolean field.
hi, this pr adds a note about the default weight initializer to the tf.layers.dense and tf.layers.dense docstrings to clarify how the default weights are initialized as discussed in #9744 .
add or edit tests to reflect the change.
seems like i was too optimistic in assuming connections would always come in the same order!
add falling back to fetch based pinging when failing to connect
this change fixes 2 symptoms: "can't find view with tag x" that sometimes is thrown when closing a secondary window.
add the old menu back for native menus
created a branded type for escaped strings
flatc should warn, when an attribute is attached more than once.
enable docker socket and service on fedora
meshcollider's raymesh extended to support face4 faces (implemented as two raytriangle calls)
use --current flag for kubectl kcn alias
fixes #3667. i tried to come up with examples that are somewhat real-world, not too complicated and that showcases some of prettier's strengths.
update english grammatical_error_correction.md correct task description.
enable high-contrast theme on all platforms.
this adds platform dependent checks to lower the buffer sizes on android to use less memory.
previously padded feature vectors could be sampled which would give the model bad signals during pretraining.
allow apps to create direct messages; implements getmembers; allow apps to search for direct message rooms based on usernames;
[stable/mongodb-replicaset] unable to join replica set after failure
what did you implement: the docs link to cognito user pool triggers aws documentation is only a guide on the incoming events and doesn't contain the actual trigger names.
python.d/dnsdist.chart.py pep 8 cleanup
how this makes lightgbm better catches issues like memory violations in lib_lightgbm allows us to catch issues in ci to improve the likelihood of cran accepting submissions of the r package
adds support for ssm parameter resolution for cloudformation.
with this commit, three won't crash anymore when calling fromgeometry with an empty geometry as argument.
add process selection to linux native debug ##debug
summary added the op batch_normalization in the numpy backend.
add interval notation for include_boundaries parameter for the function check_scalar
this bumps gnutls to last stable v 3.3.10 and enables gnutls support in ffmpeg on android (again).
remove rescue_action from compatibility module and tests
in the scenario that we have multiple ray clusters with processes running on the same node, we want to make sure that each cluster's dashboard only contains metrics from the processes in its cluster.
when using flow-offloading with [luci-app-pptp-server] installed, [luci-app-pptp-server] rules will forward all the traffic which the protocol name includes ppp, which means pppoe traffic also will be forwarded.
initial commit for tgr 910 ce
system indices should be hidden from users.
fix bash login when ${cmder_root} has spaces.
this reinstates the use of direct adjacency information when gathering
update contributing guide
substitute tilde with user's home.
[docs] raisedbutton - add title & description to examples, document linkbutton & href props
earlier changes to the stm32f1 serial isr has eliminated hanging due to serial overflows when using serial 1-5 for marlin or dgus communication.
add header and main landmarks to default starter
update bullet source to 2.82 rev2704
this incorporates the ideas of #2434
gdb catches sigint and by default doesn't pass it to process.
show only static inherited members when writing static member
as per  this is the initial machinery to setup the l10n infrastructure for markdown documentation.
ast: replace some calls to getdeclaredtype() with getdeclaredinterfacetype()
this is a series of updates to the tokenizer and tokenizer docs in order to sync the docs and the current tokenizer implementation.
i hereby agree to the terms of the cla available at:  changelog category: detailed description / documentation draft: by adding documentation, you'll allow users to try your new feature immediately, not when someone else will have time to document it later.
travis use latest platformio v.4.2.
corrects errors in the qmk configurator implementation, and enables community layout support.
extract interaction constraints from split evaluator.
remove unnecessary shadow camera updates
don't simply ignore container in present() if image is not specified.
update compression levels for large inputs
rename variable for future compatibility
add logging of control plane identifier
fix incorrect extend type
bug: issues with groupby ewm and times
fix google assistant request sync service call
the shardid can also be read directly from the sharditerator that's already provided as an argument, plus there is no need to create new instances of shardid by providing the index and the int shard_id separately, the whole shardid should be passed around when possible.
add more info in block trace & transaction trace.
new server session monitor for sau (simultaneously active users), which will provide important informations for dau (active daily users) and mau (monthly active users).
closes #43704 description of render trimming and maximums bug: pd.options.styler.render.max_columns = 5 pd.options.styler.render.max_rows = 5 df = dataframe(np.random.rand(10,10)) df.columns = pd.multiindex.from_product([[0,1,2,3,4], [0,1]]) df.index = pd.multiindex.from_product([[0,1,2,3,4], [0,1]]) df.index.names, df.columns.names = ["a", "b"], ["c", "d"] df.style.hide([(0,0), (0,1), (1,0)], axis=1).hide([(0,0), (0,1), (1,0)], axis=0) pre #44248 after #44248 (merged) after this pr
reduces checkstyle errors for patterns: naked-objects null-object object-mother object-pool observer queue-load-leveling changes involved java docs reordering imports indentations line length issues
this pr transforms the slots inside the slider as standalone styled components.
this pr: integrates zero-infinity revamps the configuration process, instead of the confusing to users sometimes-we-override-values, sometimes-we-don't - all values are now explicit unless they are set to auto, then and only then the trainer will set them to the correct or recommended values.
i've been working on this on and off for the past few days, thought we could open it for more participation, but i've created a spanish translation of the list, and will continue work until it's done.
[jsonserialization] add ability to emit 'null' value
this will be used to implement re-declaration checking for local
uploaded files had wrong download links when the deploy had a sub directory.
fixed token span in pattern matcher example
revert "units: make systemd-repart.service installable"
tested under linux git, linux board-manager, windows git, and windows board-manager.
make ccryptokeystore::unlock check all keys.
fix path to dockerfiles
ref #13326. refactor rewrite-test logic to support one case supports multi database dialects modify rewrite test case
update agent.config
i added an option to timedretrypolicy called log_original_error  so we can log the original error in some circumstances such as running acceptance tests.
[jenkins-35206] - install state should be robust against messed statuses when deserializing objects
description: this pr adds a shutdown method to the apilistener and calls it where appropriate during server termination.
add the expression for the dot engine
apply latest loc patch
closes #32960 tests added / passed ensure all linting tests pass, see here for how to run them whatsnew entry xref #34872
update lolex typings.
added doc comments to oauth flow response models
issue: #7499 module format docs: #7498
support pausing amqp consumption when producer is paused.
directories for categorical and range eindexes
handle circular mapped type instantiations for arrays and tuples
just submitting this pull request into a new supports branch, which we could use to make everything all, er, supportsy.
via support for think6.5
this change separates the signal handling trigger in the eval loop from the "pending calls" machinery.
this is the second batch of incidental integration tests, sourced primarily from cloud integration tests.
jsm: added module and ts file for gyroscope.
the number of elements in this dictionary and the components that they are referring to seem to increase on each run.
we should be able to use padding on the scroll view and have the editor gracefully handle.
[brightcove] add support for brightcove in page embed(fixes #6824)
this pr addresses many problems with module graph loading introduced in #5029, as well as many long standing issues.
i've taken @mikemaccana's commit, then added more hints to multiple --host and then copied the changes to the markdown.
[light.tradfri] support for pytradfri version supporting full white spectrum
establish module state convert types to heap types and add them to module state add multi-phase init support
we added support for dutch to spacy.
suppose we have: package-a package-b package-c the following works as expected: lerna bootstrap --ignore=package-@(a|b) the message is: ignoring packages that match 'package-@(a|b)' and the following packages are bootstrapped: package-c the following does not work as expected: lerna bootstrap --ignore=package-{a,b} the message is: ignoring packages that match 'package-a,package-b' and the following packages are bootstrapped: package-a (incorrect) package-b (incorrect) package-c the latter glob is expanded to an array even before reaching filterpackage in packageutilities.
allow mismatch href and as when manually provided
applying newly-added file upload settings.
adjustment to report qsv availability in mask form
added create and follow api.
fixed reopenablerotatingfileoutputstream to work on windows
carry of pr #20902 allow the docker daemon to run inside a user namespaced parent process.
in order to maintain a cleaner commit history, i made a new branch and will be closing the other pr.
better error message for assertion '_state._widget == null':
move pch files into a pch subfolder.
add uild.ps1 and update tests&docs
spotinst - reformatting docs to be more readable
fix the caffe2ncnn  bug that "depthwiseconvolution" loss group num param
add minimal version of in repository mandatory feature flags.
add or edit tests to reflect the change.
change implemented schema validation using valijson added manifest schemas for preview and v1 manifests changed manifest object model to better reflect v1 manifests changed manifestlocalization to be std::map based for easier future locale processing implemented merge logic for multiple file manifests validation existing tests and added new tests validated all 3000+ manifests currently in winget-pkgs passed manifest validation note: after this change, we might need to revisit and relax restrictions in some of v1 manifest schemas as i found around 300+ manifests in current winget-pkgs will fail in new restrictions imposed by v1 manifest schemas microsoft reviewers: open in codeflow
document how to add session middleware back
obs-outputs: handle rtmp netstream.publish.badname response
your checklist for this pull request i've read the guidelines for contributing to this repository i made sure to follow the project's coding style i've added tests that prove my fix is effective or that my feature works (if possible) i've updated the documentation and the radare2 book with the relevant information (if needed) detailed description i fixed the 2 last critic error discover by lgtm.
silgen: correctly emit vtables when an override is more visible than the base
add tests for test_dist_uniform.
new dth for dome mouser
enable setting an initial position for terminal and maximization launch
added ability to export as newline separated json (nsj) as well as appropriate language.
add large tensor support to optimizers and 1 activation function hard_sigmoid adam_update ftml_update mp_sgd_mom_update mp_sgd_update rmsprop_update rmspropalex_update sgd_mom_update sgd_update signsgd_update signum_update nagmom mp_nagmom lamb mp_lamb ftrl adagrad please feel free to remove inapplicable items for your pr.
offscreen render support base
addresses part of #12927 and part of #9250 this pr renames file.py into _file.py in the sklearn.cluster module.
made py3 fixes to conf.py.
sty: use the pipe operator to represent unions in np.dtype
remove print() from core functions
add the --shortstat flag to examples/diff.c
this should fix #912. it was righteously mentioned by @bakkot.
this fixes a flaky test:  i also took this opportunity to convert the package manager spec to javascript and use async and await instead of waitsfor.
updateed cpp_generator.cc to be compatible with the latest grpc version
creating a new page on hosting a sample asp .net core in container using docker compose @rick-anderson  edit: internal review url
fixes #4817. when the --update-checksums flag is set, yarn would know to ignore a checksum mismatch between yarn.lock and the repository, and instead update the yarn.lock file with the proper checksum(s).
add dispatchcommand to the public export of the react native renderers
remove support for v2 verify_subject_alt_name field
add or edit tests to reflect the change.
in theory the wasm backend could optimize such things (in which case we would not need to raise global_base).
extra echo in services.sh e2e test to get it to pass
module.instantiatewasm is a callback the user provides, and then the user is in change of fetching and instantiating the wasm.
changed the service module to terminate early if only changing the enabled state.
the correlative issues: #4439 #4455
tst: fixed timezone issues post datetimearray
description: adding support for homematic slo (outdoor brightness sensor) danielperna84/pyhomematic#176 i added the device to discover_sensors and added the unit_of_measurement & icon checklist: local tests pass with tox.
wap: add some workarounds to ensure that terminal continues to build
added test cases for feedreader component
this is the same change as #4029, but updated per @fat: we don't take pulls against gh-pages, you need to change the docs in the -wip branch original description from #4029: two of the three apps listed are for linux/windows.
fixes rdar://problem/47220065.
fix facts memtotal_mb rounding on vmware and swaptotal_mb conversion from kb to mb
converted our bug template to the new issue forms syntax.
[fix] message count statistics for admin info page
update spanish translations and fix some grammar mistakes.
this pull request changes the default app to allow you to launch http/file urls or html files directly in a window from the command line.
[whatwg-streams] add transform streams
fix compile on ubuntu 21.10
send summary event
use black to auto-format all .py files.
added some system queries (1st attempt).
users should be aware that these documents aren't actively maintained by the netdata team.
allow programmatic garbage collection via gc().
this pr syncs portable-simd in up to rust-lang/portable-simd@a838552 in order to address the type inference breakages documented on nightly in #90904 by removing the vector + scalar binary operations (called "autosplats", "broadcasting", or "rank promotion", depending on who you ask) that allow {scalar} + &'_ {scalar} to fail in some cases, because it becomes possible the programmer may have meant {scalar} + &'_ {vector}.
fix check distribute_table crash issue
switch minimalhashable* types to use _hash(into:) as the primary hashing interface.
add metrics to services
renamed aggregation to bundled edges in src
fixes #2412 . note that the qps family of tests will still not build, as these use numerous banned features (lambdas, local templates) .
integrate "fields" api into ql (#68467)
fix cpu time factor for freebsd
enh: make np.complexfloating generic w.r.t.
introducing only and onlyasync to tinytest
shippable.yml, ansible-test, integration tests
change udp_server interface to pass in desired socket receive/send buffer size, and set them during socket preparation.
[react-interactions] add focuscontain and tabbablescope ui components
add comment in corrected_std
[win32k] fix an assert to ignore the upper 32 bits of a passed in gdi handle
show how to pass linode_id.
add types for @woocommerce/woocommerce-rest-api
modify / add tests for succeeding ansi color codes
migrated more maplikes to maps
use itemgroup to print vars properties trivial change for build debugging purposes only.
this pr introduces a new doc on the writing process for the gatsby docs.
fix: consider children that are elements in addchild
ccloader firmware cc2541
these changes resolve all issues described in #8593 except for the linker issue.
add deltasumtimestamp aggregatefunction, docs&test
d6b0c70: per the discussion in #17172 this limits the np.generic.real and .imag properties to numeric np.generic subclasses.
adding typings for url-parse
currently these are reversed and in the incorrect order.
chore: bumped redux version to 4.x & correct genericstoreenhancer import
do not lint dyn tokens under macros.
[yourporn] add missing age limit
allow config num executors to use variable from values file
readme: add rules about writing release notes as they happen
has the original issue or this pr been tagged with a release in zenhub?
add further reading links
overhaul repcode handling logic
#5603 what kind of change does this pr introduce?
matrix keymap renamed to layout for both hardware configurations (alvicstep and stapelberg) added layout_pretty to both configurations all keymaps refactored to use qmk_keyboard_h include, and new matrix names includes default_pretty keymap, a duplicate of default keymap modified to use new layout_pretty matrix added info.json file for configurator support fixed a missing accent in the stapelberg readme
[codecompletion] don't use temporary lexer in the second pass
add a new output format when a blueprint name is provided
adding types declaration for module slashy   add or edit tests to reflect the change.
updates the terminal's scroll response to new output.
support importing inaccessible extern crates with a warning again.
update l10n files
this is the first step for implementing a offline data i/o api: what works: # generate experiences rllib train --env=cartpole-v0 --run=pg --config='{"output": "s3://bucket/data"}' # consume experiences rllib train --env=cartpole-v0 --run=dqn \ --config='{"input": "/tmp/data", "input_evaluation": "simulation"}' # consume experiences from s3 files rllib train --env=cartpole-v0 --run=dqn \ --config='{"input": ["s3://bucket/f1", "s3://bucket/f2"], \ "input_evaluation": "simulation"}' # consume experiences from different sources rllib train --env=cartpole-v0 --run=dqn \ --config='{"input": {"sampler": 0.5, "/tmp/data": 0.5}}' what's next: trajectory postprocessing and multi-agent support add a non-batched input format counterfactual evaluation (also need some way to get the reward timeline) documentation #3363
add test case for oracle, sqlserver, mariadb
use zeroed allocation instead of eagerly initializing the memory
this makes the hypertext of the link in the main readme to the usage readme less ambiguous.
initial commmit adding asyncio mock support.
this pr collects some changes that turn out to be necessary for implementing depnodes based on stable hashes (see #42294).
editor support for @see and {@link} in jsdoc comments tags
refactor: the binder for dubbo's config beans in order to adapter for spring framework and spring boot 1.x/2.0 enhancement : extraction of the ops methods for spring boot acutator run test-cases follow this checklist to help us incorporate your contribution quickly and easily: make sure there is a github_issue filed for the change (usually before you start working on it).
anchor scroll supports complete href link
this pr adds an additional ocr_lang argument to the __init__ method of layoutlmv2featureextractor  which specifies which teserract model to use when applying tesseract ocr.
fix signatures of wrapped dg functions
ref: refactor array casting out of index.__new__
this updates the include/exclude configs to output/remove files in the traces correctly and adds tests for the configs.
description: this pr adds support for custom stream queries per device and media type to media_extractor.
add tests covering emitting default parameters natively in es6
following #28413, #28396, and #28395, these are all pretty straightforward refactors.
the main purpose of the pull request is to get the 3-point mesh tilting to use the lsf algorithm just like the grid based mesh tilt.
core: aztec decoding incorrect for codes with u/s b/s
shader/memory: implement stl.s16 and sts.s16
core: don't trigger onfailure= deps when a unit is going to restart
fix sending notifications to mentions on threads
updated documentation for iso-tp protocol
pylint rule unused-import isn't prompting error anymore - removing disabled rule from charts and connectors modules.
previously, if you attempted to run a spec window and an atom process was already running it would run the specs in the already running process which prevented the spec output from being seen.
fixed server to handle invalid arguments without breaking
add rate limits for user resources.
add "use hooks api" style guide rule
tested it out and works nicely.
made adjustment to the docs for easy navigation
feat: allow to pass function value in mapactions/mapmutations
this pr fixes the behavior re: pathprefix identified in #8155. essentially: uses withprefix helper in all programmatic navigation removes manual prefix in onclick handler in link adds a number of unit tests and e2e tests
we already have a page in docs  i have updated the existing page with content from site-showcase-submissions and set the link as available.
new toggle is added into fancyzones settings to enable/disable snapping windows to zones across monitors when moving windows using windows snap hotkeys.
update typings to styled-system v5
add connection pool
with this pr we improve type argument inference by inferring from the contextual type of a generic function call to the return type of the generic function.
fix the title/link for "supported platforms", which got lost in a previous toc reorg.
add support for multiple disks.
we were modifying the passed in dictionary in-place in order to handle an edge case of working_dir.
port test_trainer_distributed to work with pytest
development instructions updated to gcc 10 from gcc 9
support for using stored apisecret in denied mode and add auth headers to report requests
fixes #128786
cleanup in the examples/csharp directory: make the helloworld example using dotnet cli the default (helloworld-from-cli -> helloworld) mark the original helloworld using the legacy .csproj project as "still fully supported but legacy" (helloworld -> helloworldlegacycsproj) convert routeguide to the new-style .csproj projects (leads to simplification and easier maintenance) update the readmes accordingly.
call the luaoc bridge function , when the oc function return type is bool, i get the returntype from const char *returntype = [methodsig methodreturntype]; is "b".
this pr simplifies zca whitening by not forming the covariance matrix or the full diagonal matrix.
add or update assignment expression documentation for: faq - design reference - expressions reference - lexical analysis  automerge-triggered-by: @matrixise
change #82216 removed now deprecated target x86_64-sun-solaris from ci, thus making it no longer possible to use $ rustup target add x86_64-sun-solaris to install given target (see #85098 for details).
this pr includes two changes that reduce the memory usage of wavm by a large margin.
fixes #16733 this small pr updates the description of the sub-sample size to take into account the addition of the max_samples parameter in version 0.22.
note for others looking at this change: we're downgrading to ubuntu 14.04 for official releases so that it links against the older version of glibc and allows for wider compatibility.
the build no longer works with maven 3.5.3.  if you try it, you end up with this:
add minheights for project filters chart
added feature to move added tokens in tokenizer.
change state off to state standby
fix compile error in typescript 3.4; passport.strategy is an interface and must be implemented, not extended
remove the synchronized on method updateusageforid if token usage stats diabled
the idea is that the ci job checks if the user forgot to run the amalgamation script.
initial commit for adding plugin command
this pr reverts the incompatible changes to restore pre-1.10 behavior.
there are 2 proposed fixups in discussions in #23280 which i have not implemented: an overhaul to return types and an option type for the two *chainstate functions: #23280 (comment) the change reintroduces stringy return types and is quite involved.
associate mw factories with instances per player id
do not remove spaces in single-quote literal.
there was a regression at some point where the files under static/ were not properly prebuilt into the less cache causing them to be recompiled on the fly during runtime.
added documentation in readme, man page, man page markdown, and main-conf.c in usage and print_nmap_help functions.
remove remanents of old doc format
this patch set adds and fixes a variety of things, such as: adds the cluster-level authentication api adds bucket index management api adds the full-text search api adds missing events from bucket class adds specific event definitions for query response classes adds much more test code from the documentation fixes a lot of function definitions this patch set does not bring these definitions fully in-line with 2.4.5, but it gets them much closer.
spelling fixes in comments
this is the release/2.0.x version of #9000
feat: additional node fs polyfill support for directories
opengl access violation fix
follow the advice from the readme.
fixed typos in errors.js
optimize the constants to the utils package for the client module
fix: ensure necessary iam role for handling existing cognito pools
this pr converts many but not all of the uses in the codebase.
rewrite with es6 modules, update definitions
basically, a config constant was not type declared in a way that makes the next typescript compiler happy.
i wanted to start using vscode.
fix: compute_output_shape for stacked rnn cells with different number of units
test that strings that contain embedded null characters are passed to udf's consolidate "test param" tests to reduce the amount of boilerplate code test more error conditions when building udf arguments, and returning udf values handle pyfloat_asdouble() errors
simplify reference handling and merge two connection object members: remove superfluous pyobject * member isolation_level from connection object (self->begin_statement carries the information we need) introduce get_begin_statement() helper for converting isolation level to begin statement simplify sqlite3.connection.__init__ by using get_begin_statement use ac to remove reference handling for the isolation level parameter
pr 16162 added a sleep to _nextvaluenotready causes td3 tests to become flakey.
elaborate more on 2.2
this pr develops the tests for tf.data kernel implementations in c++.
dtst saves all trace sessions to binary file.
add getstringview (convenience function to get string_view from a string returning an empty string_view on null pointer) like getstring, getcstring
[benchmark] speed up compilation time of suite
cherry-pick from master roll crbug:  npm test passes tests are changed or added pr title follows semantic commit guidelines pr release notes describe the change in a way relevant to app developers, and are capitalized, punctuated, and past tense.
fix dependencies in benchmarks fix a wrong library search directory order when building swift-frontend with bootstrapping rdar://85911944
mcp23008/mcp23017 - extend sensor29 command to enable output
add eps for roi_perspective_transform op avoid dividing zero.
do not create credential file in headless mode
reset activerecord::logsubscriber runtime at the start of each request
the kubelet always clears reason and message in generateapipodstatus
also contains some cleanup and doc comment additions so i could make sense of the code.
issue #1712: getting dpi support for blackberry.
this pr switches to use the json stdlib for pretty-printing json encoding as preparation for moving off of json-iterator.
adds a per-profile setting for setting the audio sound for the bell.
hi, from the feedback of my beta testers i made these changes to exasol: *) new object type connections is now supported *) added "visibleif" checks to verify the user has sufficient privileges to access the meta tables for users, connections and roles objects.
make alert track its xamlroot's size changes
sql: implementing time_parse function for parsing strings
i have read freecodecamp's contribution guidelines.
feat: don't compare when there is no olddom present
added "move container to workspace"
i guess there was an issue with gulp, and a pr to remove the \9 merged, causing the offset to register with all browsers, and making the arrows slightly off center.
added docker ee specific fixes/work arounds so that the moby integration tests can be used against it.
bump starlingbank to v2 api
push scipy min version to 1.0.0
for 1/2 the plugins in x-pack, the integtest task is now a no-op and all of the tests are now executed via a test, yamlresttest, javaresttest, or internalclustertest.
no options when using sway as ipc client
updated description for sorted union bonfire for clarity.
offset option can be function (popper.js)
arguments for tasks that are ready to dispatch can get evicted before the task gets dispatched to a worker.
add support for apache kafka
this pr changes the type key and type shortcut behavior to hold enter to accept instead of hold and release, so that it is consistent with the esc behavior.
[serve] deployment names converted to camel case in cluster snapshot
the module only checks for existance of the database when dropping.
add documentation for array.find and array.rfind
this should add support for the ssh+git:// and git+ssh:// protocol schemes.
this pr makes backends take in a starlette request instead of a flask request.
add longest increasing subsequence solution in c++
revert contextual bar style
added keymap variant to approximate kin adv
add support for drupal json:api includes.
add inlinecollapsed={true|false} prop for menu, handle icon size, text display and submenu inside menu, and auto tooltip for menu item.
bael-1265: using lambdas instead of anonymous classes
add imdb and unit test
scripted-diff: bump copyright headers
bug: default+input resolvers in df.eval, gh34966
update documentation for combo feature
update to v3 preview 4 for core + framework compare
if for reason the any rule need to be disabled, disable it for that line using // tslint:disable-next-line [rulename] and not for whole package so that the need for disabling can be reviewed.
please refer to the individual commit messages for additional details.
this pr removes the tag for timeseries table in two spots - in the repo (why is this even here?)
follow-up on #37577 (comment) restricted indices (currently only .security-6 and .security) are special internal indices that require setting the allow_restricted_indices flag on every index permission that covers them.
[info] adds [] to info labels, allowing skinners to specify a number.
this will reduce redundant converstions between string and statname and also reduce acquisition of the symbol table lock.
throw an error if the inferred output path already exists.
simpler and more straight forward code for computing the arg_list string.
we have had a plyicon native viewmanager for awhile but no ts wrapper for using it.
rabbitmq fix
add support for slackclient v2
this pr adds support for the organization feature at auth0 so that people using typescript can use it in a type-safe way.
interface resource, parse, second parameter 'loader' has to be optional.
refactor mongodb chart to support replica set
chore: upgrade stop-only and catch them
since many widget classes use sprite & scale9sprite at the same time, when the user change scale9enabled properties, we removed the previous added sprites and re-added them again.
closes #800, #3876, #6170.
remove some hardcoded paths from atom.spec.in
update uishell components.
relands #74469 and incorporates #77959 from @cyanglaz   + additional changes in 829756e, 28f74e4.
#1308 fix some spelling errors of method names in file named 'utilall.java' these changes seem trivial, but it's an international project and i think the right naming helps other developers understand it.
updated the value of gtest_dir to reflect the googletest dir.
adding new git course and putting in alphabetical order
d05e816 : the current block in graphviz output is highlighted even when graph.gv.current is false.
fixed mutex_init for winrt and wp8 added base/allocator to wp8 and universal app projects updated libcoco2d dll name from 3.3 to 3.4 removed unused files.
host pred: add integration test for previous host predicate
control: add adctrajectory speed_fallback when full_stop.
emit readonly in declaration file for get-only accessors in classes
handling shortcut key only when firing 'keydown' event
siloptimizer: a new "templvalueopt" optimization pass for copy_addr
add flying shuttle plugin to server compilation
reported in #42740 ec2_group ansible version
scope: property wrapper usage inside a class issue: sr-11478 testing: swift ci risk: low.
adds a bash script to automate changing into each of the examples/ directories and try to run npm i and gatsby build.
add 16 bit audio handling for pcm int little and a_ms_acm tracks with pcm int little
if the flutter_tool's .packages is missing, run pub get offline in the directory.
refactoring emitter for emit es6 features natively
what's in this pull request?
-- some cleanup performed -- buildall.sh script -- generate_protos.sh script that regenerates proto files (as a result, it turned out lots of generated files are out of data, so i regenerated them when possible) these files are handcrafted, so i left them as they are for now: csharp/src/protocolbuffers.test/testprotos/unittest.cs csharp/src/protocolbuffers.test/testprotos/unittestcustomoptions.cs csharp/src/protocolbufferslite.test/testprotos/unittest.cs csharp/src/protocolbufferslite.test/testprotos/unittestlite.cs
there are a few tiny packages that seem like they might be out of place.
opensim as one of the external environments
follows #43686 closes #43637 closes #43644 closes #43703 tests added / passed whatsnew entry (note part of the bug seems to have been created by hiding levels which is a new feature in 1.4.0).
i don't think this is quite complete yet but this is the initial implementation for making boolean attributes like muted set the property video.muted = {{boolean}} and the attribute video.setattribute('muted', 'muted') when changing the value.
fix celery worker cli parameter name that was changed in celery 4.x.
fix possible memory leak for android
add missing 'tab' parameter
[docs] adds more tests for security apis
this updates ansible-pull as described in issue #2464 and the ansible-pull docs to conform to current available options and usage.
we want to deprecate jenkins and move the tests to travis.
doc: add strings for dypes in basic.rst
feat(translation): hindi translation for we-lang
extract empty/script/missing behavior from valuessourceconfig
filter unneeded query result fields for unauthenticated users
i2c bus reset with info to user
implemented pep 612 behavior only in collections.abc.callable in pure python.
remove some closure ignores, which are bad for code size
bump lib network to 92d1fbe1eb0883cf11d283cea8e658275146411d
account for x and y probe offset when indicating current position on grid when displaying mesh map.
update addressbook.proto to proto3
see  this makes it possible to build a bitcode enabled ios app if you're using a local engine built with bitcode.
see #5841 -- i used a version of path.relative that should work on all platforms.
change this change fixes the case when opensource returns a nullptr.
initialize unsized locals when copying to the for the first time
tab close button doesn't color properly when changing tab color
fixes tree reduction failing on new instance type p3dn.24xlarge, which was raised here: dmlc/gluon-nlp#520 please feel free to remove inapplicable items for your pr.
updated to more efficient version if array size is scaled.
[jvm-packages] update docs and unify terminology
the @types/eureka-js-client package was missing the definitions for the requestmiddleware function definition.
linux: also import l2tp.h from kernel-5.0
add 3.8
bring pure python (datetime|date|time).replace behavior in line with c
with this we are changing the webpack devtool to eval in the development and we no longer use source map.
fix issue #6884. lstm + non-shared vf nn + ppo crashes when using a tuple action space.
add files to install openpose under jetpack 3.3
added support for eplus
previously, we have three-layer storage abstraction which actually is not necessary.
no functional changes, let's just make nspawn easier to maintain.
add or edit tests to reflect the change.
an ownershipintroducingvalue is a value with owned ownership that is not a result of forwarding ownership from some other value.
datafeedjob task id
add "mark all as complete" checkbox bound to a writeable computed observable and minor code cleanup.
fix ship truncate problem with stride
grafana_datasource: add integration tests for elastic datasource
(2) the @main entry point is modified to be
new features others tensor transforms on gpu normalize to_grayscale vflip hflip crop center_crop pad rotate resize
crash when chaining different uniq*state
remove memory leak from asset generator
add support for distributed functions in extensions of distributed actors.
revert "avoid global ordinals in composite aggregation (#74559)"
the waitfor.js example does not work, because the twitter account used in the example doesn't exist and twitter changed the structure of their page.
try adding a builder image.
we instruct compiler to generate code layout in favour of situation that objects are cached.
small follow-ups to  #19935: removal of unused keyidhasher  class (comment in 19935) removal of an outdated comment, which referred to an old problem with the no longer supported boost 1.46 and boost::unordered_map, now replaced by std::unordered_map.
elasticache replication group server configuration
add more tests for generatedkey delete invalid class named datasourceservice.java
this p.r.
use os.execl to "run" subcommand on unix
short description (up to few sentences): fixed wrong argument types for aggregate functions with low cardinality arguments.
@ctiller @nicolasnoble @tbetbetbe @murgatroid99: this is a lot of code, but aside from license headers and path renames it's a straight copy out of google-internal source control.
keep redirectcontroller links consistent as discussed in  change links from github.com to api.rubyonrails.org details keep redirectcontroller links consistent there are two links defined to redirectcontroller, with backticks and without them.
description: add an option to control the percentage of requests we apply fault to using http headers.
others others migrate 2.0 api example for gradients and append_backward update api into paddle 2.0 in sample code variable --> tensor refine to display doc zh doc pr: paddlepaddle/docs#2685
i started with @gjedeer 's work and then worked on making tor support more tightly integrated.
add dwarf tests for big endian
the interesting part of prophetnet is its decoder which can do n-gram causal language modeling.
bump 0.1s timeout to 0.5s
correct default return value for softap fix eclipse debug level handling
op(squeeze) error message enhancement for c++.
use esp32 1.0.5 release
add blob & file type for readfile api
fixes #170 by merging in props to link.
fix radar default aspect ratio and samples
build: remove support for weak linking getauxval()
the following commits allow micropython to build on openbsd.
this adds an initial dataset.stats() framework for debugging dataset performance.
fix link to upgrading guide
doc: update release notes for 0.16.0
revert "[core] iterate over entire dispatch queue instead of returning when worker unavailable (#16535)"
remove ui-lovelace.yaml
case 1. add a new type definition.
bug fixes others fix and enable test_multiprocess_dataloader_static random fail fix #25265 not need to keep order if there is only 1 place check thread_done_event on read queue timeout reduce data shape to reduce share memory use for ci only have 64m in /dev/shm tested 1000 times locally, test script as follows: export cuda_visible_devices=0,1 for i in {1..1000} do echo $i make test args="-r test_multiprocess_dataloader_static -v" done
fix concurrent ending step 1
unfortunately, that breaks message extraction (via babel-plugin-react-intl) in this example: on subsequent runs it'll fail to extract messages in unchanged files, leaving the list of strings shorter than it should be (or just completely empty)!
add support for sass-loader's prependdata option
update of the rgb_led struct layout to a more efficient layout.
nesting does not currently work if you set depth to something greater than one.
fix: start date format for executation log
make sure there is a github_issue field for the change (usually before you start working on it).
add attachment insert method return type
added test for fix incremental pca value error
added support to the high-level rest client for the create snapshot api call.
fix issues when deploying sls template with custom event bus
use static method for sqlstatementassert
xxxxx xxxxx xxxxx follow this checklist to help us incorporate your contribution quickly and easily: make sure there is a github_issue field for the change (usually before you start working on it).
backport pr #31442 to beta
updates to support 5 extruders
feature_segwit.py has tests for some legacy wallet behavior, but otherwise does not really need the legacy wallet.
this pr changes a bunch of internal code related to data handling, but does not change public apis.
make allows remote indices a request property
@rocketchat/core closes #7408 this feature allows someone with "view-room-administration" permission to list all groups with the api call /api/v1/groups.list similar modifications should be done in the other groups api calls to ensure users with the proper permissions can do the same thing via api than with the web interface (such as delete & modify groups)
added missing attributes for noble peripheral
with the 'receiver' as an argument and static dispatch.
add types for ackextension and timesyncextension
add or edit tests to reflect the change.
updates xcode_backend.sh to use (mostly) assemble apis.
condition variables.
added support for multiclass mcc
how patternbindingentryrequest::evaluate handles pattern binding
the second problem was that the contracts builder step had a timeout of 10 minutes, but took about 10 minutes to run.
the documentation said gcc >= 8 was needed to build serenity but my current 8.3.0 didn't work.
during our perf test against elasticsearch, we noticed two synchronized block in the call stack of fetching doc values, which i think is necessary and cause a serious gc issue for us, especially when "size" param is large and fetch docvalue fields.
update http to https in solarized
react without jsx
stm32h743iit6 arm cortex-m7 run in 400mhz ltdc + onborad sdram + onboard qspi flash direct drive 7 inch (1024 * 600) tft screen (tft_color_ui is now available.
just truncate name internally as in iphone to load font with path but you still need to add all fonts to .plist file another version #7557 that load font directly by path you don't even need to add it to plist file merge only one
introduces fontconfig, an object that isolates font-related settings in our profiles users can now define font settings in their json as so: "font":{ "face": "consolas", "size": 12 } backwards compatible with the currently expected way of defining font settings in the json, note however that upon hitting 'save' in the sui, these settings will be rewritten to the font-object style in the json (as above).
add context=default option to file module
demo.mov proof of concept for "wizard" workflow.
remove trailing whitespace
these are unlikely to cause practical issues but after bootstrapping with fuck; fuck shellcheck gave me an error in my bashrc.
introducing /cc for case insensitive
add a unit test to callback pattern.
don't mark sitepage dirty if just updateat changed
github-pull: #20403 rebased-from: c46c18b github-pull: #20403 rebased-from: 2498b04 github-pull: #20403 rebased-from: 99d56e3 github-pull: #20403 rebased-from: ca8cd89
core: silence wclass-memaccess warnings
with this pr we always defer resolution of conditional types when one or both of the check and extends types are generic (as determined by typeflags.instantiable).
closes #31469 tests added / passed passes black pandas passes git diff upstream/master -u -- "*.py" | flake8 --diff whatsnew entry
mark command as optional for docker run
move error checking and display
node: remove redundant widen of query type to any
[airplay] - evaluate the new "enable airplay video and pictures" setting - this allows the ios9 users to restore at least music streaming capabilities (by disabling video/pictures support)
enable tensor core for conv cudnn
add multiple pid defaults to configuration
add buck files for nuclide support
change handshaker api to use a read buffer to pass leftover bytes read
naver whale is chromium based browser.
fix unknown column bug in sampling.
added stripe-node typings for webhook verification
add bigquery to google cloud storage operator.
since esp32 build variants are normal builds.
we are checking device names in addition to major/minor numbers to ensure we distinguish devices from each other.
fix: allows to update an installed module from a tgz package
placeholders and layout-adjusting elements are unnecessary in the accessibility tree, so i have removed them using the aria-hidden attribute.
this will resolve issues around circular dependency management.
added a nordic layout for ut47
add error message for rest parameter properties
use public paths in module augmentation test documented module augmentation / we have a notion of what we consider "public paths".
new behavior only for type variables with nullable constraints
removed bypassing option filtering in user model
updated the pinout for the rgb led strips for the saturn60 updated the layouts because there were major changes to the pcb electrical matrix added more keymaps to cover the main layouts and updated via keymap updated the info.json file for the qmk configurator to support the new available layouts my code follows the code style of this project: c, python i have read the pr checklist document and have made the appropriate changes.
1) enable onboard sd card acess, 2) add fysetc minipanel 12864 pins
to fix some ci failures.
added definitions for source-map-support
fixes a failure of proj.android/build_native.py when there are spaces in the folder path.
gradient doc changed
fix calling deprecate with correct arguments (#44726)
(replaces #369) fixing several merge issues: sidebar width:  selectbox on sidebar:  deck height:  graphviz charts are centered instead of left-aligned a lot of elements are now wider than they used to be.
this pr makes the tf transfoxl model compliant with amp.
this pr adds three things, refactors the socket and h2o_conn_t, adding get_peername callback to obtain the peer address (instead of providing a pointer to struct sockaddr) adds get_sockname callback to obtain the local address the fastcgi handler uses get_sockname callback to build server_addr and server_port properties of fcgi_params amends #346
add rowattributes getter to pageiterator
move tests specific to tslibs.parsing
update piptools patch
fix(aws api gateway): fix handling stage settings when in nested stack
warn about more ignored bounds on type aliases
rustdoc: removed foreign{function,static} item types.
now: if the graph has a root node and there is a path to the root node, then it will not be considered an orphan.
resolves #150. this pr introduces a solution to the long-standing problem of wanting to use @apply with classes that don't exist in the same css tree.
[null-safety] migrate app dependencies of flutter driver
support custom attributes in retokenizer.split
also covers all related articles (bael-3976) all tests pass (all manual) added docker command line in comments in each test to be up and runing quickly upgraded code and dependencies to spring-data-elasticsearch-4.0.0 (released last week) and elastic search 7.6.2. caot be more up to date than that.
initial check in - support other jsx factories issue #3788
add search parameters for binomial coefficient
i had somehow missed #4510 and was a bit surprised to find out about this undocumented hack to get featuregroup to work.
let security_connector mange the pending handshakes on server side remove tcp argument in handshake_done callback signature add a security_connector_shutdown api add a handshake_shutdown api to shutdown tcp do nothing if handshake_done with ok status and null endpoint
allow using a custom host name for endpoints and health checks.
easy answers to where tslib.ints_to_pytimedelta and tslib.normalize_date belong, so this moves those.
description: adds rtsp stream support for uvc (unifi video client) integration.
add network_statistics websocket command
i hereby agree to the terms of the cla available at:  changelog category: translation for #9983
this updates the gles rendering methods to use cpicturebuffer like the gl rendering method does.
this pr will begins the first steps of moving dashboard into spa while using the new dashboard api's dashboard/:id/charts and /dashboards/:id.
hi, this pull request fixes issue #1002 by adding a new cmake flag nv_caffe and #ifdef where needed to distinguish between the standard caffe and nvcaffe.
added priorityclassname as option
this pr is a first cut at support multiple-block returns.
win_group_membership ansible version 2.6
issue #18593.
messing around with github actions, trying to see if this is possible: we will run checks only on the submitted project euler solution and not all.
adds the tensortransfer instruction in the same block as the corresponding graph_op instruction.
adjust the filtering on data endpoint when a context parameter is used.
deprecate tls_context in listener and cluster in favor of transport
update docs to no longer use deprecated theme-ui layout and instead use theme-ui components
corrects the layout data for the layout_all macro.
issue: partially related to #4903 today we have an option to extend  webpack config by providing the function like this: module.exports = (basicconfig, mode, defaultconfig) => { /*...*/ } where defaultconfig is a few rules bigger than a basicconfig.
missing arguments.
it also introduces tests for io worker methods within worker pool (which we didn't have for some reason).
restores similar behavior to make rules, where: the step order was always the same, e.g.
add test for syncfs with an already existing directory
[niconico] back-port extractor from yt-dlp
fix: ensure to log deprecation at initialization stage
adds props to gridtile
update quick pick focused state
remove some dependency of ray core
deprecate squeeze option
the completion suggester ignores the original weight of the suggestion when duplicates are removed.
i haven't implemented the symlink, because it was previously broken for os x as well (the shared library had an .so extension) and i'd rather prefer pushing the users to do the right thing.
rustc: fix a dynamic borrow error in resolve
this will allow experimenting with the remove to string transformer before we're ready to turn it on by default.
this pr removes gltf rigged simple model which seems no longer necessary.
moves the python tests to the python subdir.
allocate rust_ivec buffers out of the kernel pool
tidy up xbmc_keysym.h
introduce irelativepattern and use in extension api
this pr adds the scriptcode to the list of preferred locales as well as provides a new locale resolution algorithm that considered the preferred locale list instead of just the default (first) locale.
i've never heard the term "oneshot" modifier key before.
this pr fixed two bugs with imageviewer, related to image rotations: the image looked shrank after rotation due to the window not being updated properly.
increase default cq count from 1 to num_cpus
feat(mongoose): added flag for new url parser
hi david, i added a few options in regards to security of websites.
add commands to check the database -w check-database, fix-database, compact-database
sparcity of a matrix
add directory watcher to tsc
deepchecks is a python package for comprehensively validating your machine learning models and data with minimal effort.
after fixing this, it turned out that init and shm_size have no idempotency checks.
add the ability to ignore unknown fields in eds.
added new api to gpbenumdescriptor to enable introspection of enum values.
[gardening] refactor out computation of a callee's level into its own helper function.
allow compilation with nvc++
this is to add a tower_settings module which provides the ability to get, modify tower settings, which are at /api/v2/settings/all.
mapbox-gl: geolocatecontrol support v0.39.0
currently plugin just resolves url() paths relative to the main sass entry file.
ignore: skip utf8 bom in ignore file
fixes for a few outstanding issues.
in addition, attributes and derives are exposed differently than other macros, getting their own item-type, css class, and module heading.
gatsby-transformer-json is a great plugin to parse raw json.
this pr backports fixes and improvements for gbm and drm prime to leia.
trie tree fixed general code quality iso c++11 standard conformity fixes lgtm alert closes #1057 added file name matches file name guidelines added documentation so that the program is self-explanatory and educational - doxygen guidelines pr title follows semantic commit guidelines
used by web components polyfills.
fix info.json: keys dislocation
translate more files, fix outdated remote.md section
@akien-mga i've alleviated the life of kinematic character by healing the jumping problem joking apart i've fixed it that was caused by untreated shape scaling, i've also removed the useless error code reported during shape deletion.
reactimage: canvas wrapper to play nice with reactimagebrush overrides arrangeoverride to provide reactimagebrush the available size (needed for 'center' and 'repeat' reactimagebrush: xamlcompositionbrushbase that switches source brush based on resizemode uses compositioneffectbrush for 'repeat' resizemode bordereffect: header-only implementation of win2d-like bordereffect (used in windows::ui::composition apis) includes effectbase as we will probably need to add more effects in the future (e.g.
fix for @types/xrm missing context.getversion #16528.   also fixed td bot parsing of definitions by making one line, and updating tslint to allow for the long line.
fix memory leak
revise creation of control flow graph for try-catch-finally statements
sema: fix crashes when a call of a closure value is missing a 'try'
this pr adds a new api into the kubelet server which could return statistical information about a container.
feat(ali-oss): add types of refresh token
add a jwt test case for interop test
update for 4.3
migration dump uuid default functions to schema.rb.
context menu entries like evaluate expression and
the health was not checking the size returned by fread, so it could work with less data than available.
properly cleanup deleted files of obsolete charts from disk; fixes #1358
update the trello description
properly support scrollview keyboarddismissmode
add wrapper around new slot
get pixel color for a full window and connect functionality to ui.
added additional assertion that input image is not empty.
make use of rpc arena to avoid protobuf copying and destructing which are really expensive for complicated structures.
fix: both data and label now copied correctly in hdf5 output layer
jenkins-20023 this change moves jenkins.docli() to own rootaction.
edit: push another fix for lsh_projection_test, as discussed in #44982.
change the way to generate actor handle id.
update doc for ndarrayiter
the only remaining suppressions blocking us from sdl compliance are coming from folly(4244 and 4267 being set off from toascii.h), which i will address next.
asoc: rpi-wm8804-soundcard: use modern dai_link style
review with "hide whitespace changes" is recommended.
this is a hodge-podge addressing a few of the items in #17652.  individual commits should be item-specific(ish).
maint: move 9 constants from np to np.core.multiarray
here are my copyedits to the byterun chapter.
backport #2402, #2416, #2419 and #2708 into 0.10 release branch.
run lint for python and coffee scripts in the cibuild.
since the endianness of test dataset is little-endian, conversions are required on big-endian machines.
*: remove nikhiljindal from owners
add option to control webui clickjacking protection
since mi desk lamp isnt used by most users make it off by default the code change pass travis tests.
update typings to 1.13
both saving and loading are about 10x faster now.
new directory iterator testing function
add merge base output for job --> input to action-visual-snapshot
this pr includes a test that i've enabled in #13358 and another test that we've discussed in #13462 as well as some random cleanup while i'm at it.
update data for nc 6/21
update nimble to 1.1.0 release.
meta: cleanup stale rules from .gitignore
as the new textcat_multilabel component has been released as part of v3, it should be documented in some more detail as well.
update documentation for rax module
added missing axis field
vendoring: vishvananda/netlink 734d02c libnetwork  ed311d0 update check-config.sh to check for optional modules needed for secure datapath fixes #22185 fix for moby/libnetwork#1247 fixes crash at boot when xfrm modules are missing or are not autoloaded for the bugs with an issue open, refer to the issue description.
fix cd
i hereby agree to the terms of the cla available at:  changelog category: documentation for  #17832
doc: logging.formatter: add missing validate argument
skydive node and edge module
what do these changes do?
adds lots of comments to algo code.
added an algorithm to approximate the area under a curve i have read contributing.md.
[docs] fixes get roles api examples
for issue #97. once you create a request, just run r.request.curl for the curl command.
fix example for mx.nd.contrib.cond
in visual studio, we currently trigger directory watchers when saving an open file.
/area code-organization deviceplugin and pluginregistration are external facing apis.
vault operator chart lints
this runs git diff in the current repo and applies any git patches as code review comments on github.
[frontendoptions] enable structural opaque result types and remove
this basically allows us to compile kodi core for arm64 targets.
add basic fuzz tests for a few common builtin functions.
change css output file name to style.css
remove static* runtime vars
removes mentions of asm.js and other unneeded things, and focuses on hopefully more useful content.
revert "metadata updates for release 8.10.14 (#2354)"
chore(package): update jest to version 21.0.1
recycle equation colors
run --no-exit-runtime only when optimizing.
merge with contrib: opencv/opencv_contrib#2506 relates #16736 opencv_contrib's sift.cpp history.
add a config parameter to use a chrome executable path, instead of downloading chromium inside of puppeteer.
upgrade to chakra ui v1
fixes #87718 the problem was that synth_type_param_count was already subtracted from named_type_param_count, so this ended up being subtracted again.
fixes googleapis/google-cloud-ruby#1327 this only fixes the immediate bug on the client side.
added litelink in url shorteners
future releases of atom-shell will be published to the releases page, instead of uploading to s3.
node.js protoc plugin
fill in some missing parts in the default ast visitor
libweb: add all html elements between a and f
add docker plugin
move .proto files up for reuse
#3599 the goal was to match the behavior of $near in tests to mongo as close as possible in tests.
this pr makes sure that no mask_indices are predicted for padded tokens and thus ensures that the loss for padded tokens is always ignored.
a paragraph in the contribution guidelines, following a comment by @reshamas #12878 (comment)
depends on #19882 the transactions table only included the sampling key clause in april (for on prem).
fixes #5484 this change prepares us to use rntester as the primary app for end-to-end ui integration tests.
segfault in dataframe.apply with duplicate column names and multiple aggfuncs
print error message when vswhere is missing
quick access :lipstick:
remove import of opencontainers/runc in windows
fix to remove warning on postgres adapter test.
the pr includes two new unit tests : expand and repeattensor.
close resources before deleting logging handlers
add via configurator support
gracefully handle errors from callbacks.
refactor physicscontact inherits from eventcustom; simplify emitting collision events
removed ut_string from logging
this pr is quite large as it sets the foundation for the changes needed to enable stricter type checking when sending our telemetry events.
rm travis env vars used for defunct custom caching system
this pr fixes #85058
translate permissions names
chrome_version.h is dynamically generated by bootstrap.py so it
adds the ability to set the lift off distance between the sensor and the surface.
[17.03.x] fix autoremove on pre 1.25 api
stable precision matrix
replace itemrepeater with listview
make puppet module useable on puppet 6 (#46044)
initial refactor of ergo42 to split common
see #9135 (comment) & #9135 (comment) the previous scheme would report an onblock trace for the case where a block is aborted with a valid onblock followed by a non-aborted block with an invalid onblock.
publish an empty notification for empty keys
update(docs): mark gatsby internal docs for update
added fast path rendering for textblocks when possible.
changed: get rid of the 'run automatic scan' button from the content setting dialogs
improve errors for missing debug and display impls
rustdoc does not warn about unknown, renamed, or removed lints
add owners file update logo add hlftoolsversion and mounttls options.
implement nested with multiple nesting
enhance xml to rst converter
added a build step that copies the js files from src/libraries into libraries.
shrink sequence gtid set
so i created a support for a custom gcode that is used only for devs.
make error message for dynamic imports when module is es2015 more helpful
fix resolution of exported types in commonjs
[object spilling] automatically spill objects on outofmemory
i was fiddling around on the menus in this pr: #12024 i was finding it strangely tedious to have to click the global nav menus to open them.
dictionaries as data are returned as expected and
to prevent the url from flashing this moves the populating of aspath into the router fixes: #8749
tests added / passed ensure all linting tests pass, see here for how to run them whatsnew entry oversight from my other pr syncing 3.9 builds
follow up for this comment on pr #12745. previously i was tracking base time for all fibers, regardless of whether they were inside of a profiler, because the place where i started the timer didn't yet know if it was in a profilemode.
fix some issues for so11y
add emergency_parser to lpc tests
futurewarning in categoricalencoder due to np.issubdtype
[concurrency] simplify checking for local functions.
hey, this is continuation of work done by @drogus.
libjs: implement temporal.plaintime.prototype.tostring()
modify borg check unit test so it "hangs", see #3444
fixes #2130 by taking inspiration from #2466 changes inputtypes, audio, video, input, postmessage and daturi tests to use the addtest function isntead of adding the values directly to the modernizr object.
unit tests
doesn't effect typing speed by using the "absolute positioning flexbox repaint hack"
add required parameter 'el: raphaelelement' to insertafter() and insertbefore() methods
update submodule abseil-cpp to abseil lts 20210324, patch 2
with this pr i'm looking to add some features to serenityos chess that are present in most popular chess platforms, which would make the program more capable.
add two articles about writing native component in ios
allow for refit=callable in *searchcv to balance score and model complexity
slightly improved batch position checks, extended type to avoid overflow errors
this attempts to fix the annoying new add-ons being disabled thing in pvr.
this change ports that code into react-native-windows as forked files, to help get us off the microsoft fork.
only emit necessary things in asmlibraryarg in the wasm backend
added small test for bigquery sensor
this just reverts one commit from the last sync.
use is_alive instead of isalive for python 3.9 compatibility.
this is xref #27700 (comment) closes #13420 tests added / passed passes black pandas passes git diff upstream/master -u -- "*.py" | flake8 --diff whatsnew entry
added missing gcp modules to gcp module defaults group
add oled support for comet46
make error prop more declarative
infer dtype in symbolblock import from input symbol
fixes #52671 reverts return_timestamps from nxos, ios, iosxr #50261, #52670, #50323, #50095 timestamps can be implemented in task using
#2749 returned the negative levels to pre-#1562 behavior.
guard against min/max being macros in document.h
do not call grpc_init() for per-call-completion-queues created by a c++
fix different interface link in kernel method
unregister when exiting react only to actual device insertion/removal, ie do not reenumerate the usb bus to find a cec adapter when a cd is inserted... i don't see any risk here, but doing a pr since we're close to release.
support for tiled groups and infinite map fixes
adding option to specify the button of webmouseevent.
add save button
aplay: port to libmain
bug/tst - do not multiply period diff result by freq scaling factor
this fixes #1054.  this is a strange interaction between the following: convenience method like request.get() called the result of url.parse(x) passed as the uri option the request results in a cross-protocol redirect.
i put some notes in the code - i hope you might clarify those points.
updated ubuntu 18.04 instructions
add support for light sensors with lx unit
@adichat
refer to #542 . with this, we can get rid of mingw in windows.
update doc for ui deploy
follow-up to #4463. at minimum, we want to run python and c++ tests.
follow the advice from the readme.
add retext-spell in order to spell-check our docs and fix a couple of spelling errors.
add a new keymap for kbd67/hotswap, designed for people who both code and have to write math in non-latex environments on os x. checklist: my code follows the code style of this project.
this fixes the problem described in  the last commit makes sure that the order of the list in the musicvideo library node when accessed through the music library is the same as the default order in the video library.
fixes #3927 component name external bash collector module apcupsd.
add style improvements to solutions for pe problem 04
mysqlnd_field_type_name is not used anywhere.
in this commit i have: added javadoc to every file except for the java files in the "heap" package i took the files with spaces and renamed them so they don't have spaces let me know what you think and my work so far.
closes #29338 problem: with inputprops={{ classname: browser-default }} on a textfield component, input element has two of the same classname: browser-default.
this pr is related to #1956. vs 2019 has been released recently and the latest cmake 3.14.1 supports it.
add or edit tests to reflect the change.
#3190 tweens/timeline parent.makeactive missing
lets see if these build stages work
update in return type of "on() event" method.
libaudio: fix overflow on 24-bit flac lpc data
checklist closing issues: #issue i wrote some lines in the radare2book i found that the original mips.gnu assembler is using some really old binutils codes, so i migrate some new mips support components from the current master branch of binutils-gdb, fit them into radare2's old headers and make some adjustments to let them act like before.
cherry pick #37340 to 5.5 re-apply #37531
add support mini12864 v3 for e3p board
this fixes the problem that the application crashes when dragging a file to a non-valid index in the table.
adding support for lutron radio ra2 shades as cover components.
fixes accidental breaking change introduced in 1.5.0. we can probably fix this in an even more robust/intelligent way but this should fix it for 99.9999% of people as-is.
hi this is part of #51430. i'm a first time contributor, so i started with a small task adding a bit of documentation for from impls.
(restructure) prevent terser 5 from inlining functions
sorted things..
alternate to #27955 (can't push to their remote) but with a more robust distance measurement.
the fix itself is worthless.
minimal fix to ensure that all returns have line numbers.
fix invalid table maxheight prop type
move view related files into new view folder and lib
4.0, 4.1 and 4.2 docs: add canonical tag.
adding space to -l flag causes swiftc  to produce abstract error.
added a new python script for testing amqp cases select one: select any that apply:
meta: exclude libwasm parser.cpp from sonar cloud static analysis
correct keystore commands for email and jira actions for watcher
for mingw, drop the 'lib' prefix from shared library name
this pr refactors the previous pipeline into a format that is inline with openexr uncompressing pipeline, and adds support to rle compression format.
add sentence class to brill tagger
add theme support for choosing overscroll indicator
use correct span on while (let) lowering
some more upgrades of dev to match the premultiplied multiple blend modes.
reasons: it has been planned to remove keylabel because it brings confusion to usage, and complexity to expanding code related with logical keys.
legends now have uniform but dynamic number of fraction digits
start support for texture loading
add nansum api
this pr adds my layout for the chimera ortho and planck keyboards.
changed the type of faker.address.nearbygpscoordinate's parameter coordinate from string[] to readonlyarray<string>.
add set -ex to build scripts as well as bazel flags for incompatible versions.
build successful:  i hope in the future we will be able to drop requirements_rtd.txt completely, but now pip still fails to resolve conflicts with preinstalled old (1.8.5) sphinx and latest breathe.
cy.request() now accepts a generic in typescript for specifying the type of the request body make the type of response body of cy.request generic.
fix two issues that would case crashes for programs using swift concurrency in back-deployed scenarios: cannot back-deploy mangled names including isolated parameters.
i made the mistake of writing the method result::unwrap as fn unwrap_err(&self) -> t { unwrap(self) }.
use the family argument (and others) when creating the kube-load-balancer-source-cidr in proxy-mode=ipvs.
report events at most once per second
state transition label renders incorrect on safari
fix error handling in os.sched_setaffinity.
ec2_vpc_nat_gateway ansible version ansible 2.3.0 (devel e35a757ee7) last updated 2017/01/12 16:42:33 (gmt +1000) config file = configured module search path = default w/o overrides check if eip exists before deleting it after deleting the nat gateway, the eip sometimes seems to cease to exist afterwards.
net: cconnman: make some methods const
fix the incorrectly nested comment printing
[docs] improve heading structure
h2o_mruby supports simple reverse proxy method.
this patch set enables prefix delegation for a link that shows up later than the ones running the dhcpv6 client.
properly handle mapped types with 'keyof any'
steam games were not showing up while searching using powertoys run.
retain vault password as bytes in 2.2
implement test for softrelu numerical stability
this is a continuation/split-off from #22986, where i tried to deduplicate the cython code for unique/factorize, and add a return_inverse kwarg to unique at the same time.
documentation for the forceapprovalprompt option for loginwith<externalservice> was missing - i copied the documentation for the same option from accounts.ui.config
fast parsing of ints/doubles as strings as described in #560 note: the null-termination character is never added, always use explicit length
backport of 12524. in running tests on pypy, there were failures due to improper use of the c-api: calling initoperators to initialize the generated ufuncs before calling pytype_ready(pyufunc_type) using the pysequence_fast* functions before calling pysequence_fast which works on cpython but does not always work on pypy we could prevent these mistakes by getting pypy into our ci testing, but there are still test failures due to insufficient ctypes and memoryview support in pypy late writing docstrings into types and objects via _multiarray_umath.add_docstring
handle destructuring zero elements from void
it's supported on windows now.
reject empty values in dynamicform
[irgen] use singleton metadata strategy in jit mode.
the blob class was missing the text() method which turns the blob arraybuffer into a string representation.
adds additional constant payload generators.
fix _py_set_blocking() for vxworks rtos
added rotation/panning support for trackpads based upon key-bindings inside of the settings.
ignore node_modules by default
initial commit of oauth2 client support for gitlab #512
add sort group by users tests
i hereby agree to the terms of the cla available at:  category: short description: for tsvwithnames/csvwithnames formats column information (columns order) can now be parsed from format headers.
[ci] upgrade cudf and rmm to 0.18 nightlies
fixed td-2499, ensuring crash_gen tool releases all db connections when completing tests
this pr is to fix some incorrect anchor links as below.
follow the advice from the readme.
integcli: use dockercmdindir in build tests
fixes #14337, fixes #19228, fixes #14748, fixes #18956, fixes #14282 apologies for the massive pr.
enabled code analysis for the editor.
rounds up fee on ram sells in the system contract to ensure a non-zero fee is always paid.
enh: vectorize base math with sse2
add default export to type definition and import it in test
basic version of data transfer object pattern implementation.
remove implicit dependency between iam policy and log groups
single_file html output fix
move default webpack.config to core
error on forward references for property initializers
it previously wrongly had the role descriptor names from the api key definition.
switch all documentation links to match coffeescript literal notation
update: refactor check_for_upgrade file - move .zsh-update file migration inside check_for_upgrade - use a trap to remove the lock folder - simplify upgrade script call - rename functions update: remove lock directory if older than one day update: fix trap for sigint and read prompt on non-newline characters fixes #4992 fixes #5286 closes #6646 fixes #7042 fixes #8332 remaining upgrade issues these are not solved by this pr: #2971 #4361 #6732 #6989 #7539 #8003 #8387 #8788
issue link: airflow-6521 description above provides context of the change commit message/pr title starts with [airflow-nnnn].
this pr aims to add proper support of mask in timedistributed wrapper layer.
fix linux dependencies.
fixes #18831 this pr also includes a package version bump (16.13.1 -> 17.0.0-alpha.0) so that devtools tests will pass ci.
[maven-release-plugin] prepare release libphonenumber-7.4.5
according to my understanding, we should use zext for unsigned int, and sext for signed int.
using max-width in flex: 1 0 auto; in ie11 offsets the center-aligned contents
lazy metadata or not.
plot_svm_scale_c.py and plot_discretization_classification.py use deprecated plt api
ak: move memory streams into their own header.
update with service mesh
what's in this pull request?
this pr refactors the rllib train.py script to depend on a new ray.tune module, which implements efficient hyper-parameter search.
modifies randomversionbetween so that it works with unreleased versions.
i checked most examples and the only problem left is the depthpassplugin.
add v1.17.0 api compatibility data
backport of #36824 to stable-2.5 fixes documentation and ip configuration where no public ip is defined.
this commit lowers the severity for all settings from critical to warning for all settings that are still present in 8.0.0. releated #79107 === note - i have requested review from @tvernum and @jbaiera since these settings are mostly from areas for which they are familiar.
this pr is a continuation of #76455 changes overflow renamed to posoverflow and underflow renamed to negoverflow after discussion in #76455 changed some of the parsing code to return invaliddigit rather than empty for strings "+" and "-".
added izi in transportation section added zippopotam to geocoding section
add ability to get an individual full error message + test for full_messages.
there's one user who has an issue that one of raylets cannot schedule tasks anymore because num_worker_not_started_by_job_config_not_exist  > 0. this pr adds better log messages to figure out if the root cause is the job information is not properly propagated from gcs to raylet through redis pubsub.
followup to feedback from pt.
add or edit tests to reflect the change.
implementation of #6345. the code might be a bit complicated, though i tried to make it as de-coupled from the rest of the codebase as possible.
this speeds up testlogview in test_views.py by moving the app instantiation out of setup and  into setupclass.
with quite some discussions on naming of the apis, finally adds 3 new apis: bool objectempty() sizetype membercount() removeallmembers() apis similar to vector::capacity() and vector::reserve() are not added for member, because some possible implementations of associative array may be considered in the future and these apis may not be suitable for those situations.
fixes #18837 on sklearn.decomposition set check_finite to false after verifying that the input is checked by one of the internal functions.
wipe all packages test
ir for demoting atomic bit struct stores
changed globals definition to nightwatchtesthooks
avoid extra method calls for appending newlines
extending the gpgpu birds demo so that it can load any gltf model/animation and use meshstandardmaterial to shade.
second commit fix ticket 12729 by tell libcurl ignore content-length of shoutcast file.
raise an error if the default object store size exceeds 90% of available memory.
this pr implements features that are sufficient to support wordpress-style url rewrites without stepping into the mod_rewrite-hell.
deprecate split complex inits
adds a new tab for windows containers on the run envoy section to illustrate how to use envoy with a windows container.
show confirm message when deleting the following items.
chore: update samesite introduction
do not overlay a runtime field with index sort
feat(docs): add how to contribute to coderoad tutorials
just a pr to fix some of the troubles that i ran into when going from .pipeline(parallelism=15) -> .window(blocks_per_window=15) follow on to #19050 i've run scripts/format.sh to lint the changes in this pr.
minor: add 2.1 to the metadata_upgrade test
hide some implementation details of array types.
swift-api-digester: teach the tool to detect member variables change to global ones.
adjust relative import statements to use relative syntax
first 10 motivational quotes for italian
atom can no longer open readonly files
fix bug with pooled http sessions and host ip change
when performing an in-memory rebase, we should be able to rebase a branch with no common ancestors (that is, the first commit to rebase has no parents).
this adds: a way to make the compiler ice a way to check for ice in cfail tests with should-ice a regression test for issue #65401 i am not sure the attribute added should-ice is the best for this job
the initcascades function must be called whenever fov, near, far, or aspect fields are changed on a camera so it can be a hot function especially when resizing a window or animating a transition between camera types.
: add annotations to cri-api imagespec objects.
don't retrieve config in running_config when config is provided for diff (#41400)
while awesome, the initial type definition was made based on reverse engineering and improper documentation.
rename container_option to container, make runtime options have the same code style.
python side task node class
[index] move core indexing code out of sourcekit
if axios is used with multiple domains, the auth_token will be sent to all of them when using the example code: axios.defaults.headers.common['authorization'] = auth_token this pr adds a comment above the example to that effect and points below for an example using custom instance defaults instead.
fix bad size of marks
rest of the applet area using "window" color role.
while i defaulted to always adding the debug check to the beginning of build - we should probably discuss the best way to do this.
util: make encodebase58 consume spans
python.d.plugin should exit if it cannot send data to netdata; fixes #1155
for #10970. i do not know if i misunderstood the requirement, but the first five tests required, as stated in the issue 10970, are already in the master branch.
add unload method to webtwainenv
since #2086 was well received, i thought i'd start us out.
in addition, fixed u2f device page to support new device interface structure and support deleting newly registered u2f devices
push to github of changes to the tfrecord data generation script for delf.
adds glfw_focus_on_show window hint and attribute for issue #1189. this is a platform independent change which preserves behaviour for all applications written to the glfw api.
warn if setstate or forceupdate are called on an unmounted component
text apis: interface name change passed code style checking (make lint) all changes have test coverage: unit tests are added for small changes to verify correctness (e.g.
updated easeljs definitions to v0.7 and tweenjs definitions to v0.5
#6341: check systemd service status with show subcommand
random ops
[flutter_tools] removing mocking for dart target integration testing
[cs] stop passing functionrefkind in a couple of places
bug fix for _.memoize when key is derived from prototype
currently, the tests for both dropdownbutton and dropdownbuttonformfield are in the same file.
doc: fixes for doc/source/user/basics.io.genfromtxt.rst.
add or edit tests to reflect the change.
fixes to the vector env
this pr adds a new clientconfig and backoff retry for azure cloud provider: add a new clientconfig so that new azure clients could import it without unnecessary dependencies add backoff retry and implements autorest.senddecorator interface.
i understand that: i'm submitting this pr for reference only.
minor fixes related to my changes to the keyboard handling: capslock had the wrong vkey value (xbmc was seeing it as space) rogue oring with ckey::modifier_ralt meant the right alt wouldn't work as a modifier added a keyboard.xml entry to make backslash work on a french keyboard tidy up keyboard.xml to group the multimedia keys together and add mappings for all multimedia keys, some with null values to act as placeholders.
add info for dual aclk into readme
make struct of struct work with .ts and fix ts*
frontenders at airbnb at have been discussing this change for a bit, and we've come to favor one-var-per-variable over one-var-only declarations.
test if we can pull terminalprocess into the renderer process
there's a bug in the way we determine the selected package in plugins page.
disable control flow analysis in excessively large statement blocks
add python tmdb tv show scraper
implements wait and retry logic on ray.connect() this takes care of the case where the server is not yet ready, but does not yet cover the case where the server drops mid-connection (still to come).
add dilate option for convolution / deconvolution, used for semantic segmentation.
add float16 gpu example
enabled rtti for windows as well.
add or edit tests to reflect the change.
option to customize securitycontext
there were still some mentions of ~[t] and ~t, mostly in comments and debugging statements.
looks something like this:
: string; const obj: someinterface = getsomeinterface(); const value = _.get(obj, 'optional', 'defaultvalue'); // ^ value should be of type string since we provided a default value, but it is string | undefined this pr updates lodash.get to exclude undefined when a default value is provided.
update api for 2.4 release
dynamic omp for dot
adding option to raise hystrixruntimeexception instead of cause
support es6.
update ackee-tracker to v5
this is a rebase of #6494, with one line (which @sdaftuar commented he forgot to remove) deleted.
1.1-intro-to-programming-languages 1.2-github-basics 1.3-accessibility 2.1-data-types 2.2-functions-methods 2.3-making-decisions 2.4-arrays-loops
this pr removes the outdated herramientas de desarrollo section from contributing_es.md along with the following images, which aren't referenced anywhere anymore: docs/docs/images/open-remote-dev-tools.png docs/docs/images/remote-dev-settings.png docs/docs/images/running-redux-devtools.png closes: #7697
this is just @gazpachoking's pr #1729 in a mergable state and with the pr feedback that @lukasa left on it.
fixed merge problems, cleaned up ios camera example
fix serbian grammar and grammatical case logic
enh: mark coef_ as immutable for linear svm models trained in the dual
description:  this config seems let coveralls.io reports stable results: above screenshot has 3 build results with exactly same source code, the top and bottom has only one job in each build, but the middle one has multiple jobs, only one job reports code coverage.
add common interface for pyperf sample handling
tst gh26807 split out test_api
fixed a problem with the timer class where a timer that is _codepaused after a game pause would not be considered to be _codepaused.
addresses d9a282f#commitcomment-13296796.
if requested, automatically download annotations and image files for the coco dataset, including the "minival" and "valminusminival" annotations provided by ross girshick on dropbox.
document handling normal map handedness
i did correct some translation, and also i added link to let people visualize the code and test other attributes on it.
refs #15791. this pr fixes some failing protocol module tests when networkservice is enabled.
fix and move menu_cancelobject
removing warnings on examples/neighbors/plot_nca_illustration.py
this isn't fully working, though not stopping the os from booting (the aps are in protected mode, but halted for now) for some reason we have what might be a paging issue.
[sharedb] less strict op and source typing
fixes #7189  (regression introduced with #7102) additionally ensured old function arn format, when no provisioned concurrency setup is involved, this should help partially solve issues for users of plugins which relied on old template format -> davidgf/serverless-plugin-canary-deployments#71
this pr reverses the dependency between the services and scheduler layer.
openssl: document update process and delete unused files
fix getcanonicalpath on windows
this pr is intended to allow creation or modification of a metric alert rule - including it's triggers, and their actions - all in one call.
second attempt of #17132, which was reverted due to failure bundling for mac & windows runs the "yarn install" from the root of the packages to de-duplicate node requires via hoisting.
update to debian stretch for docker containers
fix breaking change introduced by gen_l10n output-dir option
replace bare excepts by explicit excepts in pandas/io/
reopening pr with cleaned up style
in this pr i extend the operator pad for 16x8 quantization mode.
fix moving sum segfault
add the missing store export to backbone-relational
we want to be able to emit witness_method calls on concrete types and class-constrained archetypes.
this does a fair amount of fun to create a common keymap that works across a variety of keyboards!
no longer preventing default behaviour due to relation of 'touchstart' and 'click' events alter implementation of stopping bubbling add demo of event bubbling
allow keyword aggregation in dataframe.agg and series.agg
this change brings basic support for timeouts to the futex system call when invoked with the futex_wait option.
follow the advice from the readme.
[options] add --fragment-retries option
make sure to handle paths with dot in name for spr
fixes #19677, which is a regression in how onehotencoder and ordinalencoder handle categories having dtype='s'.
it is a concise course on react native.
adds a banner to the top of the page when a user is not on the latest release documentation.
align tf ner example over the pt one
for accoutns that have no passwords but only a recovery key homed might
add argument error handling in optimization plugins
the cloudbees build/release config has been upgraded to assuming nebula rxjava plugin 2.x which assumes gradle 2. this is an attempt to upgrade this project.
this change will introduce an /admin/loggers endpoint to the connect worker that can be used to get/modify the log levels of any named logger in the connect worker.
information about lazy deserialization of nominal type and extension
rename editor:toggle-soft-wrapped back to editor:toggle-soft-wrap
adding a robots.txt to the guide
move default press event delays to constants
move type predicates back onto signatures, remove narrowing for property/get type guards.
add monitor selection and basic properties
refactor groupby tests for using strings to reference index levels
deprecations?
mergetree for s3 integration tests and fixes.
reduce the amount of unnecessary function calls and object allocations, in messagehandler, when using streams
what kind of change does this pr introduce?
/ #48187
journald: make audit socket optional
this pr updates links to external pages.
chartjs - missing tooltip axis option
fix: remove truncating of attachment.text
adding my dz60 keymap, and updating my boardwalk keymap my code follows the code style of this project: c, python i have read the pr checklist document and have made the appropriate changes.
i'm working on font/language support detection and this pr is actually a first bunch of (mostly) obvious fixes.
add tests for system reference strings
[ramda] fix path() return type
fix test sharding
update caddy version
listen to click event for checkbox and radio.
adding feathers to the mix.
added possibility to use an array for the property country in geocodercomponentrestrictions
required for customevent.
range check for h3kring
add test for byte formatting with fmt_compile
[project.pbxproj] removed entries for non-existent file
add or edit tests to reflect the change.
fixed an index out of bounds error that occurs when you pass 256 into iskeyjustpressed() on lwjgl3 backend
description: added error handling.
setting the 2nd tool's z-offset to a positive value, results in the tool not being able to reach bed level.
merge feature/searchable-snapshots branch into master (#54803)
when constructing union and intersection types, we eagerly remove duplicate function types that originate in function or method declarations.
migrate .flake8 config to pyproject.toml through pflake8
added unit test to check that tooltips is not showed when leave event is triggered before show delay has expired and the hide delay is set to 0
as in the description, it's now fixed.
fixes #70168 introduced in #69604 which was backported to 2.9.10. this would need to be backported to 2.9 and 2.10. this is another take to get these fixes in after they were reverted in #70272 due to issues with testing the fixes in our ci.
added passreqtocallback to passport authenticationoptions
added showcase to readme - componofy
add tooltips to st.checkbox, st.radio, and st.number_input.
emphasis line style options do not work on sankey charts
added trace steps to show addition of nodes and how tree is traversed while adding a new node.
closes: #7683 if multiple --config options are provided, crash with serverlesserror example node .\bin\serverless.js --config hello --config world error serverless error --------------------------------------- got 2 config paths: [hello, world].expected single value get support -------------------------------------------- docs:          docs.serverless.com bugs:          github.com/serverless/serverless/issues issues:        forum.serverless.com
adding myself to authors.
mark 'name' parameter as required.
the average response time of grpc is not right
related to #14813 deprecates none in featureunion.
there are several variations of alerts in the app: alertmessage .alert (bootstrap) styledwarning this pr aims to unify these as one alert component, as well as introduce a variation of alert that plays well with panels.
issue: #11371 render iframes with &refid=$refid.
the volcano 660 has a solid bottom so if a user forgets to put on a reset key in their keymap, it's back to dismantling 3. rgblight is enabled.....even though there is no rgb light on this board 4. backlight is enabled.....even though there is no backlight on this board 5. enabled command_enable for extra debugging prowess 6. audio_enable was included twice, once disabling and once enabling.
allow reading training data from jsonl
commit ce_aaa_server module new module pull request ce_aaa_server.py ansible version ansible 2.3.0 config file = /etc/ansible/ansible.cfg configured module search path = ['/home/ansible-2.1.1.0/lib/ansible/modules/core/network/cloudengine', '/home/ansible-2.1.1.0/lib/ansible/module_utils', '/home/ansible-2.1.1.0/lib/ansible/modules', '/home/ansible-2.1.1.0', '/home/ansible-2.1.1.0/lib/ansible/utils/'] task [configure accounting scheme] ********************************************* task path: /usr1/code/openness/code/current/kvm/intg/test/testcases/test-ce_aaa_server.yml:58 using module file /usr/local/lib/python2.7/site-packages/ansible-2.3.0-py2.7.egg/ansible/modules/core/network/cloudengine/ce_aaa_server.py <ce_6850> establish local connection for user: root <ce_6850> exec /bin/sh -c '( umask 77 && mkdir -p " echo $home/.ansible/tmp/ansible-tmp-1487042119.19-256857505644160 " && echo ansible-tmp-1487042119.19-256857505644160=" echo $home/.ansible/tmp/ansible-tmp-1487042119.19-256857505644160 " ) && sleep 0' <ce_6850> put /tmp/tmpcgsfja to /root/.ansible/tmp/ansible-tmp-1487042119.19-256857505644160/ce_aaa_server.py <ce_6850> exec /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1487042119.19-256857505644160/ /root/.ansible/tmp/ansible-tmp-1487042119.19-256857505644160/ce_aaa_server.py && sleep 0' <ce_6850> exec /bin/sh -c '/usr/bin/python /root/.ansible/tmp/ansible-tmp-1487042119.19-256857505644160/ce_aaa_server.py; rm -rf "/root/.ansible/tmp/ansible-tmp-1487042119.19-256857505644160/" > /dev/null 2>&1 && sleep 0' changed: [ce_6850] => { "changed": true, "end_state": { "accounting scheme": [ [ "none", "default" ], [ "radius", "test1" ] ], "local user group": [ "manage-ug", "system-ug", "monitor-ug", "visit-ug", "wdz_group" ], "radius enable": [ "true" ], "radius template": [ "group1", "wdz", "w", "wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww", "test2" ] }, "existing": { "accounting scheme": [ [ "none", "default" ] ], "local user group": [ "manage-ug", "system-ug", "monitor-ug", "visit-ug" ], "radius enable": [ "true" ], "radius template": [ "group1", "wdz", "w", "wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww" ] }, "invocation": { "module_args": { "accounting_mode": "radius", "acct_scheme_name": "test1", "auth_pass": null, "authen_scheme_name": null, "author_scheme_name": null, "authorize": false, "domain_name": null, "first_authen_mode": null, "first_author_mode": null, "host": "ce_6850", "hwtacas_template": null, "local_user_group": "wdz_group", "password": "value_specified_in_no_log_parameter", "port": 12345, "provider": null, "radius_server_group": "test2", "ssh_keyfile": null, "state": "present", "timeout": 10, "transport": null, "use_ssl": false, "username": "rootdc", "validate_certs": true }, "module_name": "ce_aaa_server" }, "proposed": { "accounting_mode": "radius", "acct_scheme_name": "test1", "local_user_group": "wdz_group", "radius_server_group": "test2", "state": "present" }, "updates": [ [ "accounting-scheme test1", "accounting-mode radius" ], [ "radius server group test2" ], [ "user-group wdz_group" ] ] }
add or edit tests to reflect the change.
migrate to androidx
previously this caused a crash in parsing.
adjust release doc and script based on last release vote.
add helper functions for serialization of simple data types
these two patches enable "--relax" and "-fwhole-program" to the linker and compiler of the marlin firmware.
preparations for #7599 that are useful on their own.
correcting the hyperlink to redirect to correct url.
move esp32 env in extra file platformio_tasmota_env32.ini the pull request is done against the latest dev branch only one feature/fix was added per pr.
allow custom authentication and permission classes for docs view
checklist closing issues: #issue i wrote some lines in the radare2book this patch is supposed to add the functionality given by the unix command find .
fix(build): black failing on master
resolving conflicts from #130 @keon changed modules names math ->  maths string -> strings queue -> queues
what did you implement: closes #4440. adds ability to specify regional endpoints for api gateway.
r-api for json dump format that was contributed in #1726 bugfix for #1845 bugfix for #1628 json dump example: data(agaricus.train, package='xgboost') bst <- xgboost(data = agaricus.train$data, label = agaricus.train$label, max_depth = 2, eta = 1, nthread = 2, nrounds = 2, objective = "binary:logistic") jdump <- xgb.dump(bst, with_stats = true, dump_format='json') cat(jdump) produces: [ { "nodeid": 0, "depth": 0, "split": 28, "split_condition": -9.53674e-007, "yes": 1, "no": 2, "missing": 1, "gain": 4000.53, "cover": 1628.25, "children": [ { "nodeid": 1, "depth": 1, "split": 55, "split_condition": -9.53674e-007, "yes": 3, "no": 4, "missing": 3, "gain": 1158.21, "cover": 924.5, "children": [ { "nodeid": 3, "leaf": 1.71218, "cover": 812 }, { "nodeid": 4, "leaf": -1.70044, "cover": 112.5 } ]}, { "nodeid": 2, "depth": 1, "split": 108, "split_condition": -9.53674e-007, "yes": 5, "no": 6, "missing": 5, "gain": 198.174, "cover": 703.75, "children": [ { "nodeid": 5, "leaf": -1.94071, "cover": 690.5 }, { "nodeid": 6, "leaf": 1.85965, "cover": 13.25 } ]} ]}, { "nodeid": 0, "depth": 0, "split": 59, "split_condition": -9.53674e-007, "yes": 1, "no": 2, "missing": 1, "gain": 832.545, "cover": 788.852, "children": [ { "nodeid": 1, "depth": 1, "split": 28, "split_condition": -9.53674e-007, "yes": 3, "no": 4, "missing": 3, "gain": 569.725, "cover": 768.39, "children": [ { "nodeid": 3, "leaf": 0.784718, "cover": 458.937 }, { "nodeid": 4, "leaf": -0.96853, "cover": 309.453 } ]}, { "nodeid": 2, "leaf": -6.23624, "cover": 20.4624 } ]} ] and it could be further fed, e.g., into jsonlite: library(jsonlite) jdump %>% fromjson(simplifydataframe = false) %>% tojson(auto_unbox = true) %>% prettify
checks an items off #40675 the current mechanics are unstructured and the tests is not future proof (if new attributes are added tests will not pick these up and fail).
workaround #26279 at the expense of binary compatibility
summary of changes: made _iterate_slices abstract in base class, moved pre-existing definition from base -> series where it was actually being called (dataframe already overrides) made _wrap_transformed_output abstract in base class, as both series and dataframe override this redefined _wrap_applied_output; this was abstract in base class before but its definition was not in sync with how the subclasses actually defined renamed _wrap_output to _wrap_series_output as it is only valid for seriesgroupby renamed _wrap_generic_output to _wrap_frame_output as it is only valid for dataframegroupby renamed _aggregate_generic to _aggregate_frame as it is only valid for dataframegroupby more to come in separate prs
bump app version
[ide] honor #sourcelocation in comment-to-xml conversion
with these modifications and the partially masked test, the r package xgboost 0.6 has been submitted to cran.
swift 5 migration.
this change fixes a race condition in shard group failure callbacks and ensures that we set the correct flag on initial stored responses.
in zipimport.c: add a check whether zlib.decompress() returned a bytes object.
there are some reports of zonewindowdrawing instances failing to initialize.
use whitespace insensitive compare for indentical override detection
others are not activated when the receivers are open.
separate feature flag for unsizing casts in const fn
the fieldmapper infrastructure currently has a bunch of shared parameters, many of which are only applicable to a subset of the 41 mapper implementations we ship with.
add or edit tests to reflect the change.
fixes conditional navigation in grouplist
this will only happen if the function _adjustpan is called over the moveend event, so i add animate: true if the event object is set.
dropdown in debug toolbar is not vertically centered
mysql to 1.6.4 version
adds rgb functionality to keymap.
[pixmap packer io] added index based on file name, so can be used for animations
that seems to have been an old hack.
win: implement double-clicked event.
it has the advantage over #3310 int that the datastructure allows o(1) in determining which tasks to dispatch (although it currently is more expensive than that, but cheaper than in the master, and also cheaper than in the other pr; the strategy there would break down if the ready queue contains zero-resource tasks).
this breaks a potential deadlock between worker requests for objects (through ray.get or ray.wait) and arguments of queued tasks, when the amount of memory is limited.
migrate homekit_controller to config entries.
tests added / passed passes black pandas passes git diff upstream/master -u -- "*.py" | flake8 --diff whatsnew entry in testing.pyx we keep a list of numeric dtypes and use that for type checking.
adds integration setup
sentraq number pad documentation cleanup.
i guess it shows up on bundle size tracking somewhere?
this uses the new fuzzaldrin library for core scoring and fuzzy filtering so it can be used in packages freely.
short description (up to few sentences): fix segmentation fault when the table has skip indices and vertical merge happens.
related issue #4052 i have read contributing.md.
add qmk configurator support
fix coverity defects
addresses tr-356 feature: updated the design of the modal shown when there is a new version of cypress available.
what did you implement: closes #2981 how did you implement it: catch the error, then check for specific error message "no updates to be performed".
add a userguide to cover the uses of hub before creating new repositories
add src parameters:  fix invalid argument definitions:  include tests for your changes
changed three buttons styles to tertiary
this pr makes the tf longformer-like models compliant with amp.
partially fixes #14312 fixes the following items: fastica, [whitening_] the matrix projecting data onto the first principal components.
drop sysproxy
test for all primitive types from array.
make your pr against the master branch.
added chart for churn rates of connections, channels, and queues
set settings.enablebytecodecacheing to true in the reactinit.cpp file to enable this feature.
since the are already in tasmota arduino core 2.7.4.1 the pull request is done against the latest dev branch only one feature/fix was added per pr.
added test for change for issue #1732.
libraries can reference that data in c code using a type, sexp, provided by rinternals.h.
increase memory limit
original pull-request #24898 this pull-request is a first step of an automated backporting.
created option for right angle arrows
new features apis cherry pick 4 amp related pr into 2.0 branch: 29756 29621 29597 29562
this is just a small change to reduce the time some of the tests take.
support for core.ignorecase
i suggest removing "fmt/" prefix in *.h, *.cc files inside fmt directory.
remove contrived javascript.eval return types
update libbpf to the latest upstream commit.
fix ci workflow typo
merge #33022
* improve split and concat op:
i hereby agree to the terms of the cla available at:  fix duplicates after distinct which were possible because of incorrect optimization.
fix: call trim_function_name with platform
fix possible panic when getting primary ipconfig
test: add coverage for auto confirmation
add or edit tests to reflect the change.
fix removechild() crash when removing an empty portal
deps: upgrade yara from 3.4.0 to 3.5.0
ak: add buffered<t> which wraps a stream, adding input buffering.
this is a public helper method in an api that plugin authors are encouraged to use, so we need to deprecate the method name in 6.x and only remove it in master.
remove extra dot in the file name of test db.
add some more unit tests to specify the arguments each lifecycle method expects to be passed.
jquery is throwing when it encounters "[data-parent=anything.with.a.dot]".
with that in mind, i used ensureplusone to ensure that all values are passed to builtins at plus 1. rdar://34222540
fix callback and promise resolve
adds tryfrom<{int}> for nonzero{int}.
added "mouse move" support.
adding vue-quick-menu to ui components
change the node ssl server credentials api so that a server can have multiple key/cert pairs.
"eslint": "^6.8.0", "git-rev-sync": "^2.0.0", "rollup": "^0.59.4", "rollup-plugin-git-version": "^0.3.1", "ssri": "^8.0.0", "uglify-js": "^3.9.2" keep rollup < 0.60.0 for compatibility with ie 8 (see #6647)
using dict.fromkeys all entities where observed for each observation since the empty list was added by reference.
this means that native build failures will no longer be completely invisible in non-verbose mode.
hi @patrickvonplaten, adding 3 documented notebooks to fine tune transformers to downstream nlp tasks with pytorch: multi-class classification: using distilbert multi-label classification: using bert summarization: using t5 - model tracking with wandb these notebooks are pulled from the git repo:
there is some overlap between info (with --last/--first/--prefix) and list which is more obvious in the json output.
as reported in #940 this has become an issue when trying to use the shared library version of libh2o (or libh2o-evloop).
feat: better bash scripting
add anonymizeip
set defaults for java heap and perms on both i386 and x64_64 architectures.
use nacosservicemanager  to manage the life cycle of namingservice  and namingmaintainservice when the related configuration is dynamically changed through the configuration center, realize the reconstruction of namingservice  and namingmaintainservice
added scipy intersphinx inventory to make references clickable (for example in "see also" sections in convolve or polyfit).
in the dgus_lcd_ui_reloaded code void dgusscreenhandler::setstatusmessage(fstr_p const fmsg, const millis_t duration) but in the function it attempt to use uses the variable msg when it was defined as fmsg updated to use fmsg dgus_lcd_ui_reloaded and all its requirements compiles as expected my test config configuration.zip #23089
fullcalendar refactoring
enables the annotationusestyle, avoidnoargumentsuperconstructorcall, and noenumtrailingcomma checkstyle checks and fixes all violations.
reworks challenge to use argument in function call.
bugfix yes if relevant, link to documentation update: summary fixes #3484 no other information
today, the label encoder in onnx only supports integer-to-string and it's inverse transform.
this pr doesn't actually add tpu optimization.
updated with info,header and footer
fix merge conflict on master-next due to afc8762.
refactor: changed phrasing in instructions in curriculum\challenges\english\01-responsive-web-design\applied-visual-design\use-the-s-tag-to-strikethrough-text.md to make it slightly easier to read and less verbose
fixed ripple color for custom switch
achieve the proposal in #421 . dsl ref: w3c spec css device adaptation adding item in config script: <script type="config"> { "viewport": { "width": "device-width", ... }, ... } </script> maybe we will use <meta> tag as dsl in future.
[rating] allow different icons
german translations missing or wrong
fix travis sandstorm build
@goodmanship i'm creating this draft pr from your branch so we can discuss the code changes.
route section: fix to add multiple properties first init the node then add to list.
which issue this pr fixes (optional, in fixes #<issue number>(, fixes #<issue_number>, ...) format, will close that issue when pr gets merged): fixes #
this relates to #24576, where users were trying to use the upsert method while passing an upsertoptions argument without a returning value.
fix #27179
fix(chromecast-caf-receiver): fix eventhandler for castcontextreceiver
bring activesupport changelog up-to-date/consistent with master.
here is an implementation for the get api for system feature upgrades.
while looking into #497 i realized that the throttle decorator does not work on a per-instance basis but on a per-class basis.
what this pr does / why we need it: reverts #4377 to fix the same issue which issue this pr fixes: fixes #4704 special notes for your reviewer: attempted to align with other charts, but behaviour is inconsistent between charts.
fix signedness bug in reverse input mode cycling
fix bug with worker logs/errors not displaying in the dashboard
going forward, fixed/constrained images will take width and height as parameters, rather than the previous option of maxwidth/maxheight for fluid and constrained images.
the stdlib has a panic_immediate_abort feature that turns panics into immediate aborts, without any formatting/display logic.
chore: add missing poweredbyheader field to nextconfig type
currently, deform_conv only works for cuda:0 from ops.dcn.deform_conv import deformconv, deform_conv ## works normally device = "cuda:0" out = deform_conv(x, offset, weight, 1, [1, 1], 1, 2, 2) print(out.mean(), out.var()) # tensor(0.1310, device='cuda:0'), tensor(0.1312, device='cuda:0') ## fails to work device = "cuda:1" out = deform_conv(x, offset, weight, 1, [1, 1], 1, 2, 2) print(out.mean(), out.var()) # tensor(0., device='cuda:1'), tensor(0., device='cuda:1') the patch aims to fix the issue.
count h2 sent and received bytes
revert "merge pull request #20429 from microsoft/unchai"
this is a continuation of #7479 & #7728, progress towards converging ak::inlinelinkedlist usages with ak::intrusivelist.
a fix for onednn matmul kernel.
to support multiple uris for a job, we need to make the api able to accept multiple uris.
implements a simple env dynamics learner to be used inside different mbrl algos.
make the 'catchup' call implicit to source location updates.
update rn notes addon description
see for instance #896 -- it's a common problem to need mocked nodes.
resubscribe worker/object table info when gcs service restart
cherry-pick of pr against master: #5440 initial pr description: two changes, close relatives.
warn when using the wrong renderer's act around another renderer's updates
refs #15791. refs #19602. this pr implements the part that passes information to listener and reads the responses.
add team selector to metric alerts with proper permissions
chore: add some fix
liba52 and libdts haven't been used by default for some time on any platform.
this merges the logic for nullbooleanfield, which originally started off as a unique field, with the booleanfield.
update backward appedding to support double grad.
[runtime] warn about dynamically querying conditional conformances.
when we are maximized or fullscreened, check for the presence of the taskbar in auto-hide mode.
aws-sdk: added support for apiversion/apiversions config options.
electron's menuitem class has two different signatures for its click-related functions.
add fields api to scripted metric aggs and aggregation scripts
from auto-1016, we have downstream consumers of our ci systems who may not want to push to dockerhub.
add dead_letter_arn option for lambda.py
run ast comparison tests on travis
parallelize tests again?
bug: indexing with utc offset string not longer ignored
fix type annotations for pandas.core.indexes.datetimes
add type hints for controller, backend_worker
hi there!
maint reduce travis build load
git has updated xdiff to produce conflict markers that match the eol style in the conflicting files.
calls to threadpool.markthreadexecution() and threadpool.markthreadcompletion() got removed in the 1.3 -> 1.4 rewrite.
<rdar://problem/40115738> [exclusivity] enforce keypath access as an error, not a warning in 4.2.
revert "use xcode instruments to list devices (#10801)"
add emojis
pin http proxy
move node manifests to public dir
addon-docs: restyle doc blocks with new documentformatting
context and discussion:  tldr: a few teams have the convention to put hooks under a namespace and the current implementation doesn't catch hooks that are written this way.
cover the integer values when extracting field values from _source
description: hi there, related to pr #11538, here you find a few more fixes and enhancements.
we no longer have a separate powerpc64 and powerpc64le target_arch, and instead use target_endian to select between the two.
fix header for nullable prewhere column.
add bool to int coerce
this pr suggests changing the loglevel info to debug, because xcom returned value can be treated debug purpose read the pull request guidelines for more information.
migrated the following demos to hooks/typescript: components/links/buttonlink.tsx components/links/links.tsx components/transitions/simplecollapse.tsx components/transitions/simplefade.tsx components/transitions/simplegrow.tsx components/transitions/simpleslide.tsx components/transitions/simplezoom.tsx components/typography/typographytheme.tsx customization/components/classesnesting.tsx customization/components/classesshorthand.tsx customization/components/classesstate.tsx
so i've modified the issue templates to give an example each.
i had to create a new project because spring-all already had a lot of configuration and avoiding conflicts was going to take too much time.
fixed possible segmentation fault
scrolling in a notebook diff editor is sluggish
addresses #20308 this pr ensures polynomialfeatures is compatible with numpydoc: remove polynomialfeatures from docstring_ignore_list.
when an application emits a link: rel=preload header, the h2 implementation refers to a push memo to see if it has already pushed the specified resource over the same connection.
fix ordinalencoder fit with unseen category
the dynamic keymap (didn't know at the time) broke the keymap on my zeal boards and with the arrival of the m60-a i finally sat down to figure out why.
while reviewing #17062 the line height of the code blocks seemed a little small.
add gevent test suite run under bazel.
fix: error message
change return type of valueof to bigi
the proposed text is a bit more concise than the existing text, without losing any precision in what it communicates.
add tokenized event to tokenized buffer
this removes remained duplicated runs of ci for prs from the original repo and now is in consistency with appveyor and github actions configs.
add or edit tests to reflect the change.
add proper debian build support
[codecompletion] improve context type analysis for dictionary literal
chore: upgrade to webpack-bundle-analyzer@3
this moves set_locale and a couple of other locale-related functions out of tm.
upgrade etcd to v3
#261 fix for invalid characters in dimensions generated by apps.plugin #268 netdataerrorcallback() enhancements
adds a check to the prepare-stable script to prevent experimental builds from being published using stable semver versions.
the next changes were made: the description of short script form was added.
migrate to log based construction
bumping pythonegardia package requirement up to .18
add full support of sum (multiple axes + keepdims)
cleanup 2/3 of style/test_bar.py.
this change shaved 175 kb off of our minified engine javascript.
nested workflow with catch exceptions failed
remove performance tests of type once.
support for stubbing datetime.now with travel_to was added in #18758. it was later backported to 4-2-stable as part of d7ac341, but the tests and changelog entry were not included.
basesgmllinkextractor: added unit test of a link with an inner tag
this pr adds features so that namespaces work with the new session builder api.
work on remove logging from elasticsearch-nio
i haven't removed ak::out yet, because i am expecting merge conflicts.
fix null styling in gridcell
fix limit with ties
implement multitouch on x11
working floating cursor
refactore the sql calling functions into the queryrunner class.
issue #2087: adding new eventdispatcher test.
this refactors incident details components to use typescript and adds additional + more accurate typings.
converts sharp usage based on file paths to file streams, e.g.
add eslint-plugin-storybook
this fixes a bug where styled components are overriding common container styles for stackedbarchart it also fixes a bug where colors were not working on projectfilterschart
add link to associated slides to intro to theano notebook.
this fixes #149 and #151
use attributes to set force_mirroring
revert "win_setup: add product id and product key in facts (#34097)"
i added title case to the article headings on each of the pages for parts 0-5 (though not all parts needed edits).
fixes #3749 component name nfacct plugin
mod civic hatch to work for now
created problem06 in projecteuler
add parsing searchprofileshardresults
tc plugin now cleanups properly; added tc packets and dropped packets charts
apply the dim curve to the rgb output
remove unique values from settings/tags/.
fixed  new groups incorrectly always adding with a z index of 0
less than ideal script to grab cheatsheets from different repos
added implementation to remove script and image tag
keypaths: support captured arguments in computed components.
4368 subjective to disallow account to access extended cpu/net limits
i simply replaced all instances of "magisk manager" with "magisk app"
update the ergodox / atreus 42 key layouts with cloud 9 ide shortcuts
updated asynchttptestcase teardown to release app references
fix ice in overloaded call with incorrect arity
resolve #4918, fix #5235. the important bits that i gathered from the discussion were: drf should internally encode/decode only strict json, since other modules (eg, postgres's jsonfield) may not be compatible with the extended float values (infinity, nan).
constrain only one window can be opened at a time
this change makes use of the generated protocols for fetchrequest and fetchresponse.
if users feed single persistable variable to pe, this variable will be copied n(the number of place) copies, and feed those variable to different place separately.
add or edit tests to reflect the change.
we were allowing the pmrem cubemap size to vary based on the input images, but we had hard coded 256 as the size within the glsl.
the current license file is a source header.
add lzma and zlib support to cmake build system
when creating react namespace identifier, set its parent to jsx opening element in the parse tree
though this might seem in opposition to @tenderlove's #35404  it's made with the same goal of improving how we construct templates and keeping them immutable.
addition to udpcontext needed for leamdns2
this pull request switches the guids for default profiles from being randomly generated to being version 5 uuids.
update text to textcontent for 1.0.0-rc5
fix renamed parameter typo (content_type)
added missing properties 'installationid' and 'getwebviewuseragentasync()' to 'constants' declaration
use public env for the project id
use npx and yarn create to run create-next-app for each example in examples/.
raise eventemitter limit, suppress warnings in prod
xrmpageenumattribute - added getvalue and setvalue
added logic to make sure key remaps don't occur on edit keyboard window
i hereby agree to the terms of the cla available at:
added a new site:  fixed few typos and updated few comments to follow pep-8 standards note: few tests failing before the following commits
fix continue in struct for and add a test
your checklist for this pull request i've read the guidelines for contributing to this repository i made sure to follow the project's coding style i've added tests that prove my fix is effective or that my feature works (if possible) i've updated the documentation and the radare2 book with the relevant information (if needed) detailed description ... test plan ... closing issues ...
but the docs of latecontext::qpath_res promise no ice.
this fixes the nll migration mode (which is the default with edition=2018) to inspect all parents of a closure in addition to the closure itself when looking to see if ast-borrowck issues an error for the given code.
upgrade dependencies and make the jdk11 compiling passed.
add missing 'ended' method to the player declaration.
stop warning on fgets, complex version
this is related to #36652. in 7.0 we plan to deprecate a number of settings that make reference to the concept of a tcp transport.
minio: fixed .listbuckets() method signature
[flink-18552][tests] update migration tests of cepmigrationtest to cover migration till release-1.11
this pull request adds a missing closing parenthesis in the insert statement generated for postgresql in upsert mode.
fixed an error in backward computation of recurrent layers on return sequences.
what kind of change does this pr introduce?
changes to abi generation to auto populate abi from contract and clause files.
win32: make posix emulation retries configurable
doc: moving user guide to its own directory to help navigation
backports #18923, #18956, #18971 once we do the split for pr jobs, this will be needed for pr jobs to continue running against v1.20.x
move from code.google.com to google.golang.org for google-api-go-client
fix gradle task validation warnings
libjs: implement totemporalzoneddatetime and the required aos
set minimum boost version back to 1.67
add nnie imagewatch plugin and working snapshot
only prepend the language code if it's not there already - otherwise calling package with for instance name="nl_core_my_pipeline" would result in an "nl_nl_core_my_pipeline" package.
description: this pr implement alexa smart home api native into home-assistant for our cloud support.
#10861 , #10724 , and #11142 . explanation: tbdgen now includes all the exported symbols encountered while building the standard library and test suite.
add support for collectors updating their metadata (#9192)
@mjbvz this pr replaces pr #22918 to address issue #2187. i noticed that @tyriar had essentially created a "simple find widget" to use in the terminal which was much simpler to reuse than trying to refactor the full "find widget".
add description to npm package resource
this pr changes the relationship up so tab now manages its switchtotab command, and commandpalette just plops the command from tab into its list.
this allows stuff like: int mycompare(int i, int j) { j - i } ... list.sort(this::mycompare) it is like a manual transmission lambda.
fix the remaining /status subresources that return 405 on get and patch which issue(s) this pr fixes (optional, in fixes #<issue number>(, fixes #<issue_number>, ...) format, will close the issue(s) when pr gets merged): ref #63619 release note: apiservices/status and certificatesigningrequests/status now support get and patch
build flag for esp32 stage
backport winui2.6 button changes
alternative to #3897
this pr extracts some changes from #23308. the following changes are being made: add classes prop to the sliderunstyled updated buildapi to reflect the definition in the classes for the css section in the api page adds helper tests for the unstyled package removed unnecessary component valuelabelstyled and moved the styles to the valuelabelstyled "slot" component.
kernel/svc: handle error cases for svcarbitratelock() and svcarbitrateunlock()
[flink-19012][task] check state of asynccheckpointrunnable before throwing an exception
added version info and new mp3 player commands
added documentation for loading external backends
fixes #17324.
show dummy view under offscreen mode
kip-680: topologytestdriver should not require a properties argument.
update arrow to plasma with glog and update the building process
halfkey layouts complete for dvorak and qwerty
period.asfreq issue caused(?)
enh: add the ability to set rho by cross-val
[ccr] use indexsearcher to read operations from lucene index instead
opencl: fix wrong implementation of function getnumdevicewithemptyscore
this does not do it in the spec like way for bytecode but i'm not sure how things like that are supposed to be done in bytecode.
add coverage report for java
feat: migrate e2e tests to playwright
this cleans up the behavior tests because they were hastily added for the v2 release.
#2110 and #2116
check for matching number of components in tupletype::isimplicitlyconvertibleto instead of the typechecker.
one new test is added to check that the output of .apply is constant whether another method is called on the same grouper first.
i fixed several errors in the manual: bd67bb8 the output of unique_by(length) example was not sorted by length.
enabled tsc 1.1.0-1
the assertitem failure message pattern in testsubscriber does not match any of the regex patterns defined by intellij to show <click to see difference> link.
a quick solution for allowing those using the master branch to use iob or iob2 formats, and to accept whitespace delimitation on a line other than a pipe.
fix typing of datejs
add via support for bt66tech60
implement rrelu double backwards.
for gauges, we get to drop the pending_increment_ field which was not used, but to resolve this bug we need to add a mutex, so this saves a little memory.
chore(cypress): make the load dashboard test behavior driven
intial work on supporting ranalop.dst/src in all archs
fix spelling in premium themes footer
fix issues with gif frame disposal modes (fixes file download animation reported in #3291).
this is a major refactoring that moves the type checking code out of the ast classes into its own module (typechecker).
fix: list elasticsearch versions
this patch exposes some of the constants used by probe temperature calibration to the user and solves bugs described in #18227 . in the following code a bug was fixed where 2d point addition was performed to calculate probe_pos_xyz by casting measure_point to an xyz value first.
character problems with character encoding of iso-8859-1 sites
this pr ensures that we handle core.autocrlf=input and text=auto when checking out.
description: upgrades existing python-hpilo library to v4.3.
this pull requests changes and adds javadoc in some http-related classes it also does some minor internal refactoring to httpcodecutil to make it easier to get the gist of when looking through some methods for the first time sorry about all of these pull requests - i would do more in this package, but i've got enough of a headache to stop for the night and just mindlessly watch tv :)
tuned_examples/regression_tests removed; all tests will be run for both frameworks (use_pytorch will be removed from the yamls and replaced by command line overrides in bazel py_test).
fs: make ensuresavedata create the savedata folder when called for the first time.
remove builder from import clauses.
ui: emit the replay buffer saved event to the api
add missing keys for array elements
the branch in question was merged in #3472 . also updated the comment, which is no longer true.
warnings to encourage people to test reactos in vms until it becomes more stable.
change rescue_with -> rescue_from in action cable overview guide
add test for capitalized sscanf format specifiers.
update github.com/stretchr/testify/... rev to 7ea4a14
removing trusted-by section from home page and moving it to a new page.
most network params in dask module is constructed manually based on ips and ports.
api make __init__ params in cross_decomposition kwonly
base: add common indic number forms to font katica regular 10
ref(relay): clean up project config generation and add fast-path
add new free course, and sub-categories added a amazing course of codeigniter, a framework php because frameworks promote code productivity it's just free it's a course not a duplicate included author(s) if appropriate lists are in alphabetical order needed indications added (pdf, access notes, under construction)
prevents tsan races in iomgr shutdown code
throw an error for missing particle texture frame
add some metrics and log for service and client
serialize type alias when type alias symbol is not accessible
i updated the german translation to match the english original.
rename msc modules to mso
support mapping /packages/<package>/<path> requests to package:<package>/<path> uris in the web device file server
we manually focus the active pane when a commandline is dispatched.
request actor creation if no actor location found
fixing issue with win_iis_website parameter types
[jenkins-36923] give ownership of bcpkix dependency to bouncycastle-api plugin
when receiving a header name that is an uncompressed literal, the qpack decoder was using the address of the literal, rather than the literal itself, as the header field name.
changes randomnumbergenerator::result_type to be unsigned
to help clarify the logic, this pr proposes to create a separate class indexfieldcapabilities for the capabilities in one index.
add support for bm65rgb
follow the advice from the readme.
tested: tests/darttest.sh with dart 2.8.1
:bug: serialize 32-bit floating-point numbers as float 32 in messagepack (0xca) #2196
docs: update section header notation in style guide
set gold fields to empty list instead of keeping them as none
this pr is about changing the heading tag of related posts section from h4 to h2 for seo enhancement.
upgrade openssl nuget to 1.1.1-d.3
this is an alternative implementation to #13655. before this patch time travel feature depends on mocha's stub feature.
namely, add iris and userspace eeprom settings
article will be ready in max 24 hours from now.
/** * is_annotation_reference() - checks if the specified annotation is a reference.
please check my fiddle with internet explorer 11.
support time bucket transfer.
propagate all closure requirements to the caller
cli: test unknown option output
when using kubectl describe <resource> <name> , the events returned for the resource do not use the eventseries.count and eventseries.lastobservedtime this pr adds the logic to compute the age of the event using these fields fixes kubernetes/kubectl#1095 changed kubectl describe to compute age of an event using the count and lastobservedtime fields available in the event series
makes the controlled/uncontrolled + derived state pattern more obvious which results in one less create callback (wasteful popper re-creation) and flipplacement call.
fixes issue #17836 @scissorsneedfoodtoo , #19720
description: clarifies the drain time command line option is also used by drain listeners via lds.
widen the autocomplete menu for table names
diagnostic note when matching tuple enum with struct pattern
add tests for border_mode == same
description more updates of #20553 to make the car's indicators more in line with stock, especially on audi.
i have added the following new language in the process for starting a new translation section.
backporting a set of patches from 5.6 that improve allow better parsing of the video= strings from the kernel command line.
early stop callback function with the same logic as in xgboost: stopping after n steps without improvement.
added mikesigs to the contributors list
1836 readable validation messages in error.h define an enum validateerrorcode for a set of kvalidateerrorxxx error codes, one per validation failure type in en.h add getvalidateerror_en() to map error code to a human-readable error message with inserts in schema.h: when creating a validation error, use the error code as the primary indicator, in addition to the error keyword add getinvalidschemacode() to validator to return the error code oneof: split into two errors - 'no match' and 'multiple match' - with error code and message for each allof: create in accordance to  dependencies: make property dependency error look like schema dependency error (bug found - see issue #1805) additionalitems: correct error keyword from items to additionalitems refactor adderrorlocation() in schematest.cpp fix the expected test outputs to include error code in schemavalidator.cpp example, add code to walk the errors and output error messages with inserts 1835 multiple validation failures in schema.h: add validateflag enum and member flags_ to the validator (analogous to parserflag for the reader) provide a flag kvalidatecontinueonerrorflag provide getvalidateflags() and setvalidateflags() for access to flags_ member if kvalidatecontinueonerrorflag set, do not set the valid_ member and thus allow the validator to continue do not change macro rapidjson_invalid_keyword_return - it still always returns false (see note) change isvalid() to return false if kvalidatecontinueonerrorflag set and the error_ object is not empty change getinvalidschemakeyword() and getinvalidschemacode() similarly at various places ensure that internal variables are in a correct state, so that continuing after an error is safe allow sub-validators to inherit the setting of kvalidatecontinueonerrorflag force sub-validators for oneof, anyof, allof, not, dependencies to not inherit kvalidatecontinueonerrorflag add reseterror() to allow errors to be reset (useful for incremental parsing) in schematest.h: add tests to exercise the validator when kvalidatecontinueonerrorflag set add tests to specifically exercise that validator internal variables are correctly set after an error change validate and invalidate macros in bin folder add new unittestschema folder containing new schemas for tests notes: to allow continuing after an error, i considered changing macro rapidjson_invalid_keyword_return so that it did not return false if kvalidatecontinueonerrorflag set, but instead continued.
i hereby agree to the terms of the cla available at:  fix crash in generaterandom with nested types.
no need to process transactions from accept_transaction next as the transactions are signaled via transaction_ack and processed there.
this pull request fixes the windows 10 uwp build by adding the missing external/clipper files and removing some obsolete files from the solution..
make lightstepsink to send gprc requests to lightstep collectors.
we always run that pass when optimizing, but normally do not when not optimizing.
adding support for resource variables
undo renaming
fix change detection to support onpush
this is because dateformatter.parse() is costing o(n^2) time.
document arguments for webview methods
two new features for github oauth.
move spring sharding test into correct module
this is a cleanup of the wrappable class, so: there is no getobjecttemplatebuilder, all classes now use buildprototype; developers no longer need to cache the object template themselves; the creation of js object is now in wrappable's constructor, instead of lazily initialized in getwrapper;
this is a backport of #12257 and #12279 to swift-4.0-branch to more-accurately gather stats there (in particular: dodge a data-loss issue when writing stats files to deeply-nested directories).
hence, in dataset we have to store arrow tables as top-level ray objects.
const generics panic
added optional parameters for the crypto.pbkdf2* functions
hide internal fields from the rest request parser
don't nack empty updates.
this brings about two user facing features: support for newly shipping yubihsm 2.1 firmware support for talking to a yubihsm directly through usb instead of through the connector (use yubihsm-url = yhusb://) libyubihsm2 is open source so now we build and statically link to the library internal to the eosio project.
this pr adds the capability for async methods in serve actors as well as preliminary support for multiple methods.
[sourcekitd] fix range shifting "race" with a fast semantic update
these dockerfiles are built on the mxnet pip binaries instead of 'build from source' as in the existing dockerfiles.
implement http server for html5 export
please check if what you want to add to awesome-go list meets quality standards before sending pull request.
this is of course still wrong regarding #5662, but at least brings it in line with the other output formats (and adds a test) import {$679c7b63be557d242f596b1b4cbcc6a9$init} from "./a.js"; console.log("b", $679c7b63be557d242f596b1b4cbcc6a9$$interop$default); after: function $parcel$interopdefault(a) { return a && a.__esmodule ?
paginated and grid emotion changes
replaced deprecated rnn_cell.basiclstmcell with rnn_cell.lstmcell
i have created some custom keymaps for the iris and planck keyboard for my personal sets.
please review these commits for tizen support.
add a test demonstrating forced closure of a stream, and make it work
feature flag to register the new encrypted repository type
sil: make adjustfunction type of closures parameterized on whether we use guaranteed closures this is going to go away once we change the default to guaranteed closures.
solve dts==0 bug when demux mpegts if (dts == 0) {dts = pts} solve many aac packed in a large mpegts(2930bytes) demux mpegts and recover the dts.
i fixed some english errors and i added more details about video challenges.
pickling tests now loop over all possible protocols.
added constraint max_features at least one
add support to reload the page when ask to change the same url.
enh adds attributes back to check_is_fitted
convolution2d only has border_mode='full' or 'valid' and the image size changes upon convolution.
[office-js-preview] (excel) pulling latest type definitions from cdn
rewrite for..of in source code
libweb: add pc css unit
this change address two issues: #12372 view columns not visible with 'no schema binding' views on redshift connection #12396 dbeaver 21.0.4: not all columns showing in db navigation pane/generated sql - view it address a few aspects, first it will allow the column to display in the navigator and also allow the columns to show in 'generate sql' functions.
adding the ability to specify externaltrafficpolicy, and thus preserve client ip addresses
i added examples that make use of the args form ( i didn't know about this language feature so for me it was quite a search before i found it out.
'output' argument of decompress function is overloaded to support undefined, string, or decompressoptions
fix digesting templates with identical logical names when requesting a format other than the first default
cherry pick the following fixes to 0.65: i18n.allowrtl should default to true (#7840) better reporting of failures to load the bundle file (#8018) intermittent deadlock when reloading multiple times rapidly (#8026) remove javascriptmainmodulename and debughost (#8027) turbomodules might be kept alive by rnh when instance is shutdown (#8035) fix crash when adding a reactrootview while reloading a reacthost (#8042) microsoft reviewers: open in codeflow
(relay-classic) adds relayprops variables typing
introduce and use new apis to perform lookups of existing pre-specializations in a more light-weight way.
wip reset oom timer
add tests for new coresymbolication elements
del df[k] fails for a non-unique key
added initial strings.xml for occitan language
sil: serialize default arguments of inlinable local functions
remove the code that is not useful in the loop
add str->int dict in kvstore backend so that module can use the param name to perform update instead of its index @mli @piiswrong
undo  pr #1033
i hereby agree to the terms of the cla available at:  fix incorrect behavior when alter table ... drop part 'part_name' query removes all deduplication blocks for the whole partition.
backport of 1cdfe8d91215eefaa18c398069dd9c6879a9511d from master.
gl_state: get rid of mismatched sign conversions
i made a brief documentation for shaders.
corrected the code style to pep8.
work on improving telemetry setting description
these changes fix/improve: allow to specify expandrowprops.nonexpandable when table key is of type other than number (according to docs, there is no such restriction), better type control for expandrowprops.expanded which previously was of any[] type.
documenting the http basic auth request config
the c# interpreter requires the seconds parameter to be included, so if one has a raw duration of 13:45, one must append ':00' for the constructor to recognize the duration (input[type="time"] produces such raw durations).
this pr adds selectedtextstyle and unselectedtextstyle parameters to the bottomnavigationbar class.
[ember] @ember/component types refactored into their own package
add test for dropout with axes
upgrade actions/cache to the latest upgrade actions/setup-python disable cache for npm and pip since they don't seem to help much enable parallelization for cypress tests (need to configure record key) here is an example of a successful run when the record key is properly configured.
xgboost is a gradient boosting library.
add {loadnewmodules, modules} to angular.auto.iinjectorservice
an implementation of 3 variants of search function on trie.
update free-programming-books-th.md
find no longer needs to be defined on the model since the query catches it correctly.
this pr changes the colors of all the elements in the edit keyboard and edit shortcuts windows to default as per the os theme.
add comments to the generated header file
added time_series mapping params to unsigned_long
fixes #3726 ("replaced task in chain causes chain to skip to last link").
added a config.ru for rack/local dev
noticed some typos in the pt-br (brazilian), along with the facts that the slack badge and the last section (self-promotion) are missing.
fix:(curriculum): rename rdbms cert project
fix docstring for 'special_tokens_mask'
update openstack inventory script to keep basic functionality (#43432)
using a non-unique index (gh2786 for the warning and gh3230 for applymap)
multi-line comments in typescript aren't aligning properly.
it was separated from original cocos2dx.hpp/cpp.
add default network timeout values to the networking troubleshooting guide.
testing: executed several unit tests to check if log level is lowered to trace and logs are dropped.
restoring from a snapshot (which is a particular form of recovery) does not currently take recovery throttling into account (i.e.
cherry picked from (25f485f) backport for pr #54419 nios
add python wrapper for matmul_op
capture a weak reference to the instance in the websocket resource's callback lambda and bail if it's not available.
much simpler, pure-python packaging
this adds a link to training t5 in tensoflow 2 community notebook under the notebooks/readme.md community notebook section.
support base64 in v2 header and make entryoperationname and parentoperationname optional in contextcarrier or contextsnapshot
it was becoming quite annoying to have to open the shell each time i wanted to execute a file, so i did this.
on to the release details page.
verified that rat and checkstyle work with java 11 after these
follow the advice from the readme.
improve output of run-windows command
shard level request cache is improved to work correctly at all time.
add timeout to verify command
fix higher-order array functions (sigsegv for arraycompact/illegal_column for arraydifference/arraycumsumnonnegative) with consts detailed description / documentation draft: ci:
fixes #12546. pinging @westy92, @yuit, @vvakame, @bonnici, @codeanimal
add rfc about how to evaluate proposed scope additions to grammars.
migrate serialization tests to swift 4
bug: make dimension compatible with integer
our usage of strtok_r () was not totally correct (but almost)
cherry-pick of #37380 explanation: with se-0293, closure parameters can use the $ prefix to have a property wrapper type inferred from context.
this patch replaces gui::widget::find_descendant_by_name with core::object::find_descendant_of_type_named.
that can be done as and when needed.
here now common modules loads once using the webpack's commonschunkplugin.
doc: partial fix sa04 errors in docstrings #28792
cleanup podarray
revert "revert "don't heap allocate for active requests""
clojure api docs for the website please feel free to remove inapplicable items for your pr.
linelength may bigger than 512 and 'memcpy(line, contents + parsecount, linelength);' will cause stack buffer overflow.
i did more extensive testing on the export and realised that i could not rely on the format used by the original xml export as much as i had hoped since it did locale dependent formating in order to be more human readable.
begin integration of 3/22 nightly build
added handling of duplicate reversible blocks
change variant prop to handle defaultinput
commit message: fixes oss crash in router fuzz tests due to unimplemented features being tested filteraction filter_action in the route message is not implemented but was being tested, causing an assert to fail in routeentryimplbase::clusterentry risk level: low testing: passed regression test that originally failed on ossfuzz docs changes: n/a release notes: n/a fixes:
bug: np.ma.masked does not preserve identity through pickle
don't unsubscribe for infeasible tasks when spilling over.
others docs cherry-pick #pr36554 modify the english document, add warning reminder, only used in cuda11.3 and above
adds fallback routine for when a font name is missing instead of crashing due to uncaught exception thrown when font cannot be found.
grid browser session priority, first cut at working logic with unit tests.
fixed number of led rgb on rart4x4 and pin matrix on rart45 my code follows the code style of this project: c, python i have read the pr checklist document and have made the appropriate changes.
correct source checks in setemitzone
this change also removes any state from the data segment and onto the module state itself.
i translated readme.md and contributing.md into japanese.
enable dev/bots/ build_tests for desktop
add or edit tests to reflect the change.
series cov, count, round methods
activate metrics for arrow add rows.
hooks api
in some build modes (certain asyncify flags) we forgot to remove debug info at the very end, if we only needed it in the middle.
heron's formula for area of any (valid) triangle.
this pr completes any previously missing pytorch model counterparts to tfmodels in examples/models.
the current nightly test for ray wheel urls is flaky because sometimes mac wheels take a long time to build, see #19331. this pr retries the urls every 10 minutes until all the urls are available, for up to 120 minutes.
split out from #68241. this prints the correct effect diff for each line (the before-effect and the after-effect) and makes marginal improvements to the graphviz output for the new dataflow framework including using monospaced font and better line breaking.
fix typo in amazon linux 2 manual build instructions
description: follows the general trend of moving things into components with config flow's.
mostly this was to make sure we're using the final releases of those fbjs versions but looked at other things and cleaned up.
[docs] fix up porting guides for cve revert
implement basic source maps.
adding a script for testing the rocm community supported build
backport of #18618. xref #18601. sub-modules, such as np.linalg, must be explicitly imported in the main namespaces' stub file if one wants to access the sub-module via a getattr operation, i.e.
clean up story store and remove legacy data
restricted to only files just needed you can use assetsmanager within javascript.
bug: updating database ptree entires to rapdijson
add option to override format-time with custom implementation.
sql: change the default precision for current_timestamp
original pull-request #24898 this pull-request is a first step of an automated backporting.
cache queries and check if the schema has updated
chore: bump graphql major version
addresses #591
add failing spec for window size after restore
minor fixes
use createroot if detected
update dasel description
add gen_bkcl_id_op, test=notest
epe-672: add security group to net_plugin
changes description: adding description of the check table query.
improvement covered both auto bindings and manual bindings all changes follow generational gc style for #12405
this pull request removes the blog feature (and all the other stuff that goes along with it) from the website folder.
adds generatecontextapispec gradle task that generates whitelist api specs under modules/lang-painless/src/main/generated/whitelist-json.
i'm working on getting these into master (#22580 and #22579) but i'd really like to have them in tensorflow asap because they make the colab autocomplete very crashy.
bpo-33789: test_asyncio: fix resourcewarning (gh-7460) bpo-33789, test_asyncio: hide pendingdeprecationwarning (gh-7461) bpo-32676, test_asyncio: fix warning in test_error_in_call_soon() (gh-7462)
add array of streams option to run command.
upgrade to aiopylgtv 0.3.0 and corresponding simplification and cleanup of webostv state tracking
hmr for servermiddleware fails if sub-app is registered without prefix
fix: skip case sensitivity when checking azure nsg rules fix: ensure instanceshutdownbyproviderid return false for creating azure vms
[airflow-5398] - update emr example dags to context manager
use pflag ipnet instead of our own helpers
makestyles overload breakage with typescript 4.1
a couple of changes to crash handler behavior.
remove broken image in readme
this pr expands the meaning of include_global_state for snapshots to include system indices.
test and fix for #2420 ensures that the recursive type-checking of new graphql fields added by plugins does not infinitely recur when types contain circular references.
node: move addressinfo to net module; address() can return string
some assorted stuff i noticed while reviewing #6236.
nspawn, machined: fix comments and error messages
this pr rematch the error code with the error advice.
enable dockerfile from artifacts.elastic.co
fix flacky test
restore iuo bridging behavior on swift-5.0-branch.
ok, looks like no real changes are needed to support retina devices.
libweb: expose element.
morgan: enable strictnullchecks, add linting
i choose ~/.vue directory instead of file ~/vue.config.js, in a directory you can install loaders and modules there, so that you don't need to install them again in your project what's not ready no auto install, it could be buggy imo still need to add vue build counter.vue magic still need to add some custom css preprocessors for sfc, so that user only need to install relevant loader extract css allow to have project-specific config at project directory, use --config and --webpack to switch, for example --config config.js, and --webpack webpack.config.js tests what do you think?
fix partial name matches
fix broken link on 3-1 readme files
this pr addresses several issues on windows with paths containing special characters.
fix: libavcodec version check for av_codec_flag_global_header
this pr implements directives to tweak the response headers; model after headers directive of apache.
follow the advice from the readme.
cc/ @mit-mit @xster note: this version uses assets that are not in the gallery assets package.
the kernel itself checks whether or not the provided addresses are word aligned before continuing, so we should be doing the same.
fixed  left/right bracket logic when pressing lalt and lctl small changes here and there my code follows the code style of this project.
this pr fixes a bug when wav2vec2 is trained with batch_size=1 did you read the contributor guideline, was this discussed/approved via a github issue or the forum?
this pr tries to modify the rnn encoder decoder book example.
description: fix for timeout error caused by big image icon for notification default image changed to smaller size.
add members property to response
without this change, the zstd_btlazy2 strategy unconditionally selects the best dictionary match (if one is found) over the best input match, even if the dictionary match is worse.
refact(shells): use an env var tf_alias to keep the name of the alias
exp support all size
others others parse rank_to_ip map on cpp side and start message bus
ts 3.7 has been released which supports optional chaining and nullish operator.
a goto, which means we wouldn't lint anything in the else block.
- use yes / no instead of right / wrong (as seen in the style guide at
this pr fixes the behavior raised in #42420. now, the user can create new host record bypassing dns and will also be able to delete existing host_record made via bypassing dns.
this was the last genericsignature-based operation that relied upon the genericsignaturebuilder.
sla miss alert callbacks : allow dags to specify a callback function that can be executed during sla misses.
ness_alarm: bump nessclient version
add support for  aliasses
disable workers with string literals
i hereby agree to the terms of the cla available at:  for changelog.
release a bunch of summarization and translation pseudolabels with reasonably nice documentation.
what do these changes do?
added qwerty and command layers moved modified tap keys to press instead of release added one shot modifiers organizational changes my code follows the code style of this project.
continues from #4232,  closes #4153. fixes #2703. fixes #2710.
this pull request patches fs.access and fs.accesssync to support paths in asar archives.
would lead to a reference leak for the case that an invalid axis
relation prediction skeleton
remove endpoint name in the backend log query condition.
add or edit tests to reflect the change.
save settings file instead of sending ipc message added file watcher to track changes in the settings.json updated ui unit tests what is include in the pr: linked issue: #11077 communication: i've discussed this with core contributors in the issue.
[test] disabled several autodiff tests for back_deployment_runtime.
so, this pr add support acl for google cloud storage.
plumbed xdsresourcetype throughout xdsclient
addresses #20308 this pr ensures linearsvr is compatible with numpydoc.
fix paddlegan deoldify model layer problems, test=develop
short description (up to few sentences): fixes #5990 detailed description (optional): for csv input format: consider unquoted null literal as \n (if setting format_csv_unquoted_null_literal_as_null=1) initialize null fields with default values if data type of this field is not nullable (if setting input_format_null_as_default=1)
[ml] calendars api : inconsistencies in documentation / json spec
call startanimatiom on m_scalecombined for scalex / scaley animations
added ability to provide the keys to sign a transfer transaction with rather than asking nodeos.
add module for ucs dns server
hi @antirez @madolson , now i open this pr to discuss the codes i mentioned in  #6152 , except the original problem, here are other three changes: propagate exec directly in lua script i think we don't need to use also propagate in lua, cause multi is already propagated.
add maxfontsize and minfontsize to series that have it.
with this change, github will create and publish a nuget that contains the dll's and headers needed for win32 and uwp.
others others add flags_call_stack_level to control call stack of error message if flags_call_stack_level == 0, only the error message summary will be shown.
clean up mmdloader
[dynamic-to-static] support dy2stat error message when call jit.save;
add or edit tests to reflect the change.
the transform matrices were all wrong previously.
basic bsdfs meshstandardmaterial -> roughnessnode, metalnessnode,  normalnode simplification of nodebuilder code generator and depedencies (biggest update of this pr) normalmap support 30+ math functions to mathnode colorspacenode all three.js encoding functions (automatic use in texturenode) temporary variable system: tempnode structnode support new lightcontext ( more generic ) expressionnode for inline code webgpu - selective lights  // physicallightingmodel example // reflectedlight use the same standard native of threejs const glslcode = void ( inout reflectedlight reflectedlight, vec3 lightdirection, vec3 lightcolor ) { re_direct_physical( reflectedlight, lightdirection, lightcolor ); } const physicallightingmodel = new functionnode(  glslcode   ).setincludes( [ re_direct_physical ] );
the tests would occasionally fail on slower machines due to the nodes being out of sync.
fast forward/rewind buttons in background mode
fixed a portion of failing tests after introducing numpy compatible shapes.
avoid double computation of screen lines when opening files
add some new thread metric and class metric to jvmmetric
description this pr migrates the doc's breadcrumbs page to hooks.
subject: replacing .first/.second with meaningful names
install atom.sh shim
switch universal example to webpack-dev-middleware.
summary this change adds the material 3 text style names to the texttheme api.
catch exceptions in better order
clean up pages
use globalthis for global scope access.
adding blobbuilder feature detect test
style: dont' use pd.api.types anywhere in tests
fix pie label layout in multiple cases.
normalize favicons, tiles and touchicons
@quval requested a cherrypick for 4.2.0 (#13558) to bring in the fixes for the "test" exec group inheritance (see #13459 and related commits).
merging commits that went to rc but skipped rcbugfix.
improvements on set livechat department by name,
refactored existing handling of malloc and realloc to add new pages of memory.
android emulator bugfix for 0x501 and 0x502 opengl errors
this is mostly improving the spec test suite support (with this, the only unimplemented assertion types are "invalid" and "malformed", which can't be implemented until we have a wast parser).
fix: additionally show smali code of all inlined classes (recursively)
this test purposefully does not examine program behavior when url credentials and session credentials are different.
created frosty flake via keymap.c
adding .d.ts for the tress library
description: add missing documentation for addon_restart and addon_stdin for hassio integration in services.yaml file.
added data considerations for explaining the dataset language
take the apparent type of the source in type argument inference
added cve-2019-11358 to the security release archive.
see #1330 support metaspacesize and maxmetaspacesize  in java8+ in linux and windows i use shell or batch to get java version by java -fullversion, you can see it in commit.
this pull request adjusts the visual testing with storybook documentation to be more accurate and streamlined.
closes #18601. sub-modules, such as np.linalg, must be explicitly imported in the main namespaces' stub file if one wants to access the sub-module via a getattr operation, i.e.
bug: subsequent calls to df.sub() are much faster than the first call
provide a user-accessible override of that heuristic to allow forcing / disallowing attaching the dictionary.
pass "preload" attribute to guestviewmanager
this exposes the torch distributed optimizer settings by adding it as the top level "ddppo" trainer.
i hereby agree to the terms of the cla available at:  fix error output of treeexecutor is not sorted for optimize deduplicate.
nodes types filters order not kept for _nodes api
implements the community id hash that will allow correlating network connections detected by osquery with other tools that support the standard (zeek, suricata, etc.).
this has to move some emcc.py code to decide if we need to legalize to an earlier place, so we know that when we do the autodebug stuff as part of the binaryen passes.
add or edit tests to reflect the change.
this pr removes this functionality, and we now use snuba for filtering on messages.
add default fulfilled/rejection handler to promise
kafka-12541 introduced a regression for listoffsets requests for non maxtimestamp specs.
closes #33562 tests added / passed ensure all linting tests pass, see here for how to run them whatsnew entry the problem with above issue was with the function non_reducing_slice.
doc: fix doc linking, was referencing private submodules.
enh: enhance meshgrid to generate 3d grids, sparse grids, matrix indexing.
add type definitions for channelgroup methods to pubnub type definitions
react-navigation ontransition prop passing
types for osmosis node module
extra actions for dashboard page
cherrypicked from: ebdf78d backport pr for check point unit tests for the following module from pr #62216: test_cp_mgmt_access_layer.py test_cp_mgmt_access_layer_facts.py test_cp_mgmt_access_role.py test_cp_mgmt_access_role_facts.py test_cp_mgmt_administrator_.py test_cp_mgmt_administrator_facts.py test_cp_mgmt_application_site.py test_cp_mgmt_application_site_facts.py test_cp_mgmt_application_site_catagory.py test_cp_mgmt_application_site_catagory_facts.py test_cp_mgmt_application_group.py test_cp_mgmt_application_group_facts.py test_cp_mgmt_dns_domain.py test_cp_mgmt_dns_domain_facts.py test_cp_mgmt_dynamic_object.py test_cp_mgmt_dynamic_object_facts.py test_cp_mgmt_exception_group.py test_cp_mgmt_exception_group_facts.py unit tests pr check_point
currently stat descriptions are single line forcing the scrollbar.
docs: migrate variant anchorplayground demo to emotion
adds: a basic, incomplete implementation of array.from() a basic, incomplete implementation of date.tolocalestring(), date.tolocaledatestring(), date.tolocaletimestring() a mostly-working implementation of node.textcontent also slightly simplifies the clock menuapplet.
tst only report coverage on pylatest_conda
added frequent bloggers of react native.
this updates the alert details page sidebar for the change alerts.
convert iris to split-common
add example with magic and passport.js
migrate mouseoverpopover demo to use hooks
this pr manages a second "feedrate" applied only to g0 moves.
[ml] add datafeed field to the job config (#74265)
improve log error messages
bump the android gradle plugins versions to the latest.
finish first two collect docs
adds unit and integration tests for updating the backend config.
closes #18431 tests added / passed passes git diff upstream/master -u -- "*.py" | flake8 --diff whatsnew entry
description of change this problem is a part of the original problem subset sum in sense that here it will only count those subsets that are continuous arrays.
updates flickity definitions for v2 and enables use as a module
add intellij idea support to gradle build
in this pr: bringing the independent subsystems together via the plugin wiring up the http rpc endpoint wiring up the chain_controller signals adding to nodeos linking temporary fix for "a+" mode reads not starting at offset 0 on osx
function content in diff headers can be provided.
mono: fix export template build errors
however, when we do that, the commandline's current state still reflects the old buffer size, so resizing to be smaller can cause us to throw an exception, when we find that the commandline doesn't fit in the new viewport cleanly.
changes in this pr: use r builtin sexp type for any arguments passed from r to c++ that should be read-only integers use r builtin rf_asinteger() to convert those sexp objects to ints (replacing lightgbm's r_as_int) fix minor inconsistencies between lightgbm_r.h and lightgbm_r.cpp (e.g.
this pr does 2 things export all types fix references type.
without this pr partial function will fail due to missing fields.
switch win_hosts to use csharp util
fix bug #3441, #4072, #4173: 8-point fundamental matrix calculation error
fix ctor evalling in wasm when just some can be removed #5391
added lexrange methods with limit options
description: this pr addresses a todo left behind earlier in guarddog_impl.cc which was bypassing the time-source and working directly with real time.
>>> hasattr(clf, "predict_proba")
this adds a new mode to process-stats-dir.py that handles evaluating expressions over specific stats-dir values.
fix #27179
fix(config): avoid recursion when interpolating
these changes address an issue where screen readers may repeatedly and redundantly read texttrackmenuitem's control text on every texttrackchange event in some browsers.
added language to code fences for python for everybody
move json::to_string processing to http thread pool
add dynamic sampling configuration to projects.
fix: font rendering with hi-dpi transitions on catalina
build terms bucket from matching ordinals
updates xcode_backend.sh to use (mostly) assemble apis.
feat(polar): support radius for polar bars
user guide for histogram based gbdts
allow evaluating trivial drop glue in constants
ubuntu: added network response checks for curl and git calls, added --connect-timeout 30 to all curl calls
currently, we have two im2rec tools.
bump grafana version to 6.1.3
update helmet definitions
add url for bfs
and use rich to display log, which is more beautiful.
rules-tags defaults to ["recommended"], not empty list close #12615
fix playlist test count
[r-package] fix r examples and lgb.plot.interpretation
aclk_stats of ng and legacy could be merged.
this pr moves the os detection method to common and removes the os-detection dll project.
initial pass at a rocksdb jni cross-platform fat jar.
this adds visit* methods for the astbuilder to convert an antlr tree into a ql tree.
do not watch the parent folders recursively if not needed.
[mathjs] added typing to factory dependencies
enable the no-var linting rule in src/core/metrics.js
set up related reports part
this extracts logic from computetransformflagsfornode for switch cases that use properties on node subtypes.
may be fix s3 tests
i made some work on the issue #533.
i added wgsl support and keep glsl until finish nodematerial wgsl code generate.
before submitting a pull request make sure you have: at least skimmed through adding new extractor tutorial and youtube-dl coding conventions sections searched the bugtracker for similar pull requests checked the code with flake8 in order to be accepted and merged into youtube-dl each piece of code must be in public domain or released under unlicense.
added integration tests for trimming front of block log.
this lets serenity boot even when the repository is cloned with a
fix double-dash param usage (eg: --help) adds -version parameter sync output of -version and qt aboutdialog merge ui models for aboutdialog and helpmessagedialog
adding required flags to non-default arguments.
add command line option to ignore kernel threads on unix systems
hide forbidden ui elements, remove <br> from message
add black format check
add shield to titlebar
release 0.17.1
improve support for 1. gen mill heater
changed language for project euler problem-2
just in case someone is too clever with object serialization or tries to be clever by setting private properties.
rename the new setting
adds support for rbac and pod security policies for elasticsearch-curator
handle the scenario when heritage clause of interface is not entity name expression fixes #12291 handle when type alias's type parameter extends type that wont get emitted in .d.ts fixes #12326
improves logging overall.
[fragment] generalize fragmented media file downloader
assert on impossible state transition in transit(); put the last case and all non-enumerated cases(also supply assertion for them) in  for code coverage.
using parse/react-native gave error from typescript.
here's a bugfix for functionality which regressed from 1.6 -> 1.7, calling x.fill() with a tuple.
update readme.md to include block for pdf printing
exclude all of "marshal.h" when py_limited_api is defined.
add linear learning warmup method
auditd_fim_events: add process uid and gid.
remove it and other wavm tools from being built as some of these tools don't work as intended due to internal wavm changes we've made.
[docs] adds breaking change info for #28344
temperature.cpp:add pid conditional integration on heated bed.
a would like to add "logging" subsection to microservice security cheat sheet with design recommendation on how to implement logging subsystem in microservice-based systems.
see  the downside is that you can't use sudo in the container, but i was able to remove our sudo usages with little effort.
category choose one bug fix enhancement (new features, refinement) refactor add tests build / development environment documentation problem statement: currently connections to bigquery databases cannot be configured without adding code to superset or adding configuration to its execution environment in the form of google cloud account credentials.
while writing the (future) emacs plugin, i had to ensure version of emacs installed was greater than 23. i remembered this script i had worked with during my studies.
building on top of shantur's pr i changed: tuyamcureceived to tuyareceived to keep with established naming scheme (serialsend/serialreceived; tuyasend/tuyareceived) changed topic of tuyareceived from tele/%topic%/result to stat/%topic%/result the pull request is done against the latest dev branch only one feature/fix was added per pr.
in kafka streams the source-of-truth of a state store is in its changelog, therefore when committing a state store we only need to make sure its changelog records are all flushed and committed, but we do not actually need to make sure that the materialized state have to be flushed and persisted since they can always be restored from changelog when necessary.
features included in this pr: server-side of tls 1.3 key-exchanges: secp256r1 and x25519 resumption zero-rtt sni alpn ocsp stapling todos: correctly handle partial record receives log session ids (no need, since we don't log session tickets for tls 1.2) support for logging secrets (since we cannot do this in openssl 1.0.2) log if the request was early-data it's hard, and we might not need this; let's postpone testing
add a script to generate all languages doc and push to github
[sil optimizer] determine feasibility of dynamic casts between tuple types.
move embedding and linking macos flutter frameworks into the tool (#71764)
added typekev to showcase
the target tasks for the heads are superb's speaker diarization and speaker verification respectively.
ehn update lobpcg
mojaave.com is mahipat's portfolio, i have developed it using gatsby v2 and bootstrap.
!a - adds gleed system using new api
this replaces the pr #1559 in addition to it: further simplifications and readability improvements.
terminal not in a good state initially on windows insider builds
default fw for platformio too
serde with_bytes maps to blob
detailed list of changes: in lib\profilefunctions.js: added profile.profilefromtime changed: getcurrentprofile to use it activeprofiletotime activeprofiletreatmenttotime in static/report/js/report.js: add loadprofilesrange which loads only the profiles for the day range, and the profile(s) before and after based on the startdate of the profile changed loadprofileswitch to use loadprofilesrange note: loadprofilesrange uses a ajax $.when to chain three sync api calls - this doesn't feel right, but unless the profiles are all loaded the subsequent processing will fail.
fix omitempty/optional indicator on cabundle fields
add or edit tests to reflect the change.
emulation on host: option -p to change fs persistence location
fix issue in asv.conf.json for win32+other environment
replace use of boost::trim_right with locale-independent trimstring
fixed test util imports in remaining pandas/tests files
switched license over from lgplv3 to apache2
added mask rcnn 3x multi-scale training config result model box ap mask ap mask_rcnn_r50_fpn_mstrain-poly_3x_coco 40.9 37.1 mask_rcnn_r101_fpn_mstrain-poly_3x_coco 42.7 38.5 mask_rcnn_r101_caffe_fpn_mstrain-poly_3x_coco 42.9 38.5 mask_rcnn_x101_32x4d_fpn_mstrain-poly_3x_coco 43.6 39.0 mask_rcnn_x101_32x8d_fpn_mstrain-poly_3x_coco 44.3 39.5 mask_rcnn_x101_64x4d_fpn_mstrain-poly_3x_coco 44.5 39.7 mask_rcnn_regnetx-400mf_fpn_mstrain-poly_3x_coco 35.7 37.6 32.8 34.4 mask_rcnn_regnetx-800mf_fpn_mstrain-poly_3x_coco 38.0 39.5 34.7 36.1 mask_rcnn_regnetx-1.6gf_fpn_mstrain-poly_3x_coco 39.5 40.9 36.1 37.5 mask_rcnn_regnetx-4gf_fpn_mstrain-poly_3x_coco 42.2  43.4 38.3 39.2
update doc strings and examples to support 5-point face model
moves the non-multistream specific state to its own class.
[stable/kong] added custom nginx template injection capability via config map
enable direct call for normal tasks
original pull-request #31528 this pull-request is a first step of an automated backporting.
it was suggested in sr-14667 to remove the potentially confusing .dynamictype diagnostic suggesting users to use type(of:  instead.
replace deprecated method
added to code_of_conduct.md to include link to faq about the code of conduct
update to riscv opcodes from
replaces #881.  fixed memory consumption issue by replacing replaysubject with publishsubject and adding an atomicboolean to collapsedrequestobservablefunction to track if a value has been set on the response yet
this pr add to the proxy implementation of h2o the support to connect to such servers.
add or edit tests to reflect the change.
add tcplistener support for hermitcore
do not normalize non-scalar constants to a constvalue::scalarpair
[client] fix slavereadenable=true not work sometimes when cluster deployed on dledger mode
check that the feature request issue template is the one being added here.
[constraintsystem] make binding producer responsible for attemping any last
add fullmatch matching mode to series.str
use shared memory atomics (wherever possible) for building histograms.
in this pr, i update capture-promotion and move the ownership model eliminator after it.
switch to using register_code16() and rename tapdance keys to match the left and right terminology preferred in qmk.
extending robotics shadow hand with touch sensors
[fixcode] enabled protocol<...> fixits
move asv benchmark suite to scikit-learn
update webgl-ext types to work with ts3
since we are using gcs client as kv backend, we need to make it auto-reconnect in case of a failure.
add kernel stack trace option to capable
this pr fixes some incorrect results and exceptions being thrown by the calculator plugin which might be slowing down pt run.
support for rigidbot v2
use node: 'current' as target for babel-preset-env
we are moving test262 and rwc into internal repository.this pr is to update the test262 and rwc path used by the runner
follow the advice from the readme.
rustc_mir: remove redundant wrapping of return type in numeric_intrinsic()
i'm using locust as a library for my custom tests scenarios, and i need to identify my test users with authentication tokens that are received from another stress test system.
backport of #19756. addresses #18419: hard to navigate docs front page i'm working with @rossbar to implement the following changes: remove html templates remove references of html templates add sphinx-panels as a extension replace index.html/documentation front page with index.rst update the overview page, following this mock-up create the getting started page, which includes brief installation instructions and links to various guides, depending on user profile (absolute beginners, f2p, etc) -> this change will be in a future pr instead
modify roi_perspective_transform_op to output mask and transform matrix
abstract support locales and fix few bugs.
decreases checkstyle errors for ambassador pattern
changed the log message to make it more clear.
the test checks for users() length == 1.  this ignores the case there the instruction is the root, where users() length == 0, but there is effectively one user.
metrics export port expose done.
fix unavailable container errors
this is #49219 up to the point where the bridge is introduced.
deprecate argon2 typings.
use updated fs api
backports some prs (linked below) needed for numpy 1.13.0 support in master to 0.18.x.
hi!
bug: precise_xstrtod segfault
this pr fixes a severe issue for which changes in the properties modal of a dashboard won't be fully saved when the onlyapply prop was used.
[stable/spinnaker]: allow kubeconfig to be referenced from encrypted s3 bucket
fix markdown colorization for fenced code blocks when end fence is prefixed by spaces
fix httpclient connection: close mode (was disconnecting when the server held back responding like when using event stream).
fix: launch docs link in external browser
also, diagnose conflicts: multiple superclass requirements where neither is a superclass of the other a superclass requirement and a concrete type requirement that is not a subclass a layout requirement and a concrete type requirement that does not satisfy the layout requirement the first two were already being diagnosed, the third is new.
rename "recipes" section to "using redux"
type: refactor description:  reduced the padding and size of the input elements of the data privacy rules form component before: after: the height of the input fields was 40px and it is 34px
--replay-blockchain will not attempt to recover the reversible blocks by default.
@mihaimaruseac this pr adds tf_read_only_memory_region, newreadonlymemoryregionfromfile and stat ( because we need getfilesize ).
add rls to .pkg installer
load additional plugins from path specified in configuration
add comments about data stack sizes.
fix apigateway model state fetching add integration tests issue fixed: #3888 apigateway on cloudformation can't find ref on resource
added sourcetree tutorial reference to main readme file
commenting on the cliconf support call for ios-xr modules for ansible 2.9, as the call for support deprecation was added during the early stage of module development and is not relevant currently.
ui: support color picker with alpha
touching the screen should be represented as 0x01 in buttons
core: add support for setting stdin/stdout/stderr for transient services
i have read freecodecamp's contribution guidelines.
see  also i am not 100% sure if i have not introduced leaking of file descriptors somehow (although did run that specific added unittest 10000s of time and everything was legit)... otherwise -- now it passes all old tests and the new one
this pr adds the scriptable column to options table.
the external-dns chart can use a secret containing a credentials.json for google cloud dns
this pull-request slightly adjusts the current error handling code to improve exception safety and enable switching the error handling to user-defined exceptions (by defining rapidjson_parse_error_early_return).
fix instructions mentioned in #6181 goes with r2r pr radare/radare2-regressions#627
to bring this all home, we unpack incremental dependency information from external dependencies, then integrate them into the current dependency graph - as though they were any other swiftdeps file.
explanation: the actor runtime has some known issues with deadlock when an actor has to give up its thread because it's running lower-priority work.
clean up floydtriangle (ft.java)
fix: isjoi is removed from joi object
strip 4k from rom for eeprom emulation to save settings with m500 robin e3d can't save settings at all save settings to flash
fix(challenge): update user challenge map on challenge complete
related issues closes #68226 i added the following tests: selectabletext test for selecting spaces on mobile test for selecting spaces on non-mobile platforms test for double tapping a space on mobile i had to change the following tests: selectabletext long tap still selects after a double tap select i split this test into a macos and ios version because they now differ in behavior when selecting a space, and this particular test taps a space.
docs don't mention anything about xpack.security.audit.index.settings when forwarding events to a remote cluster.
supercedes #8382. we revoked that pr because it always made the type of this in object literal methods be the type of the object literal.
just use /bin/bash instead of /usr/bin/env bash
allow insecure urls with warnings (#4307)
apparently people use such large key files.
[nfc] one-shot name lookup
network interface speed, duplex, operstate
add userspace and keymaps
fixes #1436 with this, we don't need to wait for the js bundle and page can render directly.
for #3691. standardized routecontext standardized executioncontext move executioncontext to shardingsphere-executor module
init pwm-able auto fan pins with set_output
this function currently always overwrites the underlying error message with a rather useless one.
treat type variables and special typing forms as immputable by copy and pickle
a few pieces of context: when a docker container is started with a mount where the host_path does not currently exist, it will be created with root ownership.
fix types for emojiindex
ref(reprocessing): remove team name from reprocessing script
update staging client
while testing #81455 i encountered 2 issues with remote-test-server: it is built with the stage 0 toolchain, which does not support a newly added target.
fix for router.map et al.
others others move func from kernel_context.h into kernel_context.cc for compile quickly
add option to export graph with input node that accepts encoded jpeg or png string
this module adds support for dns record management via the api of netcup (german hosting provider).
your submissions are formatted according to the guidelines.
[stable/coredns] update to latest version 1.0.6
support show single table rule statement.
some codegen tests didn't seem relevant (e.g.
center rolling window with date notimplementederror
related issue = #1905 #2078 #2085 atomic add may crash when adding negative numbers.
remove the need for extra interfaces in node_provider to support custom node types each node type now gets a custom node_config section, which is merged with the default node configs require specifying the default head/worker node type in multi node type clusters i've run scripts/format.sh to lint the changes in this pr.
follow-ups for #20477.
cleanup editor association setting
use tf_optimizer.optimizegraph() to reimplement create_inference_graph() method, and fix a bug in getdeviceandallocator() where it doesn't set the cuda_device_id even if the device is found.
disambiguous some method call sites when calling from kotlin
implement python number conversions.
let users define their own client token.
implement binomial sampling
now we don't need to restart the program to apply new disassembly settings.
minor styling fixes
after a post from user "tann" on discord #android channel we've realised some inconsistencies on the libgdx default color format (rgb565) and the platform defaults on android (rgb888) and ios (rgba8888).
release: kick-off 1.14.2-dev
checker and emitter changes to report errors on inaccessibility of symbols when writing types in declaration file
provide grafana dashboard settings and remove unnecessary metric.
[jquery] add jquery.cleandata.
fixed issues with pool2d
produce targeted diagnostic when using doc comments on fn args
[exclusivity] update tests for access markers.
description: when user has multiple miflora devices, we can't connect to them during platforms setup, because it takes several seconds to connect to each device and we can't do it concurrently because of locks in btlewrap ( i will remove a code which makes a connection on platform setup.
adds a source signal for audio monitoring type changes
@steven-sheehy @unguiculus this skips initialization of the replicaset during bootstraping if set to true.
update license and document of new oal engine.
added immersive mode option
update the tutorial to use the explorer
ensure that euclidian_distances method passes numpydoc validation
description: this adds support for the homekit battery service - so battery powered homekit accessories can now report their battery percentage, if they are currently charging and if their battery percentage is low.
df.sort_values() not respecting na_position with categoricals
update e0088 to new format, remove e0090
when i do something like this: var handlescroll = _.debounce((e:jqueryeventobject)=>{ //handle the scroll event here }); $el.on("scroll", handlescroll); typescript compiler throws error citing parameter mismatch.
add types for fingerprintjs2 v2, fix config for v1
tweaks to create a single-file decoder
performance optimization ops cherry-pick #29187, #29484, #29553
this pr adds 2 extra tests for gridlayer zoom-in and zoom-out animation on "graphical browsers" (i.e.
#17702 and #17872 revised same lines in test_gluon_rnn.py.
different tests will run depending on the specific comment that you use.
support convert tensor to cudf depends on dlpack test=release/1.6
[api-minor] add support for pagemode in the api (issue 8657)
this pr introduces a rather big change.
[keyboard] neo keys palette g67 hotswap
this breaks up the serverless-loader into typed handlers to allow for easier maintenance and better type-checking/linting.
>>> @dataclass(repr=false, eq=false, init=false) ... class x: ...     a: int ...     b: int ...     c: int ... traceback (most recent call last): file "<stdin>", line 2, in <module> file "/home/bucher/src/cpython/lib/dataclasses.py", line 1042, in wrap return _process_class(cls, init, repr, eq, order, unsafe_hash, frozen) file "/home/bucher/src/cpython/lib/dataclasses.py", line 1020, in _process_class cls.__match_args__ = tuple(f.name for f in flds if f.init) unboundlocalerror: local variable 'flds' referenced before assignment
fix(aws sqs): fix referencing lambdas with provisioned concurrency
this change ensures pseudoterminal-based and local terminals (vscode-file uri as cwd) do not await available profiles as they will not be used: this also ensures we await the createterminal call before returning to the exthost to ensure the terminal id is ready before proceeding.
added option to seafile controller to configure host to bind seafdav service to using seafdav.conf
this patch simply adds method docs to most of the methods in ml/dmlc/xgboost4j/scala/spark/xgboost.scala and also adds a few style changes to make the code a bit more uniform.
changes in this: if the old state was not present or not used, we set flag that says instead of calculating signature for a file (which is dts emit hash) use the version of file as the signature.
prefer platform::string to wstring in calcviewmodel
make the layer cache more efficient
added stat for connected state of control plane
this pr adds support for the decrqss (request selection or setting) escape sequence, which is a standard vt query for reporting the state of various control functions.
this is an update to #3751 to provide an error back to the client when database inserts fail.
v2 of #2083
move non-provider specific upgrade tests logic to upgrades package
reload closest store on api request
update rationale about multiline object literals for the 1.15 changes
todo: remove print button fix/add print button restyle progress bar re-arrange the zoom options to stephen's specs.
tests added / passed passes git diff upstream/master -u -- "*.py" | flake8 --diff whatsnew entry closing a fixme note in the test suite.
as per title component name area/system none tested several variations of the repro in #7179 and in all cases whether or not netdata is installed in a symlinked location editing configuration eith edit-config works as expected with: enjoy real-time performance and health monitoring... copying '/opt/netdata/usr/lib/netdata/conf.d/apps_groups.conf' to '/opt/netdata/etc/netdata/apps_groups.conf' ... editing '/opt/netdata/etc/netdata/apps_groups.conf' ...
docs: remove links for cheatsheets from books page
add or edit tests to reflect the change.
this pr removes the requirement that space is needed after the action keyword.
fix multiple functionmanager instances lead to unexpected behavior about classloader
follow the advice from the readme.
fixes #998 the sls variables xxx type commands now support the serverless variable hierarchy (common, stage and region).
chore: remove hard-coded domain for multi-domain
add fix to utils for new transform
add test case for sqlserver output clause column shorthand.
these both are already classified as interior pointers.
libhttp: handle chunk sizes that start with zeros correctly
minor: fixes for making test more stable
move themes into packages
[feat/fix/docs]: improvements in the...
as a result, the variable fonts would build correctly, but the static instances were not.
this pr allows disabling individual rgb matrix effects in userspace.
add health check to integrations
move user-agent: to the new metadata traits system (and away from the old callouts system).
convert indexroute to function component
put an x in all boxes that apply added dropbox to the list because i used it for some years for screenshotting, it worked great and it wasn't already added in here.
this pr contains two changes to swiftlang, the swift layer exposing sourcekit in swift: make each variant keep a strong reference to its sourcekitdresponse context.
add a custom keycode for a compile-time defined macro and add to _fl
this contains some small changes that resolve some of the pr06 errors from running ./scripts/validate_docstrings.py --errors=pr06 xref #28724 tests added / passed passes black pandas passes git diff upstream/master -u -- "*.py" | flake8 --diff whatsnew entry
ability to get pod name with kubectl in cgroup
completes @thomaswangio 's set up a netlify cms-managed gatsby site in 5 steps article with the missing netlify auth provider setup.
closes #16979 tests added / passed passes black pandas passes git diff upstream/master -u -- "*.py" | flake8 --diff whatsnew entry
in scenarios where the cluster-store configuration is invalid or the store is down during daemon bootup, the get apis in libnetwork were aggressively failing resulting in failing even the local networks and endpoints.
created a custom keymap for gmmk pro that includes a working volume knob.
support for vivaldi & brave browsers for "openchrome.applescript"
ref: collect get_dst_info methods in tslibs.vectorized
we'd like to see how many of these flakes are transient and how many involve the device/machine getting temporarily wedged.
fix collections.abc deprecations with python 3.7
previously, the platform_info table on windows did not include the releasedate field.
move usage tests to memory filesystem
add error message when non owner tries to add a user to a dashboard
options command support complete
this gets rid of lots of unnecessary unsafety.
addresses the request in #46763 to add the ability to manually add repos.
add the labex digicosme logo to the funders list in about.rst @gaelvaroquaux i miss some informations like the period when tom and mathurin have been funded.
feat(test): add very simple bincases test infra to build off of
reduce the  occupied size  of memory for the fused pattern of elementwise_add op and activation op(relu op for example) (#29885)
dump compiler warnings to *.warnings.txt; use "make warn" to print them
add support for composite usb
no reason to block off bech32 access with legacy address default.
nproc for ubuntu, hw.logicalcpu for mac
description: an exception is thrown to the user if a custom resolver name is specified when using strict or logical dns in the address section of the endpoints.
rename ioslice(mut)::advance to advance_slice
previously, only theme colors could be modified using the themeeditor.
closes #8439 before after
with-firebase-hosting example is not working with next 6
related to (and dependent on) elastic/docs#657 this pr increases the use of attributes for ccr references in the documentation.
gpu/shaders: implemented ssy and sync as a way to modify control flow during shader execution.
typo fix for allenai url
gui: options: set the range of pruning size before loading its value
patterns, so all scoring methods are called
this pr mutes multiple tests on windows.
share the "added" and "removed" events across dispatches in object3d to cut down on allocation when adding and removing objects a lot.
extra keys for technik ortho
use a varialbe to store the result of formula to avoid calculating repeatedly
add or edit tests to reflect the change.
follow-up to #38697. see available checks at  i also tried: modernize-deprecated-headers but it breaks the codebase, as we use some code like is_inf, and clang on my distro can't even find cstdint by default.
add text recognition sample
shell scripts: fix bare variables
[docs] remove translation files for fr, de, ja, es, ru
follow up to #17538 fixes all lint errors in js/shaders.
it is used to generate a all-in-one report file after all the visual test run.
fix kubectl port-forward for services with explicit local port
reference to stream changes of braintree search api:
added english docs on aggregating, replacing and summingmergetree.
[docs] adds testing for api keys
tree-wide: use mfree more
in addition, light validation is now performed on the order parameter before it is passed to a scipy class.
this is what i managed to get done this morning.
this is a hefty patch that takes some first steps towards solidifying our core comms mechanism.
it updates vaultingkube version and add labels to metadata following other projects.
however, if paneitem implemented an ondidterminatependingstate function but did not implement an ondiddestroy function, the pane wrongly ignored the ondidterminatependingstate function.
use stringtopdfstring to sanitizing bad "prefix" entries in page label dictionaries
regr: pd.to_hdf(dropna=true) not dropping all nan rows
prepare for travis-ci.org continuous integration
remove isnumeric util function and use lodash isfinite instead
handwired/reddot: configurator support
add the most basic fastapi support, passing the following test.
fixes #7299 display typescript sourcemaps correctly
what's in this pull request?
move the deferred limit to the producer plugin which now controls it route all new blocks through producer so it can maintain invariant that there is always a pending block (whether for speculative execution or future signing) re-apply unapplied transactions and apply deferred transactions on a new block (note: this needs proper throttling once subjective failures are handled correctly inside controller).
follow the advice from the readme.
change pwm updated to the latest version of arduino pr #7231
adds a url-tvg attribute with a guide from iptv-org/epg if available.
update surefire/failsafe version
i removed the macro definitions that are no longer needed as keymap_grid is now in the file keymap_common.h.
it seems that nintendo finally filled that last empty spot in applicationlanguage for a total of 16 supported languages.
this is the pr we discussed in #413 for colortool.
keyboard: added support for hid liberation device
add dcompact layout implementation for levinson keyboard
add maziero's operating systems book
6.25u bottom row iso layout for matrix noah
[ae/ca/osx] - fillup the stream with up to 64 unknown channels fixes support for studio audio devices with more then 16 unused/unknown channels in one stream - fixes #15874
fix crash when vaapi cannot be initialized
gwt input make keyforcode overridable, use setcatchkey to prevent browser's default behaviour
backport for #16989 copied from original pr: we struggled to investigate flink-23611 due to missing flink logs.
the adder node can now add float vectors of different lengths by trimming them to the same dimensionality.
addition of python implementation and cpp code fix.
remove unnecessary property def
bump python-miio version
feat: allow to use typescritpt in the config file
according to this issue, we should support python 3.6 and python 3.7 in paddle build scripts
adds feature flags (set with defaults to match current behavior) that (a) can escape/display html code, or (b) hide the output of html markup.
this pr moves this work to recognizers by adding a new method to gesturerecognzier: abstract class gesturerecognzier { semanticshandlerconfiguration get semanticshandlers; } which returns a class that has one optional callback for each kind of semantic event.
so extensions like echarts gl which provide multiple charts and components can also have the new minimal import api.
addresses #20724 #dataumbrella summary of changes to basedecisiontree: add tests to ensure estimator raises proper errors when invalid arguments are passed in.
fixes #4667. on master, the tests added in this pr fail and the code below prints info and warning level logs.
fix(studio): properly generate commands for multi select
(whoops branch should've been issue-2117-http-url-not-working...) this pr will resolve issue #2117. it will upgrade an http url to https and see if that works then fallback to using http if it fails.
if not, go over here and sign the cla increase and decrease font size works once again!
to normalize data.
this merely log stuff on the console for now.
svm: fail lazily if service loaders cannot be instantiated [gr-32503]
psexec: handle socket errors (connection timeout)
implemented ninja aabb vs aabb collisions
move imports to top
updated tests to use s.
only copy stuff when status is ok
the fastcgi process spawned by fastcgi.spawn is executed before h2o calls setuid.
[diagnostics] avoid direct use of constraint system by missingargumentsfailure::ismisplacedmissingargument
added bcpandas to ecosystem
fix incorrect markdown syntax.
fixes the invariant test for sample weights as mentioned in issue #11316 (refactor tests for sample weights).
this pull request fixes the following issues: added missing 3d files to libcocos2d project files implemented missing inet_pton() functions for windows phone
refactor gov spring namespace
i hereby agree to the terms of the cla available at:  add materializedpostgresql table engine and database engine.
extracts method with common logic for tidying up test of previous encryption schemes.
fix remove ttl for column
use zigpy node descriptor
category choose one bug fix enhancement (new features, refinement) the js code in the deck.gl examples wasn't working correctly.
overly eager react-devtools
should resolve flickering issues
bug: iloc(axis=1).__setitem__ ignores axis
fix single line text trimming issue
to ease cross-development gentoo alows installing only fully qualified toolchains tools: x86_64-pc-linux-gnu-ar and similar.
* fix setrefremote issue with exotic shortcut resolvers and branch/tag/commit
so this is my attempt of adding replay and export functions.
hot exit - polish
two fixes to get make check-stage1 working.
replace msgpack with srsly
implement most of the rest of ea interface
add http connection pool and custom ssl context factory
it changed the pythreadstate structure size, breaking the abi in 3.9.3.
[@types/gremlin] add listener functions to driverremoteconnection
covert last-action reducer to ts and update the related import
deletebyqueryrequest to implement indicesrequest.replaceable
add "testing changes" section to the pull request template
because getblocktxn requests for unknown blocks would trigger a disconnect, while a getblocktxn for known-old blocks would just be ignored, it should be possible to fingerprint a node by seeing which old, non-main-chain blocks trigger disconnect.
remove system.out.println and throwable.printstacktrace from tests
changes based on suggestions on this pr  implemented and more test coverage added
core: readwritepaths= and friends assume '+' prefix when bindpaths= or freinds are set
to reproduce this issue, two conditions must be true: tap on a tab that is adjacent to a tab containing a nested tabbarview the nested tab has to be in between the initial tab and the tab that was tapped on (ie.
migrate prometheus bucket functionality to metrics stability framework.
this change addresses performance issues related to the general behavior of visiteachchild.
use 128 instead of 64 bits for defpath hashes
related pr = #2657 and #2792 in this pr, sparse matrix-vector multiplication and direct linear solvers (llt, ldlt, lu) are supported.
closes #6280
add spectral clustering test for amg solver
commit message: make server::options available to the ssl handshaker factory this allows the handshaker to detect the run mode (server::options::mode) and use that to bypass checks required for serving but not for validation.
fix unzip param order on android's busybox
closes #10611 closes #10678. the x-axis for scatter plot and hexbin plot disappears when colorbar is included.
enable alphabetical include order lint filter
if a diagnostic request is actually canceled, we will throw away the type checker as we cannot be certain that it is still in a usable state.
mainly for "hygiene"; add comments to remind people to consider keeping these win sync with the vendored package update binary-commit (userland-proxy) for libnetwork:  moby/libnetwork@fcf1c3b...20dd462 update tomlv binary to match vendor, and use mit license: burntsushi/toml@9baf8a8...a368813 ping @vdemeester @akihirosuda ptal
issue: #12531 added functionality to resolved type aliases and extract enum types from the compodoc generated json file added test cases for named enum types yes, there is a new enum example component possibly.
remove user modal
currently there are two know issues when compiling with intel icc: the operator() in iterator causes warning the use of internal_iterator causes error the first issue can be resolved by replacing the operator() with a converting constructor and assignment.
optimize bfmatcher by passing macros.
fix pojoutil realize type convert not support subclasses of 'java.util.date' #2499 the type convert was modified to support the 'java.util.date' subclass org.apache.dubbo.common.utils.compatibletypeutils.java org.apache.dubbo.common.utils.pojoutilstest.java org.apache.dubbo.common.utils.compatibletypeutilstest.java follow this checklist to help us incorporate your contribution quickly and easily: make sure there is a github_issue filed for the change (usually before you start working on it).
[d3-array] update to version 1.2
fix for issue #16862
only get the apparent type when necessary.
this one should fix #805.
add prettier markdown formatting to npm scripts
to safely compile for the web, we need to ensure that unsupported code is not reachable.
adding dataframe methods to api reference.
fix doc in tf_call_ when defined(is_mobile_platform) && !defined(__android_types_full__)
upgrade mypy to 0.720
reorganize interop test files.
these commits should fix all defects detected by coverity.
this change will not change the functionality,  it just changes the internal implementation detail.
#2957
minor cleanup in parse_assoc_expr_with.
added disabled state
+ [mapnik] adding methods of the class vectortile as described in
fix predictions for calibratedclassifiercv with pipeline
revert to 2.3.2 tag instead
furthermore, it isn't obvious to transfer the code from the quantized version to the floating point model.
create single watcher for whole watch process
completes #12202 fix abandoned by @parul-l. modifications made as per @amueller and @adrinjalali: replaced random data with an image from sklearn image dataset; reformated the output.
after previous pr #1552, stirngstore not actually does any cleanup.
this script patches the protobuf source code after downloading it to put it into a google::protobuf3 namespace, and alters all the necessary tensorflow code to compile with this new namespace.
support more java types for  getobject with type method
dalli 2.2.x was released, so this is safe for merge now /
so instead, we'll just use the shell32 one manually.
let toplevel links to .md files link to .md#top
all compatible conversions with tests.
currently, the decisions regarding which translog generation files to delete are hard coded in the interaction between the internalengine and the translog classes.
migration from registry is supported.
removed dashcamplayer (the feature is replaced by common/image.js") improving pnc monitor performance by reducing chart update frequency in pncmonitor, categorizing planning/control plots into different tags.
fixes #90 . updated the combostyle and progmoderadiobuttonstyle to set istextscalefactorenabled to true so that the text size for these controls will scale according to the system settings.
cpuparticles: set linear velocity to 0, like gpu particles
removing the check for user that was added recently (i added it when i added the same check but without a user for the auto resolve message, and now need to remove this)
add a dependency search mode for gdscript parser
allow void returns in catch/then blocks support union types for catch handlers that really need to return a different type than the original promise allow calling fromnode for a callback that doesn't expect a result parameter
wrapped sections within <section> tags on the /manage page.
removed return false to fix return error in ie 11
.circleci: add python 3.9 builds for macos (#47689)
webgl doesn't work on windows
description: update the androidtv tests to use pytest instead of unittest.
fix the error of  #3940
additionally, it modifies our current reindex from remote tests to randomly use the external version_type.
add in the methods for @types/angular-loading-bar and fix the tests
patch_manager: add support for using layeredfs with data
hard overwrite on conflict for query owners (re #283)
support void normal task
wip: specialize call_function for builtins
migrate api doc samples to nnbd
stopping pvr manager must follow the strict two-step logic for all (!)
add _xfail_test estimator tags
add input/output objects for expressions
the following deprecated warnings are removed from contrib/timeseries examples the name tf.app.run is deprecated.
running pytest in getsentry triggers a bug in firefox_profile.py from the selenium driver.
we add ent_iob as a token pattern key, upon request by #3940 . i also added a tiny addition to the documentation for the new key.
fix for #9957 resolves the deprecated function in diagrammer package used in graph.viz.
fixes #4866: minor bug in the dict update when used by minibatchdictionarylearning.
cgroup_shm: initialize shared memory
this pr along with electron-archive/brightray#157, adds a new api to app: app.allowntlmcredentialsforalldomains(true | false); we are discovering that many domains are incorrectly configured, so that ntlm will not be implicitly passed to a web server because windows (via iinternetsecuritymanager::mapurltozone) will decide it isn't inside the local domain.
simplify incremental parser.
- twitter & facebook fields are changing to store usernames only
consistent aws timeouts.
hi tf team, would it be possible to fold these tutorial doc updates from master into the r0.10 release branch?
added unit test specific to follower fetch
move tokenizer files in each repo
modified tweaked tests to use tensor learning rate
following-up on the url work from the previous pr built a new library called native-url to address the concerns with the differences in the api between our solution the node-url the library has an exhaustive list of test-cases to ensure it remains api compatible.
this includes a number of commits for the first round of upgrading to llvm 6. there are still lingering bugs but i believe all of this will nonetheless be necessary!
as such, this branch has following changes added _generatorfeedfn class generator_input_fn in generator_io.py support for generator_input_fn in enqueue_data() added unitest in generator_io_test.py refactored code keeping indent spacing to 2.
throw error if icon does not exist for manifest
change default shell to bash in ubuntu-based images
fixes for two property-wrapper crashes: move "has lazy resolver" check later to handle merge-modules properly (sr-10844 / rdar://problem/51484958) ensure that we fully check the property type vs. wrapper's value type (sr-10899 / rdar://problem/51588022)
zstdcli : exposing cpu load indicator for each file on -vv mode
fix a few quirks in the muliclass docs
clojure bert example: whitespace fix
one more round of deprecations removal.
attempt to fix urgent issue #4072 i'm sorry, no.
updates to support qmk-dfu bootloader, and refactor of oled support to utilize built-in i2c and oled drivers.
in my fork i have/had to fix the three issues mentioned in the subject.
patch blazor wasm security layouts
improve documentation readability, and avoid an incorrect debug message.
component name no functional differences in the code.
merged mkldnn adaptive pooling with traditional pooling implementation, so that the code redundancy is fixed
updated simd.js to fix nan canonicalization issue for bitcasts
allow passing a duration in string format
use collections for input_text.
adds multi-gpu support for multi-agent.
fixes #3453, towards #4222 this is not the most elegant patch, but i need to force resource_table into deno_core::isolate now, and this is the best i can do at the moment.
add test for multinomial deviance
fixed msmf video capture initialization
enforces a minimum width of 460 wide.
accompanying the release of tailwind css v2, @adamwathan recently added detailed instructions for integrating with next to the official tailwind docs.
initial start on improvments to the security questions cs
fixes #16723 this pr fixes 2 problems: fusedop did not support boolean input type as its inputs.
std: fix backtraces on arm linux
this is step 1 as laid out by @nathansobo in #10979. remove texteditors dependency on notificationmanager.
network: always update acquired prefix route
this pr adds support for --checkpoint-at-end to rllib train, which currently ignores this flag.
+ [doc] translate the 'using vuex and vue-router' into english
stop sending passwords to the ui
extracted these fixes from #2520
currently there is a clear mechanism to stub sending a request through the transport.
[#4235] automatic view based on should_render method instead of content_types property
css: use integer values for font-size in css use correct ordering of @import "invisible" isn't a tag - presume its a class "border-color" defines the complete border python: use "not" instead of == "[]" for python prefer triple quoted docstrings prefer static functions where possible prefer modern style classes where possible remove semicolons; global: remove duplicated words words
fix signatures of callback functions
use ensure_future to schedule coroutine if loop is running
fixes #417.
adding what's new item for sklearn.feature_extraction.image np.ndarray changes
use `--future-release` in changelog generation
add console to explain
the type definition assumes it is a color object.
fixed and replaced intersector intersectsegmentcircledisplace
update libcontainer to 5210a236b92a8022a673108f347
we've added several targets since the introduction of the target tier policy.
terminal tabs list to editor drag and drop stopped working
in modules/_datetimemodule.c, the char *timespec and char *specs[] can be made const.
currently onnx runtime is doing shape and type inference on both branches of the if operator, regardless of which branch is executing in runtime.
contribute to lerna by solving an issue where npm is the hard-coded npm client while a user can choose to use yarn issue #1057 ran all the "yarn test" options added tests to verify the configuration params i added breaking change (fix or feature that would cause existing functionality to change) - possibly if someone is using yarn as their client but actually they depend on npm running under the hood i have read the contributing document.
pandas get_dummies validate "columns" input
fix leaking mock patch in tests
improving model saving and resuming
* add keymap_extra def for norman layout
this redirects stderr to /dev/null when the --help or --version arguments are used.
make ctypes completely optional on windows
ignore the allocate action when injecting migrate
recipes(fix): add gatsby-transformer-remark package to mdx-images recipe
update plex platforms together
[listitem] move props access for state initialization into componentwillmount, fixes #4042
implement show for 1-12 element tuples
i hereby agree to the terms of the cla available at:  other add clickhouse-keeper-converter tool which allows converting zookeeper logs and snapshots into clickhouse-keeper snapshot format.
add override definitions for seq and sequence.
clarify event_free() documentation regarding pending/active events
enabling the constraint propagation pass disables the shrink
add portconfig type for detect port first argument
ipc_through_perf: add new chart
add open_wesocket_close_frame option to swlistenport websocket close frame code in $frame->code websocket close frame reason in $frame->reason use $server->set(array("open_websocket_close_frame"=>true)) to enable the receiving of close frame in websocket server onmessage callback add test for flag open_websocket_close_frame
add usb flash drive support for native usb host otg
stop inferring unions for disjoint callback parameter inferences
replace painless type with java class for casting.
trans: when coercing to box<trait> or box<[t]>, leave datum in it's original l-/r-value state.
[core] fix incorrect typings regarding transition components and children
adding nuspec for the package updating update-binver.ps1 to allow passing in the major/minor version instead of getting from release tag creating new build pipeline which takes a major/minor version as a parameter, updates the version in source and builds and signs, generates a nuget package and signs that, then publishes it i haven't tested the actual push command yet, as i'd like to get pr approval before doing so microsoft reviewers: open in codeflow
chore(sites): add new sites built by bejamas
fix trailing whitespace on morphology features
add aws_profile to prompt
fix conhost detect os version
"adding laser test fire function"
improved docstring for the solver parameter of logisticregression
a running example with cudnn rnn cell
fixes: #21441
combine prs #10200 #10206 #10209 #10212 #10215 #10217 to 2.1 minor edits to the reference of various cleos commands select one: select any that apply:
run cpp tests with sanitizers
fix link extractor tests for non-ascii characters from latin1 document
use memchr in [u8]::contains
kubeadm: disallow the mixture of --config and --patches
add random_state to affinitypropagation class.
feature: pivots are now regular visualizations that can be *saved*.
not much to say that's not already contained in the title.
add the function of the specified-agent-config
feat(theme-ui): remove theme-ui package
just some improvements i made in the course of my retroplayer work.
[parse/sema] diagnose invalid attributes for paramdecl
increase total area of text selection handle to 48 by 48
add intel cpu temperature chart to freebsd plugin
added a new job in the alignments tool which tells you which faces are in the faces folder, but aren't found in the alignments file.
this parameter already does not work and has not for many versions of
replaced assert_raises and assert_raises_regex with pytest.raises context manager.
in order to eliminate ruby 2.7 warnings.
it also results in cleaner printing of generated interfaces.
stm32/flashbdev: support generic flash storage config via link symbols.
the core issue seems to be with skip_child.
make tests compatible with python 3
set a weekly ci running every sunday night to all models from onnx model zoo with latest onnx.checker and onnx.shape_inference motiviation to enhance the robustness of onnx, add more tests.
publishing plugins on npm now has its own section and the amd/commonjs section is trimmed down quite heavily and focuses around a single piece of sample code.
document texturepacker settings change in changes
updated react-slider types to 1.1
unit tests are always killed because out of memory.
i tried to use prophetnet with seq2seqtrainer, but it failed.
this pr adds alerts permission group with alerts:read and alerts:write.
how can we verify it: deploy any serverless.yml with an event stream using only functions with custom roles (e.g.
fix: wrong function types in ufunc_object.c
scaffold out link provider proposed api
lots of changes here but i wanted to get gles closer to gl.
add soft breaking change flag
tty-ask-password: copy argv[] before forking child
print a more useful error message on should_panic mismatch
ondidchangeselectionrange and ondidchangecursorposition passed different data to their call backs.
here are the changes again with the revisions added in.
hold vt graphics options vector in class to save alloc/realloc/free time.
most pager, by default, does not support control characters.
failure 4.53s | ingestattachmentrestit.test {yaml=ingest_attachment/30_files_supported/test ingest attachment processor with .docx file} <<< failures!
currently, when an agent takes a new omnichannel request(manual selection routing method), the agent is redirected from the room preview to home template, which makes a bad user experience.
fix the bug of simple_test with proposals
part 8. we have an in-house rule to compare explicitly against false instead of using the logical not operator (!).
cherry pick #36587, #36662, #36908, and #36917 into stable-2.5 tower_credential.py ansible version 2.5
warning message about airflow_home and source code in same path -- initialize-local-virtualenv command
also, deprecate getoccurrences and replace it with an appropriate getdocumenthighlights api that matches the roslyn api and properly handles highlights across multiple files.
add a minimum distance that needs breaking on ios each time scrolls stopped.
meta: add lagom_unsupported helper function to serenity.sh
fixed lint errors
expose sketchpickerprops.presetcolors for the color control component
i've hit cases where pbuf_alloc() returns a nullptr.
dreamview: reflected hmi proto changes
fbxloader correctly parse duplicate maps
update redux-first-router typings with api changes as of v1.9.8
use configuration::getinstance()->supportsshareablevao() in place of cc_texture_atlas_use_vao.
clean up leftover plural references in asset pipeline guide
remove support file injection from wizard
this pull request is to provide a kafka source/sink pair to simulate a kafkashuffle that can: read topics that are already partitioned by key and process them without partitioning them again (avoid shuffles); and use this to decompose the job into smaller jobs and independent pipelined regions that failover independently.
@ahtn, just wanna make sure it's cool for me to merge this into qmk - it looks like you did most of the hard stuff with this :) if you want any attribution, let me know, or open a pr to the lets-split-support branch here, and we'll merge that in before this goes to master.
yuzu/configuration/configure_touchscreen_advanced: remove unnecessary header inclusions
fix cmake generate ios project, default arch config run fail on ios11 device cmake cmd: cmake .. -gxcode -dcmake_toolchain_file=../cmake/ios.toolchain.cmake
moves django untuk pemula from id.md to en.md since the tutorial is in english and renamed it to python django tutorial 2018 for beginners to match the source title.
enh: remove like= argument during array_implement_array_function
doc: update documentation of numpy.memmap
upstream: use phantom types for load/availability
health checks topic package reference update
move unit tests to one folder
cleanup podarray
queuetrigger change events
add a way to exclude file or directory watching
include socket.io-client as dependency
on formidablelabs/victory-chart#527 a new prop was added to victoryaxisprops - invertaxis.
fixes #10051 added an optional argument for_partial_fit=false to _validate_params which bypasses warnings about max_iter and tol added for_partial_fit=true to _validate_params calls in partial_fit methods for both sgdclassifer and sgdregressor i appreciate that this could have been done through the use of set_max_iter=false but it seemed clearer to me to have a dedicated flag.
add not null condition option + related logic
call type_of for opaque types later in compilation
no bed config for ramps
i messed up the rebase to next, so this pr is this one, but based into next branch, sorry :-/ #14523 i have followed (at least) the pr section of the contributing guide.
#8562 part (configurators) of ui-part from plugins/org.jkiss.dbeaver.ext.db2 moved in org.jkiss.dbeaver.ext.db2.ui
this is in line with the following issues: stanford-crfm/mistral#86: enabling sharing mistral checkpoints via hf hub (@osanseviero) #13463: upcasting scaled dot-product attention + layerwise scaling for stability (@lvwerra) concretely we implement: weight initialization from the original gpt-2 paper (by default, shouldn't affect folks unless they are training gpt-2 models from scratch) layer-wise scaling in scaled dot-product attention (optional flag; necessary for running/loading mistral gpt-2 models) scaled dot-product attention reordering (scale before dot-product) & fp32 upcasting when training in mixed precision (optional flag; only necessary for training new mistral/other gpt-2 models).
fixed the dns rebind protection for secure handling of ipv6 addresses
wip: what's new in 2.1
[estuary] remove support for script.extendedinfo
category choose one bug fix enhancement (new features, refinement) refactor add tests build / development environment documentation piking up from @mistercrunch work on #7716 this feature implements async computation of dashboards and charts, includes: rest api endpoint to fetch cached thumbnails or trigger async computation cli utilities to compute thumbnails using a config user (defaults to admin).
comprehensively test supported/unsupported field type:aggs combinations
fix syntax and lexical errors in es6 const declare
allow override for old creality boards
enh adds pandas sparse support for check_array
this includes various test fixes, and switches wasm from using js versions of compiler-rt routines to just compiling them with the rest of compiler-rt.
skip categorical take tests
this affects gatsbyplugin atm as it requires a npmpackage to be installed.
send some more data with the cursor-changed event
add box tests
this patch includes changes to the unit testing framework that check and report any time a unit test leaks data in any of the jquery globals.
this pr ensures that the results are displayed along with the warning when enhanced mode is disabled.
when testing, i also found children clipping issue when outer border is present, so fix that too.
this is what makes it possible for apps to schedule jobs within the "initialization" phase, without the need for user input.
also adds plasma store debug dumps once capacity is reached.
fixed convexpolyhedron constructor - faces is a number[][]
1.1.0b2 causes envcommanderror (non-posix paths with file:// protocol on windows)
the pi's gpu only used to support advanced deinterlace for sd video.
packaging: bump go.d.plugin version to v0.22.0
http client move buffer (1460 byte) from stack to heap.
rest apis vs. http apis
fix debug messages
emit information to ipc processes about routes, redirects, rewrites, and headers
mysql ddlstatement visitor
in several places in main.cpp, synchronized data structures are accessed without cs_main being held.
add @dhis2/ui-constants package
fixed issue with focus when right-clicking result
this pr fixes the use of cursorpoller in stream so that it's updated with the current active filters.
make dogm use the real screen resolution for touch and drawing, instead of fixed 320x240 coordinate space.
from #5704.
add timeout/fallback to tree traversal
[hal][lpc176x] pull out framework into separate repository
added via support.
changes: subtract crashed and abnormal from errored session count added test
fixes #11441, continues and closes #14463 add comments to clarify spectral clustering algorithm as asked by @gaelvaroquaux.
add annotations to traefik dashboard's service
add locked wallet assertion
an initial implementation of gatsby functions.
add error explanations for e0040, e0087, e0378, e0379, e0394.
this is a naive implementation of what has been working for us internally.
match header to inbox header, fix mobile styles.
description: update the domain and service name for epson.select_cmode.
libdebug now supports walking the chain of dw_tag_inlined_subroutine entries in dwarf to get the list of source positions in the inline chain for a given address in the program.
the internal nfacct plugin: is now synced with the current development of netdata can collect connection tracker metrics too; fixes #161 the plugin still requires netdata to be running as root.
changed makefile and forced mac os x using either gcc-5 or clang-omp, since the -lopenmp flag fails the default xcode compiler and causes confusions when linking.
context we need to support multiple pages and layouts in the app.
tidy: adjust feature gating path
test asserting checkout should not recreate deleted files
fixes #12336 part 3. add datasourcepreparer and environmentchecker for opengauss implement opengaussdatasourcepreparer close un-used data sources part of unit test
with this pr, when comparing two object types we first check that the source type contains all properties required by the target type.
fix compile error with lvgl define and without use_berry defined
test plan correct typeof document.all error
adds contributing to flutter artcile link
adds another field ("request.method") to the structured logfile audit.
this is a continuation of pr #13362 started by @ptrendx titled "add nhwc layout support to pooling (cudnn only)".
fix bug in gcs copy operation
addresses issue #1174
templates: add an emlai template for announcing security fix of main branch
fixes eos_logging idempotency issue when trying to set both logging destination and facility.
changes for parity with 2.0.x
more strict aliasing
closes #57554, closes #43459 this is my first contribution to the open source world!
require airbnb style guide (without react)
add t5 model to transformers-cli convert
this pr does the following changes: the default model class to benchmark is the one that can be found under config.architectures improve plotting file
summary we can now test the sequence api on python3.
add drag length parameter to draggablescrollablesheet
description: we need a way to run the deprecated field check on the routeconfiguration.
add or edit tests to reflect the change.
audit uses of apply_mark in built-in macros
update vulkan loader and headers to sdk-1.2.131.2
this pr stringify the secretsmanager response to mirror ssm behaviour when getting a parameter that references a secret.
use correct coverage report path to upload to codecov
related ticket: #1208 this pull request adds support for max_retries as an argument to requests.request.
react-redux-toastr: add union types for known strings
there is lots of code in core.internals inside try/except blocks, in particular calls to _try_coerce_args.
release notes: config_dump handler prints out secret discovery service information
not sure if we want to fix it like this, but i think this is a problem that we are going to keep having.
ak: print double numbers with printf
serbian language code update.
add or edit tests to reflect the change.
this pr addresses a long-standing issue where h2o uses the certificate on the disk when fetching ocsp response for stapling.
fix bug with count distinct expression
add or edit tests to reflect the change.
implement params for info + merge the options and params
adding type definition for
qualified version of requests to >2.3.0
adds a "sync" label to translation sync prs checks if any existing prs have that label before creating a new one.
the step pulse widths are longer than expected for the lpc1768, due & teensy35_36.
@rocketchat/core closes #9873 this pr allows to customize the message that will be displayed at the end of the conversation in livechat widget.
the updated scripts need new binding generators.
:label: add definition for constructor and method 'endpdf' with buffer
add comments to assert calls in codefixes
test config name validation
added new major version 192.3
demangle fserror stacks only in assertions, and not all the time; and only do the workaround for node.js 4 in legacy_vm_support, to avoid stack trace overhead
fix memory leaks on stream
improve code coverage about 1 percent.
expand the information security & quality assurance root article.
add initial support for left leds on an ergodox ez
initial support for named amd modules.
closes #12800 changing to streams will make it lighter on both client and server.
initial commit for adding support for amazon linux 2015.03
support word wrap in the diff editor
add api on adding recent documents add api for user tasks of jumplist set application dock menu add a guide on desktop environment integration fixes #746.
cmake: consolidate all options to the root of the project
this change makes rodeos be able to get the rabbits stream addresses for queues or exchanges from environment variables.
implementing the decayedadagrad optimizer step operator
default empty kb, initialize vocab separately
fix(model): add space to es tag_map.
create icons golden test
[java] [feature] load from savedmodel
tldr: reduces the time it takes to get from flutter run to an interactive debugging session.
this pr will add flexibility and allow more configuration for nextcloud deployments: allow to put extra php configs put all default configuration if custom configurations are set for this particular case, if one extra config is set, the rsync exclude will prevent the first copy of all default configurations files.
fixed: wc/ww were inverted, back to rgbcw
modify travis-ci: use python 3.6.5 instead of the latest python 3.8. it seems that travis-ci is failing (mac with python3) in recent prs.
fixes color range when dxva processor is used for rendering.
basic fixes for win32 builds
the latter asks the translog for the oldest file generation that is required to recover from the local checkpoint + 1 the local checkpoint on old indices is -1 (until something is indexed) and the translog is asked to recover from position 0. that excludes any operations the translog that do not have a seq no assigned, causing the fullclusterrestart bwc tests to fail.
want: more dir api for system
i've fixed a few minor errors in the windows and wsl building documentation; specifically an incorrect link title (windows.md), an unclear article title (windowssubsystemforlinux.md) and an outdated link to msdn (windowssubsystemforlinux.md).
remove connection listener from transport
refactor: use f-strings instead of str format
merge #33050
fixes #8978 during testing of docker with device mapper backend, i often noticed bunch of warnings on console and often thought that if something is wrong with my docker setup.
renamed the folders and projects as per powerrename.
deprecate excepthook and cleanup all _taichi_skip_traceback.
this pr takes care of correcting a series of crashes and incorrections on async gpu & vulkan.
correct order of text field semantics
use parser.seenval for cases where a value is required.
sometimes when publishing a chord with a large header a race condition occurs when the group result isn't saved before one of the tasks of the header completes.
implement nth_back for box
dynamic casts to anyobject should succeed for an arbitrary source
it also adds the overarching class that will be used to contain the sqlite index for the consumers above.
install libs and headers
add chayns typings version 0.14.0
this adds the feature #8852 requested
this pr adds unit tests for the top-level develop state machine.
chore: use base::environment in moveitemtotrash() linux impl
[test] disable -print-stats tests for no-asserts builds.
fix multiple values for keyword argument error in modelaverageoptimizer and elasticaverageoptimz.
highgui module: implemented qt and gtk mouse wheel callback support in linux
pr to fix #1776 added test_start and test_stop events to the base runner class' start() and stop() method, respectively added/updated relevant tests and documentation.
use intra-doc links for ordering::*
some minor followups for that pr: add module integration code in shell.js, to avoid writing the js in emcc.py (which is at its maximum size this early in the compilation process, possibly hundreds of mb) just to add it, which is a little slower (a few %).
fix #2923
remove useless initilization for tw and th code
closes #31507 tests added / passed passes black pandas passes git diff upstream/master -u -- "*.py" | flake8 --diff whatsnew entry
deletes direct message subscription for users conversing with user being deleted.
instead of compiling esm syntax in node_modules using compiler plugins,
fix issue#612: too many connection of zookeeper datasource
update ce_bgp_neighbor_af to fix bugs (#60937)
make sure the global asyncio event loop policy isn't changed.
try to implement keyboard shortcuts in the browse folder dialog by importing wine code jira issue: core-14332 import the wine commit which implement the shortcuts - import shellfolder.h to have isfhelper definition (that maybe let us get rid of some #ifdef reactos) now at least renaming via f2 key works, but not delete via del key get del also working (help or tips appreciated)
kafka-10407: have kafkalog4jappender batch.size and linger.ms
unify the terms and interface used for logging in to 1password  between the facts module and lookup plugins.
change interface to use opaque config only
fixes #5668 for the entity linker training example, according to the first comment by @adrianeboyd .
upgrade to vs2017 project format.
misc cleanup and formatting
basic support for shipping code with working_dir and py_modules
[diagnostics] refactor missing optional unwrap diagnostic
all css in 1 file
remove unnecessary crate_name parameter to after_krate
delete typography.js which shouldn't be in the styled-components example
blog: start working on gatsby-perf blog post
fix rss icon too large in rss settings dialog
flags certain test cases in scheduler using package:test tags in order to facilitate landing support for running all framework tests in a browser.
docs: fix raw link to #ddddd
debuginfo: add test case for destructured for-loop variable.
fixes r2d2 (torch) multi-gpu issues with lstm and attention nets.
add postgresql database engine
adds a field to docs frontmatter to link to an issue on github if this field is present it will generate a link to the issue on github updates documentation on removing the link to issue when a stub is converted to a doc closes #11342 not sure the style of the link is the best way to display this.
add using circleci env var for max workers
adding in triage needed by default what is include in the pr: the templates with the tag we merge in and check.
commit 1 fixes "error c2678: binary '!=': no operator found which takes a left-hand operand of type 'serialized' (or there is no acceptable conversion)" there is an acceptable conversion, msvc!
added wpsemantix to list of companies using apache superset in readme.md file
upgrade to new docker image 0.1.30
quorum inserts 2
add apache drill provider.
implement shortcuts=0 url param to disable keyboard shortcuts
this pr fixes three small issues: iprofilingblockinputstream checked limits after reading a block (which would be committed, but not used) limits were applied on the unionblockinputstream instead of kafka streams, which could cause an extra block to be read storagekafka: make commit message only if messages are consumed (this is not an issue, but optimization) refs #1690
per @oliviertassinari's suggestion at codesandbox/codesandbox-client#2284 (comment), i've added post-updates to each of the container sandbox example package.json files so they run on codesandbox without issue.
use arch when caching dependencies on circle
chromium introduced metrics to measure unload performance in:  which would cause some dchecks to assert in electron in some cases: #27717. and it would result in failing tests, because it caused the main process to crash: crashreporter module should send minidump when sandboxed renderer crashes api-crash-reporter-spec.ts 643 ms error message: ptype: expected 'browser' to equal 'renderer' error stack trace: assertionerror: ptype: expected 'browser' to equal 'renderer' at checkcrash (electron\spec-main\api-crash-reporter-spec.ts:39:35) at context.<anonymous> (electron\spec-main\api-crash-reporter-spec.ts:154:7) at runmicrotasks (<anonymous>) at processticksandrejections (internal/process/task_queues.js:93:5) this patch temporarily disables the metrics so we can have green ci, before finding out a real fix.
update dockerfile to slim down created image and tweak behaviors.
pass bounds in clicked event of tray
rustdoc- show defaults on const generics
issues-4006 try fix bad integration test
this pr tweaks our inference logic to only check type parameter constraints in the final phase of type argument inference (and specifically not in the phase where contextually sensitive arguments are excluded).
bug: avoid namedtemporaryfile for large file test
fixing move todo
introduces a new superset update_api_docs cli command to regenerate docs/src/resources/openapi.json based on the current openapi spec for the /api/v1 namespace.
i'd like to expose ports commonly used by etcd in the etcd docker image.
itself which simplifies down to condition expression it needed.
fixes #5644 add postgres to optional reqs add postgres fields mapping tests add importable hstorefield ensure hstorefield accepts null values by default
removing stl headers from the filamesh reader.
now it looks something like this: in redmond 2000: i thin'k now it looks pretty neat :) closes #1987
cherry-pick of xds interop tests: make header/path matching fail properly failover test based on lrs regex path matching test more header matcher tests present/range/regex increase path and header matching timeout case insensitive path matching
fixes #17239 code is well-documented: to the best of my knowledge, examples are either not affected by this change, or have been fixed to be compatible with this change modified:   cmake/modules/findnccl.cmake tested with following command cmake -gninja -duse_cuda=on -dcmake_cuda_compiler_launcher=ccache -dcmake_c_compiler_launcher=ccache -dcmake_cxx_compiler_launcher=ccache -dcmake_build_type=release -duse_cudnn=on -duse_nccl=on .. without this branch, it failed with nccl not found could not find nccl (missing: nccl_include_dirs nccl_libraries) cmake warning at cmakelists.txt:636 (message): could not find nccl libraries with this pr, it passes.
fixing some issues found by using @mui/styled-engine-sc directly in the @mui/system.
win_find - refactor for performance improvements and alignment to find
summary see #11665 in this pr, batch_dot uses tf.matmul to avoid memory allocation that happens when doing an elem-wise multiplication, if enough shape information is available.
update to go 1.12.6
adds the feature requested in #10440 ability to fetch a menu items by passing in menuitems and an id.
this results in a cause memory leak see #10351 i re-customized a deleteonexithook hook.
added programs for displaying adjacency matrix and adjacency list for a graph whose inputs we get from user in python
fix(client): remove annoying redirect on report user page
i implemented m300 before i realized it was already done, oops!
this closes probtorch#87.
#19800 (comment) - i investigated the performance issues with test_basic_3.py::test_worker_startup_count.
add a new props :"proc.pm2_env.restart_task" to solve the problem : "process still restart after it be stop or delete."
we produced a new split keyboard.
smart open is stateless, so we should pass the session directly.
now contain additional package name metadata for use in the notifications package.
this removes a bunch of dead code from sentry.utils.javascript that i encountered when i was researching where we are going to need to support environment parameters for tsdb, and the code that was only used by code that was deleted (and so on.)
add info.json for qmk configurator support
allow variables in service.call_from_config
you can already implement this today with a stateful callable class, but it can be more intuitive to write a function instead.
i am changing how escape keys works in listwidget.
description: some fixes to huawei lte device tracker.
add missing types
added tabbar button for listing files uploaded to room.
only pass anonymous volumes.
related #7159
remove simplejson.
with lldb-python (which is the correct python version run with
#6231 use more ci information from gitlab
add script for creating source archives.
before this change, pressing enter in firefox 55 would insert a line break into the description field and then save it.
fix max parallel stream for joined pipeline
generate all token related files from grammar/tokens.
add c# stress test client
supress wandb images size mismatch warning
"m309 p37.04 i1.04 d655.17") and also expands m303 to support auto-tuning pid for an index of -2 to accommodate the chamber heater_id (e.g.
quick fix to change this nightly test to install pip packages using pre-release.
reorganized includes to improve compile time (pr#4076 for reference)
google calendar - all-day events block scheduled events that day from being displayed
use the new urllib3 stream generator.
maximum 25 channels can be displayed in the teams' channels list
the currentcolor identifier represents the current value of the
add fill_value example to df
ipv4interface and ipv6interface did not has netmask and hostmask attributes when its argument is bytes or int.
wip if there are other parts of the api that break please respond to this issue with the package and the api it relies on.
ci: lgplv2+ify dependapot config and codeql action
#65882: add script to verify generated files #65986: verify-generated-files: ensure git tree is clean #65985: re-add pkg/generated/bindata.go #66076: don't delete pkg/generated/bindata.go in make clean re-adds pkg/generated/bindata.go to the repository to allow some parts of k8s.io/kubernetes to be go-vendorable.
add knob for tuning idle timeout
this fixes 2 crashes on windows.
we've been slowly improving batch support in clusterservice so service won't need to implement this tricky logic themselves.
fix a bunch of things on et_rel elf: when a section symbol is found, get the name of the section, instead of just print empty stuff like readelf does do not print warning messages (e.g.
add stringnormalizer
fixes #1093 allow function wrapping methods like ensureasync, that internally use initialparams, to have a context bound to the function they have wrapped.
add keyvalue model for storing id-value pairs
bump dart sdk to 1.22.0-dev.5.0.
add return type to editor.withoutsaving and editor.withoutmerging per
update overlay itself instead of text editor when resize occurs
#18077 - reuse c-api int8 unit test application #18111 - unify fp32 vs. int8 comparison tests output
ensure typeck_tables_of from typck_item_bodies
[test] use dom events instead of synthetic, partial events
today clusterbootstrapservice.initial_master_node_count_setting setting is used to bootstrap clusters in tests.
types for the datatables.net scroller extension
add optional executor for event processing
add pkg_mgr fact to setup
add blank slides
fix itensor virtual functions for 5.1.2+
add toast presenter
this pr improves type inference for multiple object literals occurring in the same context.
this pr removes 1,352 lines of code from c and reimplements them as ~400 lines of ruby.
safari: lazy component@ div suspense babelclasswithfields@ babelclass@ frozenclass@ nativeclass suspenselist custom name@ errorboundary example@ note: safari doesn't give us a line number for native classes without an explicit constructor.
bump version to 6.0.1
make symbol info only store symbol occurrence offset, not start/end offset.
this removes most uses of fgets() from our codebase, replacing them with read_line(), which is a lot more careful with overly long lines.
netdata-installer.sh: improve message about updater installation packaging/installer/functions.sh: get_crondir fails if crondir is not found packaging/installer/functions.sh: mark get_crondir and check_crondir_permissions functions as private component name netdata-installer.sh some follow-up corrections to netdata-installer.sh based on review comments in #7060
release: flipping deprecated features to be fatal-by-default
upgrade pytest and friends to good versions, consolidate configuration into pyproject.toml
leaving the pad or the invalid_entry aba_ctr uninitialized causes valgrind to complain since part of the atm read is still uninitialized.
issue: #10799 update mdx compiler to support .bind() idiom (split into #11198) addon-controls examples for angular, ember, html, svelte, vue, web-components minor cleanup see updated snapshots
to fix ios static route ci failure (#56292)
commit message:add transport failure reason to body additional description: adds transport failure reason to response body .
fix wrong task eta when using timezone setting
small fixes in the readme conform to the current version of the boilerplate.
init commit of ldap user role / group synchronization
ignore xfail_checks in check_estimator
this is a followup for #6206 as @jarfa is afk for 2 weeks.
all composite key construction and destruction working.
fix rare deadlock on shutdown of backgroundschedulepool
as mentioned in the bpo, there are some instances where notimplemented is used when notimplementederror was meant to be.
collects latency & count measurements on get and list operations to gce cloud.
new valid option for cookie in @types/client-sessiosn
#927 - fixes this issue.
first dirty implementation of limit by clause [#metr-23881]
we're skipping build script checks for these libraries temporarily until we make a decision on dart:io support on the web.
commit message: adds guidance on envoy_bug per #14190 risk level: low docs changes: updates to style.md part of #14190 todos (part of issue): add macro for internal class invariants
@rocketchat/core should close #6902 and #7412 i say should because i have not been able to deploy this remotely and have only tested the rc fixes locally.
some points in this pr: (1) shorten the length of jobid to 4 bytes.
add additional type defs for rsvp
support for multiple types of dependency with the same specifier in the same file
update qubole_hook filter do not remove pool as an arg for qubole operator
a layout with split left shift, vim arrow keys & iso setup.
this is a cherry-picks of stack of 2 prs: #52349 and #52350 into release/1.8 branch fixed how type casting is handled in mixed precision onnx export.
[irgen][backdeploy] fix infinite recursion in metadata queries
if we set trainer.config["horizon"] to e.g.
this pull request is in support of wtu.
adding icc to actions
these changes: add support to identify a number of audio stream types via the descriptor tag in mpegts modify (fix?)
fix issue with yoga layout in x64 release
tutorial example code lacking context
feature request: background image alignment
rtl8192cu: let it support to build in the non-src folder
add support for 'long long' and 'unsigned long long' types
ports #20735 and #21651 to release-2.7 //
fix like function
make tls available for rabbitmq
[flink-24034] upgrade commons-compress to 1.21
adds the logic for handling joins by a prospective leader.
pipenv uninstall --all returns error when there is no installed packages in virtuanlenv
update source-map-support to include type definition for resetretrievehandlers
added retry logic in test_ray_options
the parser now inherits from pipe!
follow-up pr to #54124. changes the name of one of the return values of docker_host_info from host_facts to host_info.
keyversionregistry registry for managing the available key version implementations.
json-rpc: make logging of incoming requests optional
refactor grpc server
added test case #4 test to verify security group forked networks.
this renames methods on workspaceview that return paneviews.
this utils.tex_file_writing.get_null() was added in #47 . it was unnecessary as os.devnull does the exact same thing for nt and posix.
stop module from running net on empty commands.
add asp.net core perf diagnostic tools list
updates recent changes to my keymaps and userspace in qmk's repo.
javascript 0.82.0 now tokenizes the $ in  $something as an instance constructor and also fixes tokenization when destructuring in const assignments (const [first, second, ...rest] = array);) python 0.38.0 correctly tokenizes self.something now go 0.31.0 adds the fmt printf snippet for debugging
efr32 firmware for zigbeebridge
rename files to allow rpm build
the unit tests fail now - the library stores keys in
make custom select and file inputs 100% wide
bug fixes apis fix the bug of div operation result using scale method do not exactly equal the result of elementwise_div method.
replaces the deprecated reacttype with elementtype in react-test-renderer ref -  add or edit tests to reflect the change.
test: check for decodescript rpc 'type' results
provide a url to documentation or source code which provides context for the suggested changes: <> increase the version number in the header if appropriate.
configure.py: fix --disable-option-checking
fix a crash when the filter chain only update listener update is superseded by the listener removal or full listener update.
allow client to modify routes
treat cross-crate unboxed closure def ids consistently
revert "leave all our tests as order_dependent!
the paddings on the outer edges of dialog content (not between content) should be smaller for larger text scale size.
add demonstration of distinct counters using hyperloglog in tsdb.
feat: add 'replay' option to the playtoggle component
i'd like to see the component description from __docgeninfo in the story documentation in the info plugin.
see discussion in #25007, and particularly #25007 (comment) this changes the parameter value of true to none (without any change in behaviour), so we keep the possibility open to have sort=true to mean "always sorting" in the future.
this pr is first step into better support for polish language.
[addons] auto-disable broken addons after update
the problem is that currently to load a model using from_pretrained requires 2x model size on cpu memory and for those odd cases where a user has large gpu memory, but very little cpu memory it's a problem.
get_pandas_df() fails when it tries to read an empty table
fix link to security.md in contributing.md
i've absolutely no idea why i wrote the code that way originally, since the nested ifs are not really helping readability one bit.
description: this pr adds functionality for locks expressed through the smartthings platform.
added arcface face recognition model to example list added arcface, mobilenet, resnet, squeezenet, vgg models to onnx api page please feel free to remove inapplicable items for your pr.
pass config file path to applicationdelegate call
general: align js docs and ts signature files
kernel: detect some outgoing tcp connection failures
case 1. add a new type definition.
implement function retrieval python apis on existing abis add documentation generation scripts for functions minor fixes on dependencies and configurations in cmake files
adding job process pojos to protocol pkg (#32657)
add or edit tests to reflect the change.
adds and enhances tests for the dashboard filterbar (nativefilters.)
avoid calling _encode_check_unknown twive
@matthiasplappert this pull request is a follow up to #1299 here we added -v1 environments: handmanipulate{block, egg, pen}touchsensors-v1 use original sensordata readings (mujoco); handmanipulate{block, egg, pen}touchsensors-v0 use boolean readings; and we also improved gym/envs/robotics/hand/manipulate_touch_sensors.py
c# how to mock generated client base?
read name from app.json
use resizeobserver when available for better and more performant resizing information, otherwise, fall back to a throttled resize event on an iframe that's the size of the player.
chore(sudoku): added type hints [hacktober-fest]
remove host cache uses in syntactic features
sorted the grad by dtype
i have followed (at least) the pr section of the contributing guide.
silence all the remaining warnings in video_core generated by gcc 10.2.0. enforce -warray-bounds and -wmissing-field-initializers.
fix bug from #23515.
enhance fused_elementwise_activation op.
fix(tilelayerwms): get rid of l.tilelayer global call
migrate to container based infrastructure
use gcsclient instead of redisgcsclient in ray.
update semantics tests
the idea is to enqueue mini-tasks (so-called oneshots) for the stuff that should be done on a signal.
backport of #10193. fix a couple of bugs found by testing in release mode, closes #10185. bug: fix numpy.testing.assert_equal in release mode.
this pr ensures that handlers have the correct parent.
allow zha device creation for coordinator
update llvm: apply patches for pc-relative addressing on 64-bit risc-v
add tests for custom modalroute.barriertween
this pr updates deno doc so default exports are handled.
add .type(func) to assertion
fixes #395 this is a natural continuation of pr #446 this allows masking of the cost function for sequence to sequence learning with different lengths.
feat(cli/standalone): initialise runtime_compiler ops for cli standalone
the pull request is done against the latest dev branch only one feature/fix was added per pr.
improve superset list view page layout
with #8548 we introduced the notion of "type guards as assertions".
add mysql link to the index
cache-dictionary flap
added documentation to key bindings.
it was reported to me by mwb that on the soldered pcb, both the backspace and left shift keys were not correct on the layout_65_ansi layout.
several changes in react native 0.28 and 0.29 are not reflected in the current definition.
evolving array element ignores contextual type
update generatenm2.ts to create constant spec for turbo modules move react_constant and react_constant_provider to react_get_constants appstatemodule i18nmanagermodule deviceinfomodule microsoft reviewers: open in codeflow
third, do the mapping between the two graphs.
old version isn't compiled with cuda 5.5
pin git python
this pr has been revised to update the docstring and introduce a futurewarning to power_transform().
this pull request provides two fixes: prevents cmake from not allowing to create debs due to treating rbpi differently to linux.
this did not just work because we build libsdl2_mixer_ogg etc., with a suffix for the codecs we build in.
add error message when there are conflicting star exports (fixes #7562) use tracked reexport target for sideeffectsplugin improves handled cases regarding dynamic modules display reexport target in module info header (output.pathinfo) refactoring, bugfix, feature yes no optimization.sideeffects depends on optimization.providedexports
add or edit tests to reflect the change.
wip: get an api listener at all costs
switches rustup to using the beta channel by default.
this pr: adds support for running an rllib policy server with n listen ports (n workers) accepting one or more client connections.
this pr expands upon this concept by inferring un-annotated iife parameter with missing arguments as optional.
it also allows us to reuse this first-supported-api-name logic for any node api in the future if framework adds new node api's.
reworker predict method of sklearn wrapper
this pr fix managing of ownstate in explore page before chart was saved includes db migration (follow approval process in sip-59)
fix gcs client subscribe
bias tensor reorder overhead in int8 inference is significant, especially for low latency models (i.e.
no empty quotes value for clusterip
i saw that in the java version there was the factorial algorithm, so, i thought that it would be nice to have the same but this time made with c. and i also made a fibonacci algorithm that asks for a number and than it tells which number is in the n position according to the fibonacci sequence.
description: fixes and error where devices exposed to emulated hue without a friendly name attribute set would cause emulated hue to fail.
enh adds support for handle_unknown=ignore and drop
this issue was partially mitigated by commit bfc26ac, but that commit did not bump the version of xmldom used by @react-native-windows/cli.
this is reduced version of #5694. only obvious fixes.
[sema] adding deprecation warning for protocol inheritance class keyword syntax
#102306: return unschedulableandunresolvable instead of error when #102465: return unschedulableandunresolvable when looking up part of #102305 for details on the cherry pick process, see the cherry pick requests page.
kafka-12791: fix concurrentmodificationexception in abstractconfig
bpo-30721 added a "did you mean ...?"
this is an initial stab at splitting the autoscaler public/private interface.
related issue: #10331 #15850 #17158 #17586 #17958 #20997 adreno drivers do not handle gl_frontfacing properly so we need a workaround.
(i'm finally following up on #11090, noticed that we do not do libcryptsetup debug logging correctly)
this pr: adds a merge migration.
send the tls alert on handshake errors
to help this integration, we added a function in syntaxparsingcontext to explicitly finalize the creation of a sourcefilesyntax to incorporate the fact that sourcekit needs the tree before its destroying the parser instance.
userrolemapper.userdata is constructed by each realm and it is used to "match" role mapping expressions that eventually supply the role names of the principal.
as requested, adding in the parameters required to claim a node immediately after installation as part of using kickstart.sh or kickstart-static64.sh or calling netdata-install.sh manually.
add empty targets
add activerecord::abstractadapter#extensions and activerecord::connectionadapters::postgresqladapter#extensions to allow dumping of enabled extensions to schema.rb, add activerecord::schemadumper#extensions to dump extensions to schema.rb
options.c: fix unintentional switch fallthrough
add deep partial
fix travis deployment condition condition: $multiplatform_jars = 1 || $mac_jars = 1 and bring back java dist commit.
remove redundant speed settings (mcu & flash) from platformio
npm: add aliases for search and info
following the steps in the guide, errors will occur running the workflow due to these syntax problems.
eosio builds are now stuck anywhere that we are hitting docker hub for manifest queries or pulls.
new module pull request network/aos/aos_device ansible version ansible 2.3.0 (aos_device_clean de9d90c9e6) last updated 2017/02/10 15:59:02 (gmt -700) config file = configured module search path = default w/o overrides i'm working for apstra, we are making a product to automate datacenter networks and we are developed a dozen of ansible modules and one dynamic inventory to control our product with ansible.
first commit fix log and gui strings.
updated expiration date of project certificates
cleaned up userspace and keymaps
stream_info: build replacement map once
replace comments regarding deprecation with attributes
pr #5321 fix
this pr improves nuxt ts support by adding a build option useforktschecker that enable type checking thanks to fork-ts-checker-webpack-plugin.
add definition for with clause
add public api for internal ignores
a typing file for google sign-in api:
put<t> method was inside #if unsafe_bytebuffer which caused compilation failure when building in unsafe mode
add magic method abs to ndarray
move 'disallowin' into being an ambient parser context flag.
material bottom sheet reveal/dismiss animation should use a curved animation
updated info.json
this pr changes (delete as applicable) nothing, it's a bug fix because the tilemaplayer position is not accounted for in the tilemap collision check, collision fails as it expects the tilemaplayer to have a default position of 0,0 with regards to fixedtocamera being set to false.
handle daikin ac devices without fan_mode and swing_mode support
[se-0134] rename utf8-related properties on string
updating type definitions for where, findwhere, shuffle, and sample and adding tests.
enh : adding support to parse unsigned long long from json (#26068)
related issue = #2590, #2637 one of the remaining issues in #2637 is that grouped loop indices of struct fors are exposed to users as ti.vector however they are (naturally) implemented as individual variables, therefore dynamic indexing cannot work here.
some options need backend to support specific extension, like: default_fp=ti.f64 and ti.extension.data64 dynamic_index=true and ti.extension.dynamic_index currently, the former one is implemented outside @ti.test() and the latter one is implemented inside @ti.test().
fixes rdar://72999296.
some workaround to reduce the chance assert failed.
rdar://44109268
add or edit tests to reflect the change.
for details see commits.
i have added a backspace and delete with mod macro as well as change the bottom row to make the layout more familiar and usable by all
address some of #15880 add from_estimator and from_predictions method and deprecate the plot_roc_curve.
fixes #19238 relates #16561 cvmat with different dimensions were copied to outputarray _circles.
[win32] directx: fix switching display mode in true fullscreen in case when os silently bring app out of full screen
added test with multiple subscribers
cleanup mechmini keymap.
this sequence of relatively small commits dramatically improves the memory management in epiloguearcanalysis and on certain projects reduces compile time spent in the swift optimizer 36%.
i'm headed out of town, so i figured i'd go ahead and get some eyes on this and let some people start playing with it.
the previous ner feature set was: current word next word previous word first word of the current entity word before first word of the current entity word after first word of the current entity this pr adds a feature set that seems to perform a bit better, while using fewer tokens: current word first word of current entity, if it exists last word of current entity, if it exists this is less redundant, and runs faster.
added spec for dremio
homing phase.
fix(markdown-it): fix helper parselinklabel argument state type
parse: stricter types for parse.object attributes
we do two things here: validate that arbitrary properties result in actual parsable css declarations ignore malformed css properties (for example beginning with a number) this prevents generation of classes for things like [0:02] or [autoplay:${autoplay}] which result in invalid css.
policy.compute_single_actions is broken for nested (e.g.
added check for hash_len after calls to hlfmt_hash ()
[regression] test level 19 with uncompressed literals
first cut at app factory
format the pull request title like [issue #123] fix unknownexception when host config not exist.
refactor spring boot starter for encrypt
in order to better maintain the ansible files, i propose to identify these files.
qoi: provide a fix-it for repeated identifiers in function declarations
fix remove ttl for column
optimize textlayerrendertask._layouttext to avoid intermediate string creation
update to mean shit clustering narrative documentation.
add support for selectkey and generated keys in update statements
added more devices and sensor types.
omit writing index metadata for closed indices on data-only node
a bit of organizing/simplifying/fattening the models
add layout_60_ansi to xd60 rename layout_all to layout_all fix bug in krusli's keymap put 60_ansi in rules.mk so i can generate my default keymap for it.
updated raygun4js definition to match version 2.4.2
adds a conditional protocol extension that defines mutablecollection.mutablecollection.subscript(bounds: range<_>) -> slice<self> only when subsequence == slice<self>.
switch to using client from twilio.rest rather than the deleted twiliorestclient
the purpose is to remove the annoying full mkl dependency when set blas=mkl.
provide archetypes for testcase
update the backend to add an array of project level threshold and metric to the user misery.
these are related typing fixes for #20322, separated to be more easily reviewed and hopefully merged quickly.
softmax test failed because recently some tests uses 3d tensors as input.
tst fixes warnings for scipy 1.3.0
closes #31575 tests added / passed passes black pandas passes git diff upstream/master -u -- "*.py" | flake8 --diff whatsnew entry
addresses @zhengbli's concern in #4978 (comment).
this will allow us to run the conpty tests in ci.
updates sortby, indexby, countby, and invoke to use collection and iteratee to partially fix #20623. updates invoke return types from any and t to any[].
the original qmk codebase for the sentraq s65-x actually supported both the s65-x and the s65-plus.
add niu mini keymap from planck keymap
maint: use valueerror for duplicate field names in lookup
transform mouse events to the local coordinate system
fix for no documents found - make results optional
metadata.clone() fails also for situations where we still can recover metadata
this pr: lets you do python runner.py --help moves some potentially printing code into if __name__ == '__main__' prints help text as soon as possible, so some warnings will come after it lets you run tests from multiple suites on the same command line (e.g.
add or edit tests to reflect the change.
this brings pr #16228 up to date, adds tests and fixes some issues with it.
currently gelu, sigmoid and tanh are supported.
openvpn plugin: process also incoming ipv6 connections
[videodatabase] path hash is not invalidated when removing movie from library
update windows build instructions
there's a lot of work being done on the wp source plugin but a lot of visitors to the site are requesting information on woocommerce specifically.
this affects: hashcode/equals: hashcode and equality should only consider set bits.
ray currently fails to shutdown clusters with over 1000 nodes, because the aws instance termination api only accept a maximum of 1000 instances to terminate in a single request.
two optimizations: compress foo.bc in each rlib with flate.
follow-up to #32140
add jumptoitem() to list view.
ioc resolves classes with optional params and accepts arguments
find an error in line 47 of readme.md,the word 'tables' should be changed to 'table'
bug fixed for num_restart updating
this solves bug #10862.
this aids backporting to autoconf 2.59.
register automation.reload as an admin service.
base test docker image on python images
add leadership election example and configuration
update accepted material types to match documentation
modified the yiq to to an actual function
trying skip devices instead of return -1
taking over #12085. besides fixing the average path length for isolationforest this pr also improves the checks for the predicted number of outliers in the common tests.
update sample celery files and improve daemonizing with systemd doc
rename privacy feature tutorial filename :doc
fixes #3830. this adds a setting redis_backend_use_ssl, identical to broker_use_ssl, but used by the backend to determine whether it should use ssl.
additional examples to loading/creating, and plugin authoring overview pages
add doc.is_nered to indicate if entities have been set
iostream_debug_helpers: fixed build
fix grammar and punctuation a bit
cleaned up and adjusted #7601 add a new configuration to inhibit xyz movements if homing hasn't been done.
[x; len] syntax in vec docs
this pr fixes #86288 while commit 520c999 fixed problem with main search field types in "files to include/exclude" fields still produced a ton of new history entries.
add or edit tests to reflect the change.
hot fix because in some cases additionalproperties in the available_node_types schema breaks validation.
use git archive to produce kubernetes-src.tar.gz when possible
remove delegate methods from editorview
cleanup remove unused binddescription struct from youtube-api-wrappers.hpp remove unused members of channeldescription and streamdescription structs as well as related code fixes restore auth.reset() on service switch (fixes #5236) obsolete code makes us unhappy.
summary allow unrolling rnns with input_length=1.
the next timer was implicitly extended by the idle observers
this pull request handles part of the problem raised in issue #380. specifically, urls whose scheme is not http or https will throw valueerrors.
implement effect range
adds a few functions to mark and span that i found useful in an upcoming refactor of nll region error reporting.
changes to jison spec to allow underscores in entity names and entities with no relationships.
this pr addresses all the basic setup required to implement capturing child tasks.
signature help for tagged templates this pr enables signature help support in the language service for tagged template strings.
added the stiebel eltron wiki
update primary desktop data after virtual desktop switch
common: extract point into a common struct
pixelpaint: show a pixel grid when zoomed in enough
for #22821 the first approach we tried was #25325. this only logs the messages from allocation commands once the cluster state update has been acknowledged.
updated copyright to 2013
add accesstype to jest.spyon
deadlock in textlog
* add complex type for fill_constant_op xpu
guiwindowslideshow: fix signed vs. unsigned compiler warnings
don't include completion in opening tag, include name of opening in closing tag
performance optimization ops this pr optimize current implementations for sgd and sum operators for bf16 data type (mainly) when selectedrows (sparse) tensors were used by reusing onednn handler.
issue: follow up to #13775 i added support for vue 3 in addon-storyshots.
adds trim property for the slug package
add responsively to developer utilities
flutter driver - create widget finders from serialized finders extensions
miscellaneous cleanups for same-type requirements: use isderivedrequirement() consistently, which fixes an issue that showed up in printing, clean up printing via requirement signatures a little, associating self == self.a requirements with a when we can
add ipp support in resize, warpaffine, warpperspective functions
fixes #43493.
fix an out of bounds memory access.
change the timing of shuffling.
narrow string and number types in equality checks and switch cases
[serialization] simplify serialized representation of archetype types.
clickhouse-2: support negative tests
rebase global ordinals to lie in the range [0, (maxord-minord)].
added support for winapi_partition_tv_title which is defined on xboxone
this is re-submission of #20687 but removed test import related changes.
disable redirection for wow64 processes.
remove fatal if async send fails
use stable ship protocol for transaction_trace move eosio-tester type conversion to state_history library select one: select any that apply:
fix asan global buffer overflow in any_variable_requires_grad
i've been working on synthetickeyboardevent test and have gotten a significant amount of tests to pass but wanted to see if the community had feedback on my work so far and advice on how to complete the few remaining tests where i am stuck.
direct call tasks aren't spilled yet.
feat: a* search algorithm, type: ai/ml
initial mindsdb blog post content and image references.
currently, travis runs 12 build jobs: (linux | osx) * (gcc | clang) * (googletest | googlemock | googlemock-c++11) but the googlemock build includes googletest already, including all unit tests and samples of googletest, so a separate build of googletest doesn't provide additional knowledge.
restructure "section 1.12. multiclass and multilabel algorithms" to make distinctions between concepts clearer
however, it shares the common functionalities of structuring the ownership of connections with the tcp listener.
this changes the ref counting protocol to make sure that workers report any nested objectrefs that are still in scope.
get alias wildcard rest-api tests
this pull request adds additional documentation as requested by #7578. the documentation contains how to properly configure the dospagecount from the mod_evasive apache module for a virtual host.
added property types to the existing draweritems (was missing).
(i) one axis min max effect the other axis extent
in aws elasticache provides long server name (eg.
this accessibility prop is needed by some partners for the help of reading comments/replies.
add s3 acl publicread as default value fixes #475
move nodeimpl from interfaces/node.cpp to node/interfaces.cpp move chainimpl from interfaces/chain.cpp to node/interfaces.cpp move walletimpl from interfaces/wallet.cpp to wallet/interfaces.cpp no changes to any classes (can review with git diff --color-moved=dimmed_zebra) motivation for this change is to move node and wallet code to respective directories where it might fit in better than src/interfaces/, but also to remove all unnecessary code from src/interfaces/ to unblock #19160 review, which has been hung up partially because of code organization.
fix(vue-renderer): add vary header for server mode
fix a few small issues that could cause crashes with property wrappers: provide source locations for synthesized initializer calls (fixes rdar://problem/52969503 and rdar://problem/53183030) check for a null type before digging into an expression to find the type-checked "initial value" (fixes rdar://problem/53120878)
add v8 jsi executor support (disabled via use_v8 by default), with the requisite include directories, libraries, etc.
add documentation in doc-src explaining how to add a new content viewer view class to contentview.py.
continuation of #9642 add config option system_tables_lazy_load that, if set to false, loads system tables with logs at the server startup.
allow dynamic css values based on component props
add validator for javanese script (based on khmer).
docapi-7991: ru translation.
fixes argos running on empty screenshots.
[ci] run pdf thumbnail tests
ref(eventerror): stop interpolating error messages
add or edit tests to reflect the change.
update de language for illuminance for a "more" german word
jenkins-49044: descriptorvisibilityfilter extensions are now applied to securityrealm and authorizationstrategy.
git integration is disabled.
tested with visual studio 2015 community, without mkl, and python 3.5.0b4, 32 and 64 bit.
the tests assume that hashmap is iterated in a certain order, which can cause the tests to fail under different java versions or platforms.
pickle arbitrary objects to return from connection
added emi20 as a keyboard with the default firmware as it was previously not in the list of keyboards
add user timing marks to places where debugtracing logs.
convert vault_password_files to a list
i just extended the types of the arguments for the #registerpartial function, because per the implementation that function is polymorphic.
improve support of numericdictionary.
de-capitalize variables in etcd make the image pull policy as "ifnotpresent" use image.repository to replace image which issue this pr fixes (optional, in fixes #<issue number>(, fixes #<issue_number>, ...) format, will close that issue when pr gets merged): fixes #
widget cache mark 2
this sets up the public files route similar to how we set up the static files route and makes sure we handle the same special file names for the public folder that we did for the static folder closes: #10004 closes: #9706 closes: #9705
the removes images from the clojure package to help resolve license issues from #15542 please feel free to remove inapplicable items for your pr.
macros: fix bug in statement matchers
case 1. add a new type definition.
swift host libraries on android.
add typing files for react-portal
this prepares data to be abi stable.
updated the linear regression example documentation.
added test to demonstrate only owner being able to toggle members flag
docs: add docs for $lerna_root_path environment variable
change download_maxsize logger level from error to warning
the padding after the magic signature value should be 12 bytes rather than 28 bytes.
use kparsefullprecision to turn on this option in compile-time.
windows desktop supported version to 8.
fix(vi-mode): hide cursor-change logic behind vi_mode_set_cursor setting
the proposal is to offer an uncomplicated example of distributed load execution.
strip additional comments from /etc/default/passwd
a lot of vulnerabilities are found.
add database client and driver for azure cosmos db
health log is saved and loaded back
fix loki query operators
to make the explore code more maintainable, i will refactor some controls, so first i need to move some files to the sub-component.
fix junos terminal regex (#47096)
these changes should take care of the final 7 post-migration errors triggered by ansible-test sanity --test docs-build.
for custom baseindexer implementations.
this implements a better (more python-style) list.sort.
allow shrink in the hot phase
should fix #1439 (comment) - with automatic selection based on browser detection.
fixed the create() method, and added support to disableanonymousandlocalclassserialization
support this.prop = expr; assignments as declarations for es6 js classes
cblas to scipy cython_blas in linear_model/cd_fast
addressed issue that can arise when user has libtool installed multiple locations or runs into conflict with homebrew installing /usr/local/bin/glibtool.
qtree new parameters and modify action
this pr enables checking exclusivity violations for no escape closures.
type: fix description: when this.props.data.values is undefined, many functions are broken because they expect a defined thread.
docs changes: will change doc for fault filter
my solution about issue #5179 and i implemented part of todo about avoid forks in 'izz*' / 'izzq' / 'izzj'.
no whats new this is a 1.4.0 feature fix.
addition to #15537
expand button group description
this pr changes the configure.ac to require zmq version 4.x or newer, which is provided on debian and derivatives as package libzmq3-dev.
thus for a substring query search that is not field specific, we perform exact match searches across all fields, then substring search across all fields.
the hail mary should fail if there is no parent package (top level modules),
this pr changes how #[inline] functions are translated.
while the transform is running, it will be good to persist the running statistics to an index.
for now, force the clang-based actions to skip the end of the pipeline.
fixing skflow imports to use global import for tensorflow ops
add centering to scrollpane.scrollto; fix #2561
fixes #25987 as mentioned in-person with @mhegazy, since our goal with the index signature was to just squelch a class of errors in js, this accomplishes the same thing without the unfortunate side effect of mangling our inferences.
pass xamlview's through reactuwp view managers by const ref
update docs on reserved attributes
* [jsfm] freeze the prototype of build-in objects
this adds the direct3d v11 module for windows.
needs to applied to the docker environment after #236 is submitted, before the ruby docker images are rebuilt, so that the tests are run with the correct flags
this addresses #494. this diff includes multiple fixes and workarounds to make the current master build and pass tests on windows 7 & 10 without cuda.
closes #8508 i made more changes than absolutely necessary for documenting this.
this is quite a large change so any feedback is appreciated add or edit tests to reflect the change.
support amd require / es6 import
iterate through custom packages locations instead of assuming packages/* my project has custom packages locations and all needs canary publish.
[mrg] fix misleading doc in contibuting guidelines
added cab autocompletion to the cabal plugin.
ioctl, and gstreamer should be happy again (it
fixes #968
add config reload time stat
add noisy network
feature request: pressing `esc` on multiple cursors returns you to original cursor location.
add install.py
description: revert unnecessary changes to platforms during previous device registry pr.
report used minifier.
use postcss-selector-parser class escape handling
trailing slashes appends slashes to external links
closes #14759 this is my first pr here.
changes the vertical alignment of inputs and buttons to be middle rather than baseline, which allows for stable alignment across all browsers.
deadlock in textlog
add is_coerce arg to array_to_datetime_object
adds useslider hook and updates the sliderunstyled component's logic to be compatible with the other unstyled components.
restoring possibility of conditionally switching off the prefetch
@dt-bot follow the advice from the readme.
add or edit tests to reflect the change.
adding new options for nodemailer-mailgun-transport 1.4
respect mut in &mut str in astconv
librustc: don't ice on packed structs in statics.
removed blocking flag from serve.init().
as per title, this pr attempts to improve react's textnode update/patch performance by accessing the firstchild.nodevalue.
also, small typo fix.
add new algorithm in c for child process creation in linux operating system
added overloads for 'map' on tuple types.
change improve reliability of tasmotaserial at 115200 bauds and reduce iram usage for stage/pre-2.6
cln: sparseframe: change bare exceptions
fix(generator):  #1231 'generate container' produces unnecessary return
test: test .gitignore files restricting to their own subdirectories (#2603)
closes #67. yes i know i should keep cleanup separate from new features.
note performance aspects of using multiple accumulators
drag gesture recognizer now accepts all pointers when any pointer is accepted.
upgrade react-datepicker to v4 and popper v2
this should get our unit tests going again.
fix typo in average test
a backport of #11248 broke the 2.8 build due to usage of the embeddedkafkacluster#stop method, which used to be private.
insert instead of update for the benchmark status for file logger.
easier to get the testing framework to work for cloudabi crossbuilds, as
update pvs checksum
refactor: use gatsby-plugin-image only
see individual commits.
pass through an explicit proxy_ssh_user.
performance yes if relevant, link to documentation update: n/a summary sort parents, children, siblings in stats improve way of getting combinations of chunks no other information
updated active storage overview guide by sanitizing direct upload file name
ci: only run invasive tests during nightly runs
add zipkin receiver module
sql: count(distinct) column name has an extra distinct in it
remap caps lock to be escape
test_scheduler_reschedule depends on mock.patch() decorators around the .do_schedule() method in the parent process to mock dagbag objects in the child process.
build hyperkube image with bazel
bug fixes for permissions and reserved names
fix a minor bug in navigation-controller where a string is used as an object
avoid logging an object on compilation errors
resolves devrel-1575: fix broken references to eos repo docs (backport of pr #10570 #10571 to 2.1) select one: select any that apply:
update readme to link to previous versions
description: the states opening and closing was inverted for homekit covers which is fixed with this change.
configure segment with write key & integration management
added missing some enum values to predefined types (according to tabulator documentation/examples)
wrap popupmenu with safearea to respect status bar
upgrade gradle-wrapper (and gradle) to the latest version.
i'm proposing 3 different automations to manage our issues: close issues opened without using one of our pre-defined issue templates close stale issues labeled as stat: need more info after 2 weeks close stale issues without any comments after 67 days the stale issue handling are done via a github action called stale and the other one via close issue app.
leave *all* frozen modules uncommitted.
show iob from devicestatus when available
with-sentry-simple requires auth to upload sourcemaps via webpack plugin
add or edit tests to reflect the change.
added class pinilakantha.java
fix select_with_case_expression & enable db rule type
towards #16155 remove boston dataset in sklearn/ensemble/tests/test_gradient_boosting.py.
add --build_libchromiumcontent option
this change introduces a bottomsheettheme that allows you to theme color, elevation, and shape of bottomsheet.
don't use loader import at top level in next/document
case light no_brightness on pwm pin serial echo
title is self-explanatory.
when a tokenizer is being loaded with pretrainedtokenizer._from_pretrained, it should set added_tokens and all_special_tokens to unique_added_tokens_encoder.
the search functionality implemented within sqliteindex is minimal; only exact match on id is supported through the query parameter currently (also, everything can be retrieved by giving no query parameter).
check that ptr is valid already when doing deref, not only when doing the access
add a new addon database feature which can be used by addons to persist data with the storybook.
i implemented some h2o::request methods.
cherry pick of #100183 on release-1.21.
swedish locale
this refactors the remote module to use weakref instead of our bespoke weakref-like solution on the renderer side.
this pr implements a onrefresh action to let the native filters reload when the dashboard reloads.
updated slave encoder sync to reduce dropped pulses
more typing cleanups original failures: pandas/core/groupby/ops.py:13: error: module 'pandas._libs' has no attribute 'groupby' pandas/core/groupby/ops.py:13: error: module 'pandas._libs' has no attribute 'reduction' pandas/core/groupby/groupby.py:22: error: module 'pandas._libs' has no attribute 'groupby' pandas/core/groupby/groupby.py:329: error: need type annotation for '_apply_whitelist' pandas/core/groupby/generic.py:220: error: incompatible types in assignment (expression has type "callable[[arg(any, 'arg'), vararg(any), kwarg(any)], any]", base class "selectionmixin" defined the type as "callable[[arg(any, 'func'), vararg(any), kwarg(any)], any]")
mnt adds lint skipping to azure ci
added edit & delete commands to data source cli
this pr fixes two related bugs that happened after running retokenizer.split: the lemma information was not updated and was still referring to the old token.text attributes.
sema: allow omitting generic parameters when accessing member type with a fully-constrained 'where' clause
changes id and class names of svg image elements in challenge, to ensure their uniqueness for the image, and to stop interference from logo svg.
if false, this setting will prompt the user if they want to commit all files if none are staged
the english version is a pdf file, and make chinese version a md file which is easier to maintain later.
feat: split packageutilities into src/utils/*
ui remove search icon when in search mode
lcd_bed_leveling enables a sub-menu for abl
the environment is prepared by the main thread to guard against invalid locale settings.
bug report sr-8649 forum thread range conform to codable proposal amendment pr swift evolution pr #915
runtime: the class metadata relocation function can be null
add arabic version of the readme file
if not proxying 100-continue, swallow 100-continues.
fixes #1818 . add sql.simple to sharding config.
fix(ui): use gray300 for requestinterface's icon
this pull request pulls that shared code into a single function in common_shape_fns.cc.
add more tests for error boundaries
addresses #20308 this pr ensures histgradientboostingclassifier is compatible with numpydoc.
strsearcher does not behave correctly with empty strings as needle/haystack
fix ios_user issues (#44904)
editor output folder: modules\keyboardmanager\keyboardmanagereditor keyboardmanagereditorlibrary and keyboardmanagerenginelibrary output folder: modules\keyboardmanager what is include in the pr: rebuild projects and verify that files are in place.
update secret key path in deployment
the first commit allows us to run markdown in serial mode again (the remark plugin was not awaiting the cache plugins so it was not properly running in serial).
fixes #8337 #8431 this pr cleans up some of the health-related documentation, and adds references to the [health] section of netdata.conf, as requested by chris, and makes consistent how we reference the ip/fqdn of a user's node.
update vmware_guest.py
reland "make filteringtextinputformatter's filtering selection/composing region agnostic"
most important is the aml fix for the mode strings, that they changed in latest sdk (top-left corner thumb effect) @holzhaus can provide more info on the libamcodec.so patch.
this pr is the refactoring mentioned here: #29135 tbc the clients (amazonec2 and storage) were already built lazily (and cached and reused) for the afore mentioned plugins.
also, people want to disable hibernation if it does not work on their hardware.
updated installation guide
description: the set_config_paramter failed for devices having an int in the configuration option list.
this fixes a bug that only became apparent when wasm2js started to emit more interesting js code, which confused the pass.
[textfield] handle chrome autofill
reset editor width when disabling preview mode.
retain the horizontal viewport offset in the virtual viewport.
added  option to experimental features.
this prevents failing to write to these clusters from failing the entire write operation.
inspired by the direction @bjnath took in the rewrite of the glossary page in gh-16996, i moved many of the numpy/doc/*.py informative documents into their *.rst counterparts.
update fsner example readme.md.
light.hyperion: add priority attribute
sync latest parse-git-config api changes
import oimo using namespace
variable when running node e2e tests.
added default user-agent to the simple http client if not provided.
feat(angular): add styles and stylepreprocessoroptions to add dedicated styles config
fix infine non joined block stream in merge join
this pull request moves the logic from os::make_absolute() into the path module and fixes path joining for windows.
create step 1 database ui connection flow to allow users to pick the type of engine before entering credentials add on to #14881  includes db migration (follow approval process in sip-59)
improve "is file" check for littlefs support
fix mime tipe with jsonp
cluster name from sni
on prem server first commit
docapi-5203: direct i/o settings for mergetree descriptions.
adding my crkbd keymap and update my iris keymap readme with an extra pic
changes: make uvscalemap updates backwards-compatible fix error in morph targets if normal attributes are undefined (the frog rome model broke here) flatten a three.group if it only contains a single mesh try to eliminate more cases where names might be duplicated, breaking animation.
[rllib] apex doesn't take the value of `prioritized_replay` into account.
add tablecontainedrule
this pr is trying to fix compilation problems in gpu code with msvc 2015, in issue #439.
settings: add support for minimum/step/maximum in csettingcontrollist
fixed warning in the file.
this pr corrects the situation and starts a single mongodb instance with oplog enabled.
bug fixes
addition to #15537
document manage_inactivity function allow extruder_runout_prevent to work with all extruders use faster memcpy for copying coordinates fix some spelling in the configurations
fixes a part of #9325 fixes docstring parameters test for cross_decomposition and discriminant_analysis the issue is not closed, other packages still need to be checked.
add or edit tests to reflect the change.
fix create platform endpoint idempotency
makes more ci jobs compatible with github actions.
fix a bug that index url is not correctly saved in pipfile
add documentation for some of the add/sub/mul intrinsics
do not cache dictionary for dictget*/dicthas*
tweak git helper scripts
this fix tries to fix the issue raised in #13506 where int64 data types for bounds in tf.image.pad_to_bounding_box crashes.
add sections describing default and custom file names in file pipelines
change adds the packagefamilyname and productcode values to parsing by the manifest.
spotinst - fixing spelling error
gatsby-source-drupal: use basic auth credentials also when fetching remote files.
added belajar vue.js
cupertino localization step 3: in-place move some material tool around to make room for cupertino
add or edit tests to reflect the change.
add failing spec for dev tools extensions file
the good thing is all native modules are now update-to-date, and we no longer need to worry the build would break when we update a module or package to a later version.
visit statement and expression attributes
update glob-stream to 3.1.0. this versions supports the ability to set
add batch_size, max_length and min_length cli arguments for pretrain
scale retro scan lines initial
after careful discussion we decided we are not happy with the breaking change and will be making this configurable at the daemon level for users that do not want it to be sigkilled.
others others optimize inplace logic and fix bugs when run kernel that has args of vector
delete as::dependencies.constantize
this is a continuation of the work started in #17870. mksnapshot must be run with the same arguments that generated the original mksnapshot, otherwise crashes happen.
fix chrome tests with strict null checking enabled
it's no longer grey and doesn't have a gradient.
change abitest project to googletest executable
use source file version as default signature for the file whenever there is no dts emit for the file
date/time input broken (no input events) since 3.5.0
added actual link to the list items.
raise ansibleconnectionerror on winrm con errors
extract build variables for bitbucket pipeline
add or edit tests to reflect the change.
check prs with ci method without building firmware files the pull request is done against the latest dev branch only one feature/fix was added per pr.
feat(parse/query): add generic attr check for functions
closed my first pr so i could clean up my fork and submit a good pull.
the issue is that when imgur upload fails and generates error, the text was not selectable to be copied by user.
a pr for the only remaining ipv6 rule using state rather than conntrack, improves consistency of the rules.
this pr will add a new utm info module which allows the management of network interface address entries of the sophos utm.
allow nozzle clean to be called with limited axis.
added a googlevis lecture shell
adds description to abstract factory
make the room name clickable and open room info
add "-webkit-overflow-scrolling: touch" to book css for the page wrapper.
fix bug in apiserver service cluster cidr split
[moduleinterface] remove fallback behavior for arm64e -> arm64.
bump dependency highlight.js of types/markdown-it from 9.7.0 to 10.4.1
this pr is based on #6160
[fixed jenkins-15206] displaying <code>/people</code> can consume huge resources.
sync from piper @368734211
sets up initial detailed view for plugins
allow users to register additional languages via callback
add bfs to binary tree - fixes #2733
updated mxss iso layouts to remove an unnecessary key
added lex_attrs.pywithin lang/es/ to overwrite default getter for like_num and include spanish words for numbers.
use error code git_eauth for http auth failures
java api to get the size of specified input list of operations
correct two req set numbers, update error code comments to match ui experience in types/custom-functions-runtime/index.d.ts
add a test for memory usage.
add next.config.js file for static routes
i got it wrong on pr #13568.   m43's toggle and watch utilizes were not working because the parsed_pin_index function was not handling the default conditions properly.
resolves #12517 adds a decorator called _retry_if_error_with_cache_removed to implement the retry logic, when the read from cache fails.
link with libexecinfo on freebsd
add subscription items
support dynamic resources in raycall.
also some cleanup to conform to documentation style.
add tokenize as valid payment intent
this adds title case to the tutorial sidebar menu.
this webglrenderer webgl2.0 initial support pr is acceptable.
updated the skipped tests for cupertino package.
closes #12908 add a new setting to show/hide agent information on livechat widget.
@ember/utils is now the source of truth
this pr adds two additional tests for the ownership verifier.
revert "revert "roll foward "strip python wheel binary"""
move ols regressor to machine learning folder
this fixes an issue with extends where the instantiation of a class-like "constructor" function used as a base class fails when the construct signature returns a type parameter default.
[modal] make the modal style more naked
this is more hotfix than proper fix but this allows new clusters to be initialised even without ssl enabled.
more explicit warning in the ensemble documentation
this is related to #22116. a number of modules (reindex, etc) use the rest client.
d3.min & d3.max: ignore nan at [0].
if worker-offline event fails to send, give up and die peacefully
revert "revert "textfield constrained layout bug (#65966)" (#66027)"
new features apis add support for double grad computation in reduce sum op.
fixes to openssl provisioning script
these changes are needed so that we can queue non-actor tasks as they are received at the executing workers.
remove overloadchoicekind::basetype and re-introduce a couple of assertions.
hi oleksii, i've created a folder for ml in algorithms and added knn to it.
implement callbacks to collect worker stats in node manager.
all system examples now use the sx prop in the examples instead of the deprecated box props.
commit message: remove envoy.reloadable_features.overload_manager_disable_keepalive_drain_http2 multiplexing http connections (http/2, http/3) will always be sent a goaway when the overload action for disabling connection keepalive triggers.
use a single query for retrieving playcounts to speed up file listings
desktop plugins with a pure dart implementation should generate a plugin class in the generated registrant.
new features apis add iterabledataset support for multiprocess dataloader add paddle.io.iterabledataset base class add paddle.io.get_worker_info to get worker process information for data splitting in iterabledataset
ports propagating query execution errors from celery tasks properly
make visitor.id optional
decouple pipeline reductions from final reduction
doc add "what's new" and libraries.io links to readme
make history uuid a requirement for ops based recovery
remove six dependency
previously we'd narrow to object | null because a truthiness check applied to unknown is still unknown (and unknown includes null).
this pr fixes the above scenario by rerunning the spillback policy on tasks that have been assigned to the local node.
this fixes sr-11540 by just disfavoring overloads to closures with anonymous var that are function types with more than one argument that matches arguments of no-arg function types.
i refactored the error message built during routes creation.
add tslint dependency to fork-ts-checker-webpack-plugin package.json
d3: allow null comparator for pie.sort
closes ##21471 tests added / passed passes git diff upstream/master -u -- "*.py" | flake8 --diff whatsnew entry this error related to pr #21249 and #21227. this is never supported use case and to use file-handle in to_csv with compression, the file-object itself should be a compression archive such as: with gzip.open('test.txt.gz', 'wt') as f: pd.dataframe([0,1],index=['a','b'], columns=['c']).to_csv(f, sep='\t') regressed to 0.22 to_csv with support for zipfile.
add sparse block
this pr fixes the case where two applications use the same default storage key but they provide different custom color schemes.
fix margin boundary tests in the ri, dl, and il sequences.
fixed that and improved a few things, see the commits.
fix netty ssl file leak
[semantic-arc] implement ownershipmodeleliminator support for copy_value, destroy_value.
docs: migrate enhanced transfer list demo to emotion
fix wrong exception name.
ilm: add support for rolling over data streams  (#57295)
this pr introduces several enhancements to the native filters form and some new functionalities: it shows [untitled] on the left pane when no name is entered.
now, when collapsing and expanding the sidebar, the header stays in place and does not move.
update ondeviceui/addons to use emotion
it turns out that in rare cases, ensureresources can fail.
i hereby agree to the terms of the cla available at:  non-significant (changelog entry is not required) processors pipeline for reading from other storages.
add sleep callbacks in asyncify, and use them for sdl audio.
[unity] add new extractor
as shown here, the real default for master.service.type is clusterip, not loadbalancer.
we are not going to support 32-bit platforms.
the showdialog function takes a context parameter.
added riot and svelte to the list of supported frameworks and added the a11y addon to all of the framework examples.
provide type of key and value of key in std::out_of_range exception adds an additional requirement that key is streamable
follow the advice from the readme.
api: infer freq in fewer arithmetic ops
fix streampeerssl connect_to_stream w/ custom cert
this fixes three bugs with the formatting code (used by printf et al) .. well, arguably one of them is a new feature (one called for by the spec).
notes: fixed a rare crash on windows that could occur when emitting certain tray events.
backport of #25018 resolves #24942 for 10-x-y npm test passes tests are changed or added pr title follows semantic commit guidelines pr release notes describe the change in a way relevant to app developers, and are capitalized, punctuated, and past tense.
fix response with utf8 bom
i took another look at my original markdown to json conversion scripts and realized how painfully complicated i made my life while quickly writing them.
run npm run lint meteor provide a url to documentation or source code which provides context for the suggested changes:  also it should be reflected in official doc
revert "revert "fix the first frame logic in tracing and driver (#35297)" (#37027)"
google cloud storage support (storage backends)
to ship gatsby-source-wordpress we previously removed docker from our tests and used a live wp url.
kip files are used by some sysmodules, both homebrew and official.
this pr is a follow up fix to #44730. the pr implements a more thorough check to ensure references are non-mutable when they are narrowed by aliased conditional expressions.
fix infer from usage property assignment
added particle emitter sprite change test
add following awesome python packages: python-stop-words: get list of common stop words in various languages in python.
remove debugtracing mode from new reconciler (temporarily)
with this pr, we now support overload resolution when the tag of a tagged template has multiple signatures.
backport of #7380
rename base_name => basename for consistency
which might be helpful for other to understand the flow of generation of opcode.h
fix opaque blit with imported render targets
improve reinstall script so it doesn't get into broken state
the current pisink has a few issues that these commits address.
added the webclient mocking
core: don't implicit open missing socket fds on daemon reload
drop searchcontext from agg ctors
it cause buffer overflow in _py_string_to_number_with_underscores().
docs(tutorial): copy edits for part 4
support gradcheck on empty inputs, check it for cat with an empty variable.
win: add setthumbnailclip window api
source code for bael-2534 : determine if all elements are the same in a java list
[doc] complete outline of docs in gui system
recognize asar archive with unpacked files
our public python apis are often situated next to internal, private apis, with an indication to the user (in code) that those apis are private.
use mocked data source on spring boot test
bug: ensure that the index values obtained when calling describe on an empty categorical / object column is the same as that of an non empty column
@gretzky, i think what was happening was some of the commits in master were also in dev but not all of them.
add or edit tests to reflect the change.
tests that verify that passing a materialstatcolor to a buttontheme still allows you to specify the hovered, pressed, and focused text color of a given button.
added bson binary definition and a couple of indexing overloads of mongodb.
this is related to #27260. this commit moves the niotransport from :test:framework to a new nio-transport plugin.
fix missing versionadded/versionchanged for version 0.23, and also fix doc formatting.
2.1.x nodes.
raw refactor of harmonyexportimportedspecifierdependency to es6
add or edit tests to reflect the change.
removed friendstatus from client api
a massive set of updates to office.js, accumulating changes from the past ~6 months for excel, word, and onenote addition of the excelapi 1.7 api set, which adds some 400+ apis codegen updates to word and onenote apis (e.g., new codegen-ed interfaces for .set and .tojson methods) refactoring of enums into strongly-typed strings, for superior intellisense & compile-time safety.
secrets management file of elasticsearch username and password the value of secretsmanagementfile should point to the secrets management file absolute path.
re-add clear script button and context menu from ce5200b30e6d262905912c6571d51ba6f5979bd7
fix(command-publish): crash on publish w/o commits
py/nativeglue: remove unused mp_obj_new_cell from mp_fun_table.
plasma::seal was not synchronous in the previous version of arrow.
closes #20835 tests added / passed passes git diff upstream/master -u -- "*.py" | flake8 --diff whatsnew entry
the audio mixer tracks changes to the volume using the settings: tdesktop/telegram/sourcefiles/media/audio/media_audio.cpp lines 588 to 596 in 5000902 core::app().settings().songvolumechanges( ) | rpl::start_with_next([=] { qmetaobject::invokemethod(_fader, "onsongvolumechanged"); }, _lifetime); core::app().settings().videovolumechanges( ) | rpl::start_with_next([=] { qmetaobject::invokemethod(_fader, "onvideovolumechanged"); }, _lifetime); however it uses the internal value _volumesong to set the volume, so if the setting is updated before the mixer value, the previous value is used.
this pr requires  #21990 to be merged in first.
static saml conf some idps provide metadata urls, okta refers to this scheme as "dynamic" configuration.
fixes: #5971 by re adding the code generation command back in.
requirements filling out the template is required.
build-sys: work around --with-rootprefix= (empty) not producing /
update ds api to accept get from non-admins
allow a specified depth for flatten
ensure test_logging_config.test_reload_module works w spawn.
bump zha quirks version
add 'normalized' bool and accessor to bufferattribute array in interleavedbufferattribute
my plugin had been updated, so i  want to update it description
revert "revert "[dashboard] group by actor class (#10147)" (#10180)"
add get_addr() to retrieve the pointer of an snode.
additionally, fixed some typos and added a description to two parameters.
i started with the commit already in #4435: joshwillik@c77bed6 i rebased it on to master to make sure it still applied cleanly, which it does.
returns the after_key in composite aggregation response
some modules have more than one component, which is not recommended for maintenance.
in guaranteedupdate, retry on precondition check failure if we are working with cached data
the custom layout zone number is limited with 40 zones as like as a template.
bug fixes ops removed unreasonable code, and fixed an input uninitialized problem.
this pr gets rid of the singleton implementation of the valuessourceregistry i had been using for prototyping, and replaces it with something that behaves like we generally expect a registry to behave.
this pull request includes some correction (typos), bug fixes and stabilizations (have a look at the individual commit comments) i back ported which i think are useful to apply to marlin.
keyof does not include well known symbols
add support for lexical attributes (closes #2390)
support manually clearing the conpty buffer
allow wasm-only with emulated function pointers, except in shared modules
add new recipes for pages and layouts
update rel model code
use end_stream for each filter
failing test for setting head with a body
remove duplicate syntax tests for functions taking internal struct types
this pr adds a tooltip to the guidetool which shows the current offset of the guide that is changing.
improvements to cordova plugin set change detection algorithm
issue #757 helloworld and tests compiled by vs2010 based on ogles2 run correctly on win32.
description: changes a few coding cases to make import cleaner.
replace uses of _.kebabcase() with kebabhash().
process prewhere clause in optimize_skip_unused_shards
c# apps have x86 platform=x86 but c++ apps have win32
update node.js to v4.8.1.
closes #35889 tests added / passed passes black pandas passes git diff upstream/master -u -- "*.py" | flake8 --diff whatsnew entry in v1.1.2.rst
tree-wide: use strlen() to allocate buffer of constant size
update evmc to 7.2.0
some existing tests are modifying the caffe mode halfway through the execution, this is documented to be invalid:  if, for performance reasons, host memory is allocated through cudamallochost, changing the mode halfway can cause a pointer returned by cudamallochost to be freed by free(2), resulting in undefined behavior.
this spreads partial<t> instead of false | t.
create maze_search.py
thus fixing the incorrect error message.
fix: iron out some issues on the tag pages
update scripts under tools/ to use $map.increment and documentation examples.
with index.js imports a.glsl imports sub/a.glsl imports sub/b.glsl, the last import (using require(./b)) should be relative to sub, not asset.filepath (which is in the parent folder.
adds vue formulate to relevant sections of the readme.md file
don't checkout llvm-project when the llvm backend isn't built
on the way towards #602 note: i could not find as last_change for linux interfaces.
enable conv + (bias/bn) + leakyrelu fusion
description: adds reset reason to logs for debug purpose and to the body as well.
[wip] splitting sentencepiece and tokenizers dependencies
modify calcengine to use modrate in normal and scientific mode and remrate in programmer mode.
change to renamed dependency pyps4-2ndscreen 0.9.0
revert to more useful debug info
backport of: don't suggest placing use statements into expanded code #44215 stabilize tcpstream_connect_timeout #44563 stabilized iterator_for_each #44567 travis: move sccache to the us-west-1 region #44574 stabilized ord_max_min #44593 stabilized compiler_fences #44595 ci: upload/download from a new s3 bucket #44617 stabilized needs_drop #44639 stabilized vec_splice and modified splice tracking issue #44640 backport libs stabilizations to 1.21 beta #44824
when working with markdownfiles and deleting a directory the developer server will crash.
update surefire to 2.19 and checkstyle to
fixes #13102 did you read the contributor guideline, pull request section?
libcore/to_bytes.rs: fix iterbytes instances for pairs, triples to not cause ice when used
fix converttotypeonlyexport codefix from duplicating leading comments
--preload-file / --embed-file add some pre-js code to load the file.
adding service and stack grouping to docker inventory
[test] fix ttp tests failing on windows
grouped conda installation together.
this pr adds min, max and clamp as css functions to data types.
this will add support for google voice sms.
add painless datetime input documentation
resolves #409 when resource.pri is not present a winrt::hresult_error is thrown by the loader.
add a simple test tests/swoole_websocket_server/websocket_disconnect.phpt for testing disconnect method.
[ios] don't rely on main screen having only one screen mode - it's not true for iphones 11
fix lb and service leak in federated clusters in e2e tests
changing accidental contentrootpath link to webroot link on generic host doc.
decode the parent expansion for traits and enums in rustc_resolve, this was already being used for resolution in typeck avoid suggesting importing names with def-site hygiene, since it's often not useful add more tests r?
before: host port:     <none> command: /bin/bash #!/bin/bash set -euo pipefail # set by the node image unset kubeconfig trap 'kill $(jobs -p); exit 0' term # track the current state of the config after: host port:     <none> command: /bin/bash #!/bin/bash set -euo pipefail # set by the node image unset kubeconfig trap 'kill $(jobs -p); exit 0' term # track the current state of the config annotations when wrapping: annotations:  kubectl.kubernetes.io/desired-replicas: 1 openshift.io/deployer-pod.completed-at: 2018-07-31 22:47:15 +0000 utc openshift.io/deployer-pod.created-at: 2018-07-31 22:37:11 +0000 utc openshift.io/deployer-pod.name: test-3-deploy openshift.io/deployment-config.latest-version: 3 openshift.io/deployment-config.name: test openshift.io/deployment.phase: failed openshift.io/deployment.replicas: 0 openshift.io/deployment.status-reason: manual change openshift.io/encoded-deployment-config: {"kind":"deploymentconfig","apiversion":"apps.openshift.io/v1","metadata":{"name":"test","namespace":"clayton-dev","selflink":"/apis/apps.op... handle newlines for command, args, env, and annotations in kubectl describe wrapping
[yandex-maps] fix module format
refactor(querycontext): move df method utils to utils module
using the gi command provided by the gitignore plugin was causing a % to be shown in the terminal at the end of output.
as is described in #5667, the flannbasedmatcher doesn't work in python (linux and osx confirmed, python 2.7 and 3.5) at the moment.
$ hexo help list above command causes outofmemory.
fix koa-websocket to match with its implementation
feat: adding hmsetbuffer and hmgetbuffer to ioredis.redis contract
add the itemstyle to legend symbol.
add new parameters to ovirt_vms module to support high performance vm:  ovirt_vms ansible version 2.4.2
fix #1698 #1609 format the pull request title like [issue #123] fix unknownexception when host config not exist.
when using another backend, don't do the munging ahead of time
python.d.plugin: "default_run" option for python.d.conf added
rpm and deb package & add appveyor
format the pull request title like [issue #123] fix unknownexception when host config not exist.
i hereby agree to the terms of the cla available at:  check #3695 (comment) and further comments waiting for server start (via http pings) clickhouse-client added to clickhouse-server image, that is just a symlink but makes it possible to connect to the server running in the container in a natural way with simple sudo docker container exec -it container_name clickhouse-client.
opening up a new pr based on #10513 which uses @sgugger's new image_utils.py instead of torchvision for the image transformations, and is up-to-date with master.
groupby observed=true not working for aggregating a column
adding few more discussions links to faq-general - when should i use redux
this rule replaces incorrect yum commands, such as yum isntall into yum install and yum remove into yum uninstall.
if a promise is rejected, we should halt the entire application, which we can do by just calling abort(), which is more concise.
let socks5 proxy handle server host's domain name.
pp: also print bounds in paths with no generic params
add more default layers!!
implement text editor feature - surge
trimunreferencedreaders: sync before write lock
add atom.d.ts from atom-typescript project
1) duplicate slugs *within* a file are getting ignored
this adds the ignorecase option for createredirect in gatsby v2 (from #29714) but in a backwards compatible (without the breaking change of setting it to true by default)
this pr fixes #7169
changes: mpd now shows file_name instead of "none" as the "media_title" i only changed five lines in the mpd component, and, as far as i could see, no test-cases exist in regards to the mpd component, so i didn't actually run any test cases to make sure it works, but you are very welcome to test it locally in case i made some massive mistake, however it should work.
fix for #4357. the issue is that when a dependency (dep a) defined in resolutions (includes dep a, dep b) depends on another resolution (dep b), then it expects to match its own nested dep b to the top level resolution dep b. so the first part of this fix is "don't run resolutions map check when it's in flat mode", which is what threw the invariant warning.
remove useless configure for bindings-generator of lua
[runtime] only request abstract metadata when demangling to metadata.
adjusted crash_gen tool directory structure, added valgrind suppression file to expose client side memory leaks
tested all steps, removed some errors and inconsistencies, updated to rtm.
types for react-tag-autocomplete pkg
lsp: cache swc asts
[doc] import_role: mention version from which behavior changed
debug: do not render checkmark in view menu for the debug console
add domain to labels
network/aos/aos_* ansible version ansible 2.3.0 (fix-aos-login cc16903b5c) last updated 2017/02/20 13:08:42 (gmt -700) config file = configured module search path = default w/o overrides change the name of the session variable in all aos_* modules to align with that is returned by aos_login module
add cpp_extension en doc
note the relationship between binary and xentropy in the docs and provide an example that compares them
reject deallocation of read-only allocations
contribution to fix part of #15440 ensuring logisticregression methods pass numpy doc validation
add new test for jsx component return type error
fix: make osr work with viz compositor
cache results from queries that use scripts if they use only deterministic api calls.
add shift+enter for query execution
pull request to discuss what to do with the tests for internal eas (and one of the comments i still had in #21160) basically, i would keep the tests/extension/.. only for subclassing the base extension array test suite, and any array-specific functionality is tested in tests/arrays/.. (eg closed attribute for intervalarray, specific arithmetic behaviour for integerarray, ...) this means that when adding a test related to eas, we need to think about: is this testing something that is applicable to all eas?
this pr targets the next branch and not master you've included links to relevant issues, if any with #issue_num
doc add reference gpr and equation as comments
backports the following 1.4 fixes to 1.3 since atom is still on that version and hitting these bugs: #7209 #7980 /
fix some bugs in download_dependencies.sh
prevent restart of dispatcher w/o fault-tolerance
this pr fix #4181, re-benchmark maskrcnn, and provide valid link of ckpt and log for cityscapes.
add notarization to the build process
what this pr does / why we need it: in order to get istio to work with cockraochdb the port cannot be named grpc or it routes all traffic back to the pod that originated the traffic.
the use_lstm flag is currently broken for tf and was never supported for pytorch.
added deprecation warnings to dpgmm and vbgmm classes and other functions
this pr fix the last consistency issue between scorer and metrics function (#2096).
for changelog.
this is the last pr in the cable testing series (at least for now ): added channel_test generator added connection_test to app generator (unless --skip-action-cable) added "action cable testing" guides to "testing" guides added "action cable testing" as a highlight to 6.0 release notes (finally) added changelog entry.
rebased version of #4090 waiting for travis to be green, and merging
add edward to community page
packaging: bump go.d version to v0.24.0
geo: make shapebuilders implement writable
the following commits contain some cosmetic changes and a few optimisations for sql queries (specifically where conditions) generated for / used by smartplaylists.
this pr changes the existing base64_cipher.py with an easy to understand script that explains how the base64 algorithm works under the hood.
